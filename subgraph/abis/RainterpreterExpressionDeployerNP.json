{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "authoringMeta",
              "type": "bytes"
            }
          ],
          "internalType": "struct RainterpreterExpressionDeployerConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expected",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actual",
          "type": "bytes32"
        }
      ],
      "name": "AuthoringMetaHashMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dynamicLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "standardOpsLength",
          "type": "uint256"
        }
      ],
      "name": "BadDynamicLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedInputs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeInputs",
          "type": "uint256"
        }
      ],
      "name": "BadOpInputsLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DanglingSource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "DecimalLiteralOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DuplicateFingerprint",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "errorOffset",
          "type": "uint256"
        }
      ],
      "name": "DuplicateLHSItem",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entrypointIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputsLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOutputs",
          "type": "uint256"
        }
      ],
      "name": "EntrypointMinOutputs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expectedEntrypoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actualEntrypoints",
          "type": "uint256"
        }
      ],
      "name": "EntrypointMissing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entrypointIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inputsLength",
          "type": "uint256"
        }
      ],
      "name": "EntrypointNonZeroInput",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ExcessLHSItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ExcessRHSItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ExpectedLeftParen",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ExpectedOperand",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "HexLiteralOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "MalformedCommentStart",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "MalformedExponentDigits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "MalformedHexLiteral",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSources",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "MissingFinalSemi",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "NotAcceptingInputs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "OddLengthHexLiteral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "OperandOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constantsLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constantRead",
          "type": "uint256"
        }
      ],
      "name": "OutOfBoundsConstantRead",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackTopIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackRead",
          "type": "uint256"
        }
      ],
      "name": "OutOfBoundsStackRead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ParenOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ParserOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "sourceIndex",
          "type": "uint256"
        }
      ],
      "name": "SourceOffsetOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stackMaxIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeAllocation",
          "type": "uint256"
        }
      ],
      "name": "StackAllocationMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeOutputs",
          "type": "uint256"
        }
      ],
      "name": "StackOutputsMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StackOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedInputs",
          "type": "uint256"
        }
      ],
      "name": "StackUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StackUnderflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackHighwater",
          "type": "uint256"
        }
      ],
      "name": "StackUnderflowHighwater",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnclosedLeftParen",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnclosedOperand",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnexpectedComment",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actualBytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedInterpreterBytecodeHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnexpectedLHSChar",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actualOpMeta",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedOpMetaHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnexpectedOperand",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "actualPointers",
          "type": "bytes"
        }
      ],
      "name": "UnexpectedPointers",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnexpectedRHSChar",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnexpectedRightParen",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actualBytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedStoreBytecodeHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnknownWord",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "UnsupportedLiteralType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "WordSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WriteError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ZeroLengthDecimal",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "ZeroLengthHexLiteral",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "interpreter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "store",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "opMeta",
          "type": "bytes"
        }
      ],
      "name": "DISpair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "expression",
          "type": "address"
        }
      ],
      "name": "ExpressionAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "constants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "minOutputs",
          "type": "uint256[]"
        }
      ],
      "name": "NewExpression",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authoringMetaHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "authoringMeta",
          "type": "bytes"
        }
      ],
      "name": "buildParseMeta",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256[]",
          "name": "constants",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minOutputs",
          "type": "uint256[]"
        }
      ],
      "name": "deployExpression",
      "outputs": [
        {
          "internalType": "contract IInterpreterV1",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iInterpreter",
      "outputs": [
        {
          "internalType": "contract IInterpreterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256[]",
          "name": "constants",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minOutputs",
          "type": "uint256[]"
        }
      ],
      "name": "integrityCheck",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "integrityFunctionPointers",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "parse",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parseMeta",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId_",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b506040516200520c3803806200520c833981016040819052620000349162000449565b805160208201516001600160a01b03808316608081905290821660a0526040805163f933c72f60e01b815290516000929163f933c72f91600480830192869291908290030181865afa1580156200008f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b99190810190620004fa565b9050604051806080016040528060528152602001620051ba6052913980519060200120818051906020012014620001105780604051634c1af20160e11b815260040162000107919062000568565b60405180910390fd5b823f7f4ad8acb587318aa2d5bd458ca2e144d6a121dd56148f392b1991f7e06ab4792f81146200015757604051630eec293f60e11b81526004810182905260240162000107565b823f7fd6130168250d3957ae34f8026c2bdbd7e21d35bb202e8540a9b3abcbc232ddb681146200019e5760405163cc0415fd60e01b81526004810182905260240162000107565b604086015180516020909101207fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb18114620001f0576040516343d0fe5760e11b81526004810182905260240162000107565b7f1788931a083e1bfada6cb062b5426ea97c7866b814b4d1173909e4018f2122f1333088888b604001516040516200022d95949392919062000584565b60405180910390a1604080518082018252601581527f4945787072657373696f6e4465706c6f79657256320000000000000000000000602082015290516365ba36c160e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91309184916365ba36c191620002a89160040162000568565b602060405180830381865afa158015620002c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ec9190620005cd565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152306044820152606401600060405180830381600087803b1580156200033957600080fd5b505af11580156200034e573d6000803e3d6000fd5b5050505050505050505050620005e7565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200038d57600080fd5b919050565b60005b83811015620003af57818101518382015260200162000395565b50506000910152565b600082601f830112620003ca57600080fd5b81516001600160401b0380821115620003e757620003e76200035f565b604051601f8301601f19908116603f011681019082821181831017156200041257620004126200035f565b816040528381528660208588010111156200042c57600080fd5b6200043f84602083016020890162000392565b9695505050505050565b6000602082840312156200045c57600080fd5b81516001600160401b03808211156200047457600080fd5b90830190606082860312156200048957600080fd5b604051606081018181108382111715620004a757620004a76200035f565b604052620004b58362000375565b8152620004c56020840162000375565b6020820152604083015182811115620004dd57600080fd5b620004eb87828601620003b8565b60408301525095945050505050565b6000602082840312156200050d57600080fd5b81516001600160401b038111156200052457600080fd5b6200053284828501620003b8565b949350505050565b600081518084526200055481602086016020860162000392565b601f01601f19169290920160200192915050565b6020815260006200057d60208301846200053a565b9392505050565b6001600160a01b038681168252858116602083015284811660408301528316606082015260a060808201819052600090620005c2908301846200053a565b979650505050505050565b600060208284031215620005e057600080fd5b5051919050565b60805160a051614b9f6200061b60003960008181610190015261044d0152600081816101f1015261042a0152614b9f6000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c19423bc11610076578063f0cfdd371161005b578063f0cfdd37146101ec578063fab4087a14610213578063ffc257041461023457600080fd5b8063c19423bc1461018b578063cbb7d173146101d757600080fd5b80638d614591116100a75780638d61459114610135578063a600bd0a1461014a578063b6c7175a1461015d57600080fd5b806301ffc9a7146100c357806331a66b65146100eb575b600080fd5b6100d66100d1366004614405565b61023c565b60405190151581526020015b60405180910390f35b6100fe6100f936600461461b565b6102d5565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100e2565b61013d61047c565b6040516100e29190614711565b61013d610158366004614724565b61048b565b6040517fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb181526020016100e2565b6101b27f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b6101ea6101e536600461461b565b610547565b005b6101b27f000000000000000000000000000000000000000000000000000000000000000081565b610226610221366004614724565b610570565b6040516100e2929190614794565b61013d61058d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f31a66b650000000000000000000000000000000000000000000000000000000014806102cf57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60008060006102e5868686610547565b7f4a48f556905d90b4a58742999556994182322843167010b59bf8149724db51cf3387878760405161031a94939291906147c2565b60405180910390a18451865160009182916103bd916020020160400160408051602c83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019091527effff0000000000000000000000000000000000000000000000000000000000600190920160e81b919091167f61000080600c6000396000f3000000000000000000000000000000000000000017815290600d820190565b915091506103cc8189896105ae565b60006103d7836105ec565b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201529192507fce6e4a4a7b561c65155990775d2faf8a581292f97859ce67e366fd53686b31f1910160405180910390a17f000000000000000000000000000000000000000000000000000000000000000095507f00000000000000000000000000000000000000000000000000000000000000009450925050505b93509350939050565b606061048661065a565b905090565b805160208201206060907fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb1811461051c576040517f26cc0fec0000000000000000000000000000000000000000000000000000000081527fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb16004820152602481018290526044015b60405180910390fd5b6000838060200190518101906105329190614822565b905061053f816002610837565b949350505050565b61056b604051806080016040528060528152602001614a5e60529139848484610ecb565b505050565b6060806105848361057f61058d565b61128a565b91509150915091565b606060405180610120016040528060ef8152602001614ab060ef9139905090565b80600182510160200281015b808210156105d55781518552602094850194909101906105ba565b505061056b6105e18390565b848451602001611ae4565b6000806000600d9050835160e81c61ffff168101846000f0915073ffffffffffffffffffffffffffffffffffffffff8216610653576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b60606143fb60006029905080915060006040518061054001604052808467ffffffffffffffff1667ffffffffffffffff168152602001611b4a8152602001611bc48152602001611c2b8152602001611c358152602001611c2b8152602001611c2b8152602001611c2b8152602001611c2b8152602001611c2b8152602001611c3f8152602001611c618152602001611c8b8152602001611cad8152602001611c3f8152602001611cad8152602001611cad8152602001611cb78152602001611cc18152602001611cad8152602001611cad8152602001611cca8152602001611cca8152602001611cad8152602001611cc18152602001611cc18152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cc18152602001611ce18152602001611ceb8152602001611ceb8152509050606081905060298151146108255780516040517fc8b56901000000000000000000000000000000000000000000000000000000008152600481019190915260248101849052604401610513565b61082e81611cfa565b94505050505090565b6060808060008060ff861667ffffffffffffffff81111561085a5761085a61444e565b604051908082528060200260200182016040528015610883578160200160208202803683370190505b5093508560ff1667ffffffffffffffff8111156108a2576108a261444e565b6040519080825280602002602001820160405280156108cb578160200160208202803683370190505b509250865b805115610940576000806108e383611d8b565b89519095509193509150829088908690811061090157610901614988565b602002602001019060ff16908160ff16815250508086858151811061092857610928614988565b602090810291909101015250506001909101906108d0565b5060006005885102602183026001010190508067ffffffffffffffff81111561096b5761096b61444e565b6040519080825280601f01601f191660200182016040528015610995576020820181803683370190505b50955081602087015360005b828110156109d357806021026021880101816020026020018701518153602080830287010151600191820152016109a1565b50506021028401600601905060005b8651811015610ec1576000805b6000806000878581518110610a0657610a06614988565b60200260200101519050600080610a568b8881518110610a2857610a28614988565b602002602001015160ff168f8a81518110610a4557610a45614988565b602002602001015160000151611ff1565b9250905060056000877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84018616600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff919091160101919091028a01805190955062ffffff84811693501690508015610e6857818103610c1b576040517f59293c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600190970196610e598460007f5555555555555555555555555555555555555555555555555555555555555555600183901c167f555555555555555555555555555555555555555555555555555555555555555583160191507f3333333333333333333333333333333333333333333333333333333333333333600283901c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f600483901c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600883901c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff601083901c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff602083901c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff604083901c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff608083901c166fffffffffffffffffffffffffffffffff8316019150819050919050565b870196505050505050506109ef565b8195505050505060188b8681518110610e8357610e83614988565b60200260200101516020015160ff16901b602086901b17821791506000600160056001901b03199050828183511617825250505050506001016109e2565b5050505092915050565b6000610ed684612013565b90508082511115610f205781516040517ffd9e1af4000000000000000000000000000000000000000000000000000000008152600481019190915260248101829052604401610513565b6020850160005b82811015611281576000610f3b8783612031565b90506000610f49888461204a565b90508551831015611019578115610f96576040517fee8d10810000000000000000000000000000000000000000000000000000000081526004810184905260248101839052604401610513565b858381518110610fa857610fa8614988565b6020026020010151811015611019578281878581518110610fcb57610fcb614988565b60200260200101516040517ff7dd619f000000000000000000000000000000000000000000000000000000008152600401610513939291909283526020830191909152604082015260600190565b600061102789848a51612063565b9050600060186110378b876120cf565b03905060006110468b87612100565b600402820190505b808210156111cb578151601c81901a60020288015162ffffff821691601d1a9060f01c60008061107c888685565b915091508382146110d05760808801516040517fddf5607100000000000000000000000000000000000000000000000000000000815260048101919091526024810183905260448101859052606401610513565b875182111561112257608088015188516040517f2cab6bff0000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101839052606401610513565b87518290038089526040890151111561118457608088015188516040808b015190517f1bc5ab0f000000000000000000000000000000000000000000000000000000008152600481019390935260248301919091526044820152606401610513565b875181018089526020890151101561119e57875160208901525b60018111156111af57875160408901525b505050608085018051600101905250506004919091019061104e565b6111d58b87612119565b8360200151146112295782602001516111ee8c88612119565b6040517f4d9c18dc00000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610513565b825184146112705782516040517f4689f0b3000000000000000000000000000000000000000000000000000000008152600481019190915260248101859052604401610513565b505060019093019250610f27915050565b50505050505050565b6060806000611297612132565b855190915015611ac5578451600090602087810191880101825b81831015611a22576001835160001a1b905060018560e00151166000036115b4576f07fffffe80000000000000000000000081161561145c5760e085015160021615611352578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f5520a51700000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b6f07fffffe0000000000000000000000008116156113fe57611384836f07fffffe0000000003ff200000000000612283565b945092506000806113958787612334565b9150915081156113f7576040517f53e6feba0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c8703016004820152602401610513565b505061141f565b61141c60018401836f07fffffe0000000003ff2000000000006123b5565b92505b60a085018051600101905260e0850180516022177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef1690526112b1565b6401000026008116156114ad5761147c60018401836401000026006123b5565b60e0860180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd16905292506112b1565b6704000000000000008116156114f65760e0850180516021177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed169052600192909201916112b1565b6580000000000081161561158a5760108560e001511660000361156e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517fedad0c5800000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b61157889846123e1565b60e086018051600217905292506112b1565b8883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00161131d565b6f07fffffe0000000000000000000000008116156117495760e085015160021615611634578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f4e803df600000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b61164e836f07fffffe0000000003ff200000000000612283565b80955081945050506000806143fb61166c8b896101a00151896124ed565b92509250925082156116af57600061168e8961018001518e898563ffffffff16565b909750905061169e898483612920565b5060e0880180516004179052611736565b6116b98888612a5d565b909350915082156116de576116d088600084612920565b6116d988612ad8565b611736565b6040517f81bd48db0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08d8803016004820152602401610513565b50505060e08501805160021790526112b1565b60e08501516004161561183f576501000000000081166000036117be576040517f23b5c6ea0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8503016004820152602401610513565b60608501805160001a60030190819053603b811115611809576040517f6232f2d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060e0850180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91690526001909201916112b1565b65020000000000811615611910576000606086015160001a9050806000036118b9576040517f7f9db5420000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8603016004820152602401610513565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd01606086018181538160048201015160001a8260028301015160f01c600101535061190486612ad8565b506001909201916112b1565b6401000026008116156119305761147c60018401836401000026006123b5565b6703ff0000000000008116156119665761194b858a85612b3b565b925061195685612ad8565b60e08501805160021790526112b1565b6510000000000081161561198a5761197f858a85612c8d565b6001909201916112b1565b6708000000000000008116156119c0576119a5858a85612c8d565b6119ae85612f60565b601860e08601526001909201916112b1565b658000000000008116156119f8578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001611539565b8883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016115ff565b818314611a5b576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60e085015160201615611ac0576040517ff06f54cf0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8503016004820152602401610513565b505050505b611ace81613184565b611ad7826132bc565b92509250505b9250929050565b6020810680820384015b80851015611b09578451845260209485019490930192611aee565b508015611b44577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600882021c808451168119865116178452505b50505050565b8151600090819083908110611ba257608085015185516040517feaa16f330000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101829052606401610513565b8460400151811115611bb657604085018190525b506000946001945092505050565b60008083606001518310611c1e57608084015160608501516040517feb7894540000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101849052606401610513565b5060009360019350915050565b5060009160019150565b60101c9160019150565b600080601083901c80611c53576001611c55565b805b95600195509350505050565b600080601083901c80611c75576002611c77565b805b90506002810615611c535780600101611c55565b600080601083901c80611c9f576001611ca1565b805b95600095509350505050565b5060029160019150565b5060039160019150565b50600191829150565b600080601083901c60018111611c53576002611c55565b5060029160009150565b60046001808316019250929050565b60606000825160020267ffffffffffffffff811115611d1b57611d1b61444e565b6040519080825280601f01601f191660200182016040528015611d45576020820181803683370190505b50905061ffff80196020850160208651028101600285015b81831015611d7f57805183518616908516178152602090920191600201611d5d565b50939695505050505050565b60008060606000805b60ff811015611f44576000805b8751811015611dd357600080611dc3858b8581518110610a4557610a45614988565b5093909317925050600101611da1565b506000600182901c7f555555555555555555555555555555555555555555555555555555555555555590811690831601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff9190911601905083811115611f2b578093508296508195505b87518103611f3a575050611f44565b5050600101611d94565b5084516040805192909103808352600101602002820190529050600080805b8651811015611fe757600080611f888860ff168a8581518110610a4557610a45614988565b91509150848216600003611f9f5793811793611fdd565b888381518110611fb157611fb1614988565b6020026020010151868581518110611fcb57611fcb614988565b60209081029190910101526001909301925b5050600101611f63565b5050509193909250565b60008082600052836020536021600020905060018160001a1b91509250929050565b6000815160000361202657506000919050565b506020015160001a90565b60008061203e84846120cf565b5160021a949350505050565b60008061205784846120cf565b5160031a949350505050565b61209c6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001606081525090565b506040805160c081018252838152602081018490529081019290925260608201526000608082015260a081019190915290565b6000806120db84612013565b600202600101905060006120ef8585613331565b949091019093016020019392505050565b60008061210d84846120cf565b5160001a949350505050565b60008061212684846120cf565b5160011a949350505050565b6121ab604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051806101e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016010600817815260200160008152602001600081526020016000815260200160008152602001612220613a2960101b61377d1790565b815260200161224a61416060401b613fef60301b613e9360201b613d8560101b613ce81717171790565b815260006020918201819052604080518381528084018252845291830181905290820181905260a082018190526101c082015292915050565b8151600090819060015b8419600183831a1b16156020821016156122a95760010161228d565b9485019460208190036008810292831c90921b9161232b57604080516020810184905201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fe47fe8b700000000000000000000000000000000000000000000000000000000825261051391600401614711565b50939492505050565b6000806123418484612a5d565b909250905081611add575061010083018051604080518581526020808220938252810190915260a086015160ff80821660089290921c1601601081901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009390931692909217179091526001019250929050565b60005b6000826001865160001a1b161183851016156123d9576001840193506123b8565b509192915050565b805160009060f01c612f2a811461244a576040517f3e47169c0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858503016004820152602401610513565b835160029390930192602a90602f90860160200160005b806124a7575b81871084885160001a1415161561248357600187019650612467565b6001870196508187101583885160001a1417156124a257506001958601955b612461565b50808611156124e2576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509395945050505050565b6001838101805160009283926143fb92602160ff909116028801600681019201845b8183101561290c576001830151602190930180519093600090819060ff168180612539838f611ff1565b9150915060008761277d60018503891660007f5555555555555555555555555555555555555555555555555555555555555555600183901c167f555555555555555555555555555555555555555555555555555555555555555583160191507f3333333333333333333333333333333333333333333333333333333333333333600283901c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f600483901c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600883901c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff601083901c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff602083901c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff604083901c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff608083901c166fffffffffffffffffffffffffffffffff8316019150819050919050565b016005028b015195505062ffffff90811693508416830391506127bf9050575060019850601b81901a9750601c1a8a901c61ffff169550610473945050505050565b600183901c7f555555555555555555555555555555555555555555555555555555555555555590811690841601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff91909116018401935050505061250f565b506000998a99508998509650505050505050565b612929836133a9565b60e08301805160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff79190911681179091528301516021600091821a850101805190911a600101815350825180516060850151600090811a86016061018051929361ffff85169360088504909103601c0192600191901a018153600060038201537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe30180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690911790528451602090920183821b176018820185901b179182905260e0819003612a56578451604080518088526020601084901b81178252810190915281517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000161790525b5050505050565b61010082015161012083015160008381526020808220919384939290911c91600160ff84161b80821615612ac35761ffff83165b8015612ac1578360201c8503612ab4576001965061ffff8460101c169550612ac1565b51925061ffff8316612a91565b505b17610120909601959095525090939092509050565b6000606082015160001a905080600003612b375760208201805160001a600101908181535080603f0361056b576040517fa25cba3100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006143fb6000806000612b5588610180015188886133f3565b8981038a206101408d015194985092965090945092507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016906001600083811a82901b92909190831615612bfb576101608c015160101c5b8015612bf95780517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000081168603612be8576001935050612bf9565b505160019091019061ffff16612bad565b505b6101608c015161ffff16612c21600184612c155782612c19565b8383035b8f9190612920565b5081612c7d57604080518082019091526101608d015160101c851781526000612c4f8d8a8a63ffffffff8e16565b6020830152506101608d018051600161ffff9091160160109290921b9190911790526101408c018051841790525b50929a9950505050505050505050565b606083015160001a8015612cf3576040517f6fb11cdc0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848403016004820152602401610513565b50612cfd836133a9565b60e083018051603060089182161790915260a0840151602085015160ff8083169360f89290921c9290911c1681036000819003612dc65760088660e0015116600003612d9b576040517fab1d3ea70000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b90820160f881901b60208701526101c0860151909190612dbb90846136b6565b6101c0870152612e8f565b6001811115612e8f5780831015612e2f576040517f78ef27820000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b80831115612e8f576040517f43168e680000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b8082036001016020601083028101905b81811015612f4b5760a08901516020848b01015190821c61ffff169060001a60015b818111612f3a5760208306601c03612eda57915160f01c915b82516101c08d015160019190911a90612ef390826136fe565b6101c08e0152612f248284148015612f0b5750886001145b612f16576001612f18565b8a5b6101c08f015190613745565b6101c08e01525060049290920191600101612ec1565b505060019093019250601001612e9f565b5050505060081b60a090940193909352505050565b60e0810180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf16905260c0810151602082015160f082811c9160001a60010190829003612fda576040517fa806284100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080856101c001519050855161ffff815160101c165b801561300857805190915060101c61ffff16612ff1565b50604051602188018051919450601c830192916004916024870191600090811a805b8a8310156130f05760048202860195506004878903045b8082111561305f57965161ffff16601c810198509690036007613041565b506004810297889003805186529794909401938103865b60078211156130bb575160101c61ffff1680518652601c909501947ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff990910190613076565b81156130d6575160101c61ffff168051865260048202909501945b505050600191820180519092919091019060001a8061302a565b50505050818652600486019350846001600484040360181b1763ffffffff19855116178452601f19601f820116604052505050506001846001901b61313591906149e6565b851682851b60f06131478760106149f9565b901b171760c08701526040805160208082528082018352908852600090880181905290870181905260a087018190526101c0870152505050505050565b60c08101518151516060919060f082901c90602081146131d0576040517f858f2dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051935060208401601083046000818353506001600885048301810192839101600080805b8881101561322f5789811c61ffff81165163ffff0000601092831b16811760e01b8786015284019360f08390031b9290921791016131f6565b50825117909152878203017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08181018952908801601f011660405260005b828110156132b0576002810288016003015161ffff90811683018051602060f082901c019260e09190911c16906132a5838284611ae4565b50505060010161326d565b50505050505050919050565b6101608101516040805161ffff8316808252602080820283019081019093529092909160109190911c90835b808211156133285760208301518252915161ffff16917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101906132e8565b50505050919050565b6002810282016003015161ffff16600061334a84612013565b8451909150600560028302840101908111806133665750818410155b156133a15784846040517fd3fc97bd000000000000000000000000000000000000000000000000000000008152600401610513929190614a0c565b505092915050565b60208101805160001a6001810182015160001a61056b578251805160a085018051600861ffff939093169290920460200390920160106001601e84901a860301021b179052505050565b80516143fb9060009081908190600181831a1b6703ff00000000000081161561361557600182811a1b7ffffffffffffffffffffffffffffffffffeffffffffffffffffff000000000000828217016134cf5760028801806c7e0000007e03ff0000000000005b806001835160001a1b161561347357600182019150613459565b508a5161ffff8d16908c01602001808311156134bb576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50985090965094508493506136ad92505050565b876001810160006703ff0000000000006c200000002000000000000000005b816001855160001a1b1615613508576001840193506134ee565b806001855160001a1b161561353957600184019392505b816001855160001a1b16156135395760018401935061351f565b5050801580159061355857508060030182118061355857508060010182145b156135b5576040517f013b2aaa0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08d8303016004820152602401610513565b8b5161ffff60108f901c16908d0160200180841115613600576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50995091975095508594506136ad9350505050565b87518801602001808810613655576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fb0e4e5b30000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8a03016004820152602401610513565b93509350935093565b60006136c28383613745565b9250507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff821660ff600884811c919091168301901b1792915050565b600060ff83168281101561373e576040517f04671d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050900390565b600060ff808416830190600885901c16601085901c808311156137655750815b601081901b600883901b841717935050505092915050565b600082820360408111156137e3576040517fff2f59490000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b80600003613843576040517fc75cd5090000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b600281066001036138a6576040517fd76d9b570000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830160005b858210613a1f578151600090811a906001821b906703ff00000000000082161561391957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd082016139e9565b6c7e00000000000000000000000082161561395757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa982016139e9565b687e000000000000000082161561399157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc982016139e9565b6040517f69f1e3e60000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8703016004820152602401610513565b831b959095179450507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909101906004016138cc565b5050509392505050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8101516000908190603090829080821a878703600381118015613a7e57506001821b6c200000002000000000000000001615155b15613aa057600488039550600a858460011a0302858460021a03019350613b4c565b8260011a9150600281118015613ac757506001821b6c200000002000000000000000001615155b15613adf57600388039550848360021a039350613b4c565b8015613af45760018803955060009350613b4c565b6040517ffa65827e0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8b03016004820152602401610513565b5050505b858310158015613b605750604d81105b15613ba557825160001a829003600a82900a0293909301927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191600101613b50565b858310613a1f57825160001a8290036001811115613c18578784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f8f2b5ffd00000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b600a82900a8102858101861115613c53578885037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613be3565b9490940193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201915b858310613a1f57825160001a60308114613cbd578784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613be3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191613c7f565b80516000908190600190821a1b7ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008101613d74576040517ff8216c550000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b83600092509250505b935093915050565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613e8557613dd460018601826401000026006123b5565b94506000613de6888861ffff896142fe565b9096509050613dfb86836401000026006123b5565b8051909650600160009190911a1b92506740000000000000008314613e75578686037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f722cd24a00000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b6001860194509250613d7d915050565b846000935093505050613d7d565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613f9457613ee260018601826401000026006123b5565b94506000613ef3888860ff896142fe565b909650905080613f0987846401000026006123b5565b96506000613f1a8a8a60ff8b6142fe565b909850600881901b92909217919050613f3988856401000026006123b5565b8051909850600160009190911a1b94506740000000000000008514613f82578888037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b506001870195509350613d7d92505050565b8585037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f24027dc400000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613e855761403e60018601826401000026006123b5565b80519095506001600091821a1b92507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000830161407c575060006140a1565b61408988886001896142fe565b909650905061409e86836401000026006123b5565b95505b85516001600091821a1b93507fffffffffffffffffffffffffffffffffffffffffffffffffc00000000000000084016140dc57506000614101565b6140e9898960018a6142fe565b90975090506140fe87846401000026006123b5565b96505b8651600160009190911a81901b945081901b8217674000000000000000851461414e578888037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b6001880196509450613d7d9350505050565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613f94576141af60018601826401000026006123b5565b945060006141c0888860ff896142fe565b90965090506141d586836401000026006123b5565b80519096506001600091821a1b93507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000840161421357506000614238565b614220898960018a6142fe565b909750905061423587846401000026006123b5565b96505b86516001600091821a1b94507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000850161427357506000614298565b6142808a8a60018b6142fe565b909850905061429588856401000026006123b5565b97505b8751600160009190911a1b9450600882901b8317600982901b1767400000000000000086146142eb578989037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b6001890197509550613d7d945050505050565b80516000908190600190821a1b7fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000810161435c578584037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613fba565b6143fb600080600061436f8b8b8a6133f3565b935093509350935060006143888b85858863ffffffff16565b9050898111156143ea576040517f7480c7840000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c8b03016004820152602401610513565b909b909a5098505050505050505050565b614403614a2e565b565b60006020828403121561441757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461444757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156144a0576144a061444e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156144ed576144ed61444e565b604052919050565b600067ffffffffffffffff82111561450f5761450f61444e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261454c57600080fd5b813561455f61455a826144f5565b6144a6565b81815284602083860101111561457457600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156145ab576145ab61444e565b5060051b60200190565b600082601f8301126145c657600080fd5b813560206145d661455a83614591565b82815260059290921b840181019181810190868411156145f557600080fd5b8286015b8481101561461057803583529183019183016145f9565b509695505050505050565b60008060006060848603121561463057600080fd5b833567ffffffffffffffff8082111561464857600080fd5b6146548783880161453b565b9450602086013591508082111561466a57600080fd5b614676878388016145b5565b9350604086013591508082111561468c57600080fd5b50614699868287016145b5565b9150509250925092565b60005b838110156146be5781810151838201526020016146a6565b50506000910152565b600081518084526146df8160208601602086016146a3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061444760208301846146c7565b60006020828403121561473657600080fd5b813567ffffffffffffffff81111561474d57600080fd5b61053f8482850161453b565b600081518084526020808501945080840160005b838110156147895781518752958201959082019060010161476d565b509495945050505050565b6040815260006147a760408301856146c7565b82810360208401526147b98185614759565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff851681526080602082015260006147f160808301866146c7565b82810360408401526148038186614759565b905082810360608401526148178185614759565b979650505050505050565b6000602080838503121561483557600080fd5b825167ffffffffffffffff8082111561484d57600080fd5b818501915085601f83011261486157600080fd5b815161486f61455a82614591565b81815260059190911b8301840190848101908883111561488e57600080fd5b8585015b8381101561497b578051858111156148aa5760008081fd5b86016060818c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156148e05760008081fd5b6148e861447d565b89830151815260408084015160ff811681146149045760008081fd5b828c015291830151918883111561491b5760008081fd5b82840193508d603f85011261493257600092508283fd5b8a840151925061494461455a846144f5565b8381528e828587010111156149595760008081fd5b614968848d83018488016146a3565b9082015285525050918601918601614892565b5098975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156102cf576102cf6149b7565b808201808211156102cf576102cf6149b7565b604081526000614a1f60408301856146c7565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe1b4a1bc41c2b1c351c2b1c2b1c2b1c2b1c2b1c3f1c611c8b1cad1c3f1cad1cad1cb71cc11cad1cad1cca1cca1cad1cc11cc11cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cc11ce11ceb1ceb010f00c20804b001180500014014144080040101008082020092020040a100148024163082aae700108f616d2200e3c6181b0025fdfc2100a1cef21c00e7762b2500229a7e0b103e260a0600ce656d0220f12be70c0035f0270900da2bcc14001874cb0700319e1e2300c17cd61100d0684c05007c4b951f000859681e00ce62340d0021f48512009046c219008710c503002c340815002eaa701740b3357a1a00e6d3420800f0dfe2040080a95b0e004e5b480a107012321840438b4b24008a3266281043e2f6011056328a1d00ec53cd0f006e69fa1000ac8cde2600f2c1681300b8577627103fa0c82000c6ff510c150c5d0c980d7c0db60de50e140e140e630e920ef40f7c0ffe10121068107c109110ab10b610ca10df115c11a711cd11ef120612061251129c12e712e713321332137d13c814131413145e1545157815cf",
    "sourceMap": "3758:7282:77:-:0;;;5101:2271;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5263:18;;5340:12;;;;-1:-1:-1;;;;;5363:26:77;;;;;;;5399:14;;;;;5602:30;;;-1:-1:-1;;;5602:30:77;;;;5219:26;;5363;5602:28;;:30;;;;;5219:26;;5602:30;;;;;;;5363:26;5602:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5602:30:77;;;;;;;;;;;;:::i;:::-;5570:62;;5687:24;;;;;;;;;;;;;;;;;5677:35;;;;;;5656:16;5646:27;;;;;;:66;5642:140;;5754:16;5735:36;;-1:-1:-1;;;5735:36:77;;;;;;;;:::i;:::-;;;;;;;;5642:140;5945:24;;2209:66;5992:44;;5988:247;;6174:50;;-1:-1:-1;;;6174:50:77;;;;;3231:25:277;;;3204:18;;6174:50:77;3085:177:277;5988:247:77;6381:18;;2369:66;6422:32;;6418:223;;6592:38;;-1:-1:-1;;;6592:38:77;;;;;3231:25:277;;;3204:18;;6592:38:77;3085:177:277;6418:223:77;6920:20;;;;6910:31;;;;;;;2529:66;6955:46;;6951:129;;7024:45;;-1:-1:-1;;;7024:45:77;;;;;3231:25:277;;;3204:18;;7024:45:77;3085:177:277;6951:129:77;7095:94;7103:10;7123:4;7138:11;7160:5;7168:6;:20;;;7095:94;;;;;;;;;;:::i;:::-;;;;;;;;7302:37;;;;;;;;;;;;;;;;7270:70;;-1:-1:-1;;;7270:70:77;;254:42:55;;7200:41:77;;7263:4;;254:42:55;;7270:31:77;;:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7200:165;;-1:-1:-1;;;;;;7200:165:77;;;;;;;-1:-1:-1;;;;;4521:15:277;;;7200:165:77;;;4503:34:277;4553:18;;;4546:34;7350:4:77;4596:18:277;;;4589:43;4438:18;;7200:165:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5178:2194;;;;;;5101:2271;3758:7282;;14:127:277;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:277;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:250::-;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:277;552:16;;545:27;328:250::o;583:698::-;636:5;689:3;682:4;674:6;670:17;666:27;656:55;;707:1;704;697:12;656:55;730:13;;-1:-1:-1;;;;;792:10:277;;;789:36;;;805:18;;:::i;:::-;880:2;874:9;848:2;934:13;;-1:-1:-1;;930:22:277;;;954:2;926:31;922:40;910:53;;;978:18;;;998:22;;;975:46;972:72;;;1024:18;;:::i;:::-;1064:10;1060:2;1053:22;1099:2;1091:6;1084:18;1145:3;1138:4;1133:2;1125:6;1121:15;1117:26;1114:35;1111:55;;;1162:1;1159;1152:12;1111:55;1175:76;1248:2;1241:4;1233:6;1229:17;1222:4;1214:6;1210:17;1175:76;:::i;:::-;1269:6;583:698;-1:-1:-1;;;;;;583:698:277:o;1286:957::-;1424:6;1477:2;1465:9;1456:7;1452:23;1448:32;1445:52;;;1493:1;1490;1483:12;1445:52;1520:16;;-1:-1:-1;;;;;1585:14:277;;;1582:34;;;1612:1;1609;1602:12;1582:34;1635:22;;;;1691:4;1673:16;;;1669:27;1666:47;;;1709:1;1706;1699:12;1666:47;1742:2;1736:9;1784:4;1776:6;1772:17;1839:6;1827:10;1824:22;1819:2;1807:10;1804:18;1801:46;1798:72;;;1850:18;;:::i;:::-;1886:2;1879:22;1925:33;1955:2;1925:33;:::i;:::-;1917:6;1910:49;1992:42;2030:2;2026;2022:11;1992:42;:::i;:::-;1987:2;1979:6;1975:15;1968:67;2074:2;2070;2066:11;2060:18;2103:2;2093:8;2090:16;2087:36;;;2119:1;2116;2109:12;2087:36;2156:55;2203:7;2192:8;2188:2;2184:17;2156:55;:::i;:::-;2151:2;2139:15;;2132:80;-1:-1:-1;2143:6:277;1286:957;-1:-1:-1;;;;;1286:957:277:o;2248:335::-;2327:6;2380:2;2368:9;2359:7;2355:23;2351:32;2348:52;;;2396:1;2393;2386:12;2348:52;2423:16;;-1:-1:-1;;;;;2451:30:277;;2448:50;;;2494:1;2491;2484:12;2448:50;2517:60;2569:7;2560:6;2549:9;2545:22;2517:60;:::i;:::-;2507:70;2248:335;-1:-1:-1;;;;2248:335:277:o;2588:270::-;2629:3;2667:5;2661:12;2694:6;2689:3;2682:19;2710:76;2779:6;2772:4;2767:3;2763:14;2756:4;2749:5;2745:16;2710:76;:::i;:::-;2840:2;2819:15;-1:-1:-1;;2815:29:277;2806:39;;;;2847:4;2802:50;;2588:270;-1:-1:-1;;2588:270:277:o;2863:217::-;3010:2;2999:9;2992:21;2973:4;3030:44;3070:2;3059:9;3055:18;3047:6;3030:44;:::i;:::-;3022:52;2863:217;-1:-1:-1;;;2863:217:277:o;3267:578::-;-1:-1:-1;;;;;3564:15:277;;;3546:34;;3616:15;;;3611:2;3596:18;;3589:43;3668:15;;;3663:2;3648:18;;3641:43;3720:15;;3715:2;3700:18;;3693:43;3526:3;3767;3752:19;;3745:32;;;3489:4;;3794:45;;3819:19;;3811:6;3794:45;:::i;:::-;3786:53;3267:578;-1:-1:-1;;;;;;;3267:578:277:o;4074:184::-;4144:6;4197:2;4185:9;4176:7;4172:23;4168:32;4165:52;;;4213:1;4210;4203:12;4165:52;-1:-1:-1;4236:16:277;;4074:184;-1:-1:-1;4074:184:277:o;4263:375::-;3758:7282:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c19423bc11610076578063f0cfdd371161005b578063f0cfdd37146101ec578063fab4087a14610213578063ffc257041461023457600080fd5b8063c19423bc1461018b578063cbb7d173146101d757600080fd5b80638d614591116100a75780638d61459114610135578063a600bd0a1461014a578063b6c7175a1461015d57600080fd5b806301ffc9a7146100c357806331a66b65146100eb575b600080fd5b6100d66100d1366004614405565b61023c565b60405190151581526020015b60405180910390f35b6100fe6100f936600461461b565b6102d5565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815292841660208401529216918101919091526060016100e2565b61013d61047c565b6040516100e29190614711565b61013d610158366004614724565b61048b565b6040517fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb181526020016100e2565b6101b27f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b6101ea6101e536600461461b565b610547565b005b6101b27f000000000000000000000000000000000000000000000000000000000000000081565b610226610221366004614724565b610570565b6040516100e2929190614794565b61013d61058d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f31a66b650000000000000000000000000000000000000000000000000000000014806102cf57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60008060006102e5868686610547565b7f4a48f556905d90b4a58742999556994182322843167010b59bf8149724db51cf3387878760405161031a94939291906147c2565b60405180910390a18451865160009182916103bd916020020160400160408051602c83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019091527effff0000000000000000000000000000000000000000000000000000000000600190920160e81b919091167f61000080600c6000396000f3000000000000000000000000000000000000000017815290600d820190565b915091506103cc8189896105ae565b60006103d7836105ec565b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201529192507fce6e4a4a7b561c65155990775d2faf8a581292f97859ce67e366fd53686b31f1910160405180910390a17f000000000000000000000000000000000000000000000000000000000000000095507f00000000000000000000000000000000000000000000000000000000000000009450925050505b93509350939050565b606061048661065a565b905090565b805160208201206060907fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb1811461051c576040517f26cc0fec0000000000000000000000000000000000000000000000000000000081527fa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb16004820152602481018290526044015b60405180910390fd5b6000838060200190518101906105329190614822565b905061053f816002610837565b949350505050565b61056b604051806080016040528060528152602001614a5e60529139848484610ecb565b505050565b6060806105848361057f61058d565b61128a565b91509150915091565b606060405180610120016040528060ef8152602001614ab060ef9139905090565b80600182510160200281015b808210156105d55781518552602094850194909101906105ba565b505061056b6105e18390565b848451602001611ae4565b6000806000600d9050835160e81c61ffff168101846000f0915073ffffffffffffffffffffffffffffffffffffffff8216610653576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b60606143fb60006029905080915060006040518061054001604052808467ffffffffffffffff1667ffffffffffffffff168152602001611b4a8152602001611bc48152602001611c2b8152602001611c358152602001611c2b8152602001611c2b8152602001611c2b8152602001611c2b8152602001611c2b8152602001611c3f8152602001611c618152602001611c8b8152602001611cad8152602001611c3f8152602001611cad8152602001611cad8152602001611cb78152602001611cc18152602001611cad8152602001611cad8152602001611cca8152602001611cca8152602001611cad8152602001611cc18152602001611cc18152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cca8152602001611cc18152602001611ce18152602001611ceb8152602001611ceb8152509050606081905060298151146108255780516040517fc8b56901000000000000000000000000000000000000000000000000000000008152600481019190915260248101849052604401610513565b61082e81611cfa565b94505050505090565b6060808060008060ff861667ffffffffffffffff81111561085a5761085a61444e565b604051908082528060200260200182016040528015610883578160200160208202803683370190505b5093508560ff1667ffffffffffffffff8111156108a2576108a261444e565b6040519080825280602002602001820160405280156108cb578160200160208202803683370190505b509250865b805115610940576000806108e383611d8b565b89519095509193509150829088908690811061090157610901614988565b602002602001019060ff16908160ff16815250508086858151811061092857610928614988565b602090810291909101015250506001909101906108d0565b5060006005885102602183026001010190508067ffffffffffffffff81111561096b5761096b61444e565b6040519080825280601f01601f191660200182016040528015610995576020820181803683370190505b50955081602087015360005b828110156109d357806021026021880101816020026020018701518153602080830287010151600191820152016109a1565b50506021028401600601905060005b8651811015610ec1576000805b6000806000878581518110610a0657610a06614988565b60200260200101519050600080610a568b8881518110610a2857610a28614988565b602002602001015160ff168f8a81518110610a4557610a45614988565b602002602001015160000151611ff1565b9250905060056000877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84018616600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff919091160101919091028a01805190955062ffffff84811693501690508015610e6857818103610c1b576040517f59293c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600190970196610e598460007f5555555555555555555555555555555555555555555555555555555555555555600183901c167f555555555555555555555555555555555555555555555555555555555555555583160191507f3333333333333333333333333333333333333333333333333333333333333333600283901c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f600483901c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600883901c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff601083901c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff602083901c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff604083901c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff608083901c166fffffffffffffffffffffffffffffffff8316019150819050919050565b870196505050505050506109ef565b8195505050505060188b8681518110610e8357610e83614988565b60200260200101516020015160ff16901b602086901b17821791506000600160056001901b03199050828183511617825250505050506001016109e2565b5050505092915050565b6000610ed684612013565b90508082511115610f205781516040517ffd9e1af4000000000000000000000000000000000000000000000000000000008152600481019190915260248101829052604401610513565b6020850160005b82811015611281576000610f3b8783612031565b90506000610f49888461204a565b90508551831015611019578115610f96576040517fee8d10810000000000000000000000000000000000000000000000000000000081526004810184905260248101839052604401610513565b858381518110610fa857610fa8614988565b6020026020010151811015611019578281878581518110610fcb57610fcb614988565b60200260200101516040517ff7dd619f000000000000000000000000000000000000000000000000000000008152600401610513939291909283526020830191909152604082015260600190565b600061102789848a51612063565b9050600060186110378b876120cf565b03905060006110468b87612100565b600402820190505b808210156111cb578151601c81901a60020288015162ffffff821691601d1a9060f01c60008061107c888685565b915091508382146110d05760808801516040517fddf5607100000000000000000000000000000000000000000000000000000000815260048101919091526024810183905260448101859052606401610513565b875182111561112257608088015188516040517f2cab6bff0000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101839052606401610513565b87518290038089526040890151111561118457608088015188516040808b015190517f1bc5ab0f000000000000000000000000000000000000000000000000000000008152600481019390935260248301919091526044820152606401610513565b875181018089526020890151101561119e57875160208901525b60018111156111af57875160408901525b505050608085018051600101905250506004919091019061104e565b6111d58b87612119565b8360200151146112295782602001516111ee8c88612119565b6040517f4d9c18dc00000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610513565b825184146112705782516040517f4689f0b3000000000000000000000000000000000000000000000000000000008152600481019190915260248101859052604401610513565b505060019093019250610f27915050565b50505050505050565b6060806000611297612132565b855190915015611ac5578451600090602087810191880101825b81831015611a22576001835160001a1b905060018560e00151166000036115b4576f07fffffe80000000000000000000000081161561145c5760e085015160021615611352578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f5520a51700000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b6f07fffffe0000000000000000000000008116156113fe57611384836f07fffffe0000000003ff200000000000612283565b945092506000806113958787612334565b9150915081156113f7576040517f53e6feba0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c8703016004820152602401610513565b505061141f565b61141c60018401836f07fffffe0000000003ff2000000000006123b5565b92505b60a085018051600101905260e0850180516022177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef1690526112b1565b6401000026008116156114ad5761147c60018401836401000026006123b5565b60e0860180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd16905292506112b1565b6704000000000000008116156114f65760e0850180516021177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed169052600192909201916112b1565b6580000000000081161561158a5760108560e001511660000361156e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517fedad0c5800000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b61157889846123e1565b60e086018051600217905292506112b1565b8883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00161131d565b6f07fffffe0000000000000000000000008116156117495760e085015160021615611634578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f4e803df600000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b61164e836f07fffffe0000000003ff200000000000612283565b80955081945050506000806143fb61166c8b896101a00151896124ed565b92509250925082156116af57600061168e8961018001518e898563ffffffff16565b909750905061169e898483612920565b5060e0880180516004179052611736565b6116b98888612a5d565b909350915082156116de576116d088600084612920565b6116d988612ad8565b611736565b6040517f81bd48db0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08d8803016004820152602401610513565b50505060e08501805160021790526112b1565b60e08501516004161561183f576501000000000081166000036117be576040517f23b5c6ea0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8503016004820152602401610513565b60608501805160001a60030190819053603b811115611809576040517f6232f2d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060e0850180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91690526001909201916112b1565b65020000000000811615611910576000606086015160001a9050806000036118b9576040517f7f9db5420000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8603016004820152602401610513565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd01606086018181538160048201015160001a8260028301015160f01c600101535061190486612ad8565b506001909201916112b1565b6401000026008116156119305761147c60018401836401000026006123b5565b6703ff0000000000008116156119665761194b858a85612b3b565b925061195685612ad8565b60e08501805160021790526112b1565b6510000000000081161561198a5761197f858a85612c8d565b6001909201916112b1565b6708000000000000008116156119c0576119a5858a85612c8d565b6119ae85612f60565b601860e08601526001909201916112b1565b658000000000008116156119f8578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001611539565b8883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016115ff565b818314611a5b576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60e085015160201615611ac0576040517ff06f54cf0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8503016004820152602401610513565b505050505b611ace81613184565b611ad7826132bc565b92509250505b9250929050565b6020810680820384015b80851015611b09578451845260209485019490930192611aee565b508015611b44577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600882021c808451168119865116178452505b50505050565b8151600090819083908110611ba257608085015185516040517feaa16f330000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101829052606401610513565b8460400151811115611bb657604085018190525b506000946001945092505050565b60008083606001518310611c1e57608084015160608501516040517feb7894540000000000000000000000000000000000000000000000000000000081526004810192909252602482015260448101849052606401610513565b5060009360019350915050565b5060009160019150565b60101c9160019150565b600080601083901c80611c53576001611c55565b805b95600195509350505050565b600080601083901c80611c75576002611c77565b805b90506002810615611c535780600101611c55565b600080601083901c80611c9f576001611ca1565b805b95600095509350505050565b5060029160019150565b5060039160019150565b50600191829150565b600080601083901c60018111611c53576002611c55565b5060029160009150565b60046001808316019250929050565b60606000825160020267ffffffffffffffff811115611d1b57611d1b61444e565b6040519080825280601f01601f191660200182016040528015611d45576020820181803683370190505b50905061ffff80196020850160208651028101600285015b81831015611d7f57805183518616908516178152602090920191600201611d5d565b50939695505050505050565b60008060606000805b60ff811015611f44576000805b8751811015611dd357600080611dc3858b8581518110610a4557610a45614988565b5093909317925050600101611da1565b506000600182901c7f555555555555555555555555555555555555555555555555555555555555555590811690831601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff9190911601905083811115611f2b578093508296508195505b87518103611f3a575050611f44565b5050600101611d94565b5084516040805192909103808352600101602002820190529050600080805b8651811015611fe757600080611f888860ff168a8581518110610a4557610a45614988565b91509150848216600003611f9f5793811793611fdd565b888381518110611fb157611fb1614988565b6020026020010151868581518110611fcb57611fcb614988565b60209081029190910101526001909301925b5050600101611f63565b5050509193909250565b60008082600052836020536021600020905060018160001a1b91509250929050565b6000815160000361202657506000919050565b506020015160001a90565b60008061203e84846120cf565b5160021a949350505050565b60008061205784846120cf565b5160031a949350505050565b61209c6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001606081525090565b506040805160c081018252838152602081018490529081019290925260608201526000608082015260a081019190915290565b6000806120db84612013565b600202600101905060006120ef8585613331565b949091019093016020019392505050565b60008061210d84846120cf565b5160001a949350505050565b60008061212684846120cf565b5160011a949350505050565b6121ab604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051806101e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016010600817815260200160008152602001600081526020016000815260200160008152602001612220613a2960101b61377d1790565b815260200161224a61416060401b613fef60301b613e9360201b613d8560101b613ce81717171790565b815260006020918201819052604080518381528084018252845291830181905290820181905260a082018190526101c082015292915050565b8151600090819060015b8419600183831a1b16156020821016156122a95760010161228d565b9485019460208190036008810292831c90921b9161232b57604080516020810184905201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527fe47fe8b700000000000000000000000000000000000000000000000000000000825261051391600401614711565b50939492505050565b6000806123418484612a5d565b909250905081611add575061010083018051604080518581526020808220938252810190915260a086015160ff80821660089290921c1601601081901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009390931692909217179091526001019250929050565b60005b6000826001865160001a1b161183851016156123d9576001840193506123b8565b509192915050565b805160009060f01c612f2a811461244a576040517f3e47169c0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858503016004820152602401610513565b835160029390930192602a90602f90860160200160005b806124a7575b81871084885160001a1415161561248357600187019650612467565b6001870196508187101583885160001a1417156124a257506001958601955b612461565b50808611156124e2576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509395945050505050565b6001838101805160009283926143fb92602160ff909116028801600681019201845b8183101561290c576001830151602190930180519093600090819060ff168180612539838f611ff1565b9150915060008761277d60018503891660007f5555555555555555555555555555555555555555555555555555555555555555600183901c167f555555555555555555555555555555555555555555555555555555555555555583160191507f3333333333333333333333333333333333333333333333333333333333333333600283901c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f600483901c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600883901c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff601083901c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff602083901c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff604083901c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff608083901c166fffffffffffffffffffffffffffffffff8316019150819050919050565b016005028b015195505062ffffff90811693508416830391506127bf9050575060019850601b81901a9750601c1a8a901c61ffff169550610473945050505050565b600183901c7f555555555555555555555555555555555555555555555555555555555555555590811690841601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f908116911601600881901c7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff908116911601601081901c7dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff908116911601602081901c7bffffffff00000000ffffffff00000000ffffffff00000000ffffffff908116911601604081901c77ffffffffffffffff0000000000000000ffffffffffffffff908116911601608081901c6fffffffffffffffffffffffffffffffff91909116018401935050505061250f565b506000998a99508998509650505050505050565b612929836133a9565b60e08301805160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff79190911681179091528301516021600091821a850101805190911a600101815350825180516060850151600090811a86016061018051929361ffff85169360088504909103601c0192600191901a018153600060038201537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe30180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690911790528451602090920183821b176018820185901b179182905260e0819003612a56578451604080518088526020601084901b81178252810190915281517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000161790525b5050505050565b61010082015161012083015160008381526020808220919384939290911c91600160ff84161b80821615612ac35761ffff83165b8015612ac1578360201c8503612ab4576001965061ffff8460101c169550612ac1565b51925061ffff8316612a91565b505b17610120909601959095525090939092509050565b6000606082015160001a905080600003612b375760208201805160001a600101908181535080603f0361056b576040517fa25cba3100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006143fb6000806000612b5588610180015188886133f3565b8981038a206101408d015194985092965090945092507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016906001600083811a82901b92909190831615612bfb576101608c015160101c5b8015612bf95780517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000081168603612be8576001935050612bf9565b505160019091019061ffff16612bad565b505b6101608c015161ffff16612c21600184612c155782612c19565b8383035b8f9190612920565b5081612c7d57604080518082019091526101608d015160101c851781526000612c4f8d8a8a63ffffffff8e16565b6020830152506101608d018051600161ffff9091160160109290921b9190911790526101408c018051841790525b50929a9950505050505050505050565b606083015160001a8015612cf3576040517f6fb11cdc0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848403016004820152602401610513565b50612cfd836133a9565b60e083018051603060089182161790915260a0840151602085015160ff8083169360f89290921c9290911c1681036000819003612dc65760088660e0015116600003612d9b576040517fab1d3ea70000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b90820160f881901b60208701526101c0860151909190612dbb90846136b6565b6101c0870152612e8f565b6001811115612e8f5780831015612e2f576040517f78ef27820000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b80831115612e8f576040517f43168e680000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b8082036001016020601083028101905b81811015612f4b5760a08901516020848b01015190821c61ffff169060001a60015b818111612f3a5760208306601c03612eda57915160f01c915b82516101c08d015160019190911a90612ef390826136fe565b6101c08e0152612f248284148015612f0b5750886001145b612f16576001612f18565b8a5b6101c08f015190613745565b6101c08e01525060049290920191600101612ec1565b505060019093019250601001612e9f565b5050505060081b60a090940193909352505050565b60e0810180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf16905260c0810151602082015160f082811c9160001a60010190829003612fda576040517fa806284100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080856101c001519050855161ffff815160101c165b801561300857805190915060101c61ffff16612ff1565b50604051602188018051919450601c830192916004916024870191600090811a805b8a8310156130f05760048202860195506004878903045b8082111561305f57965161ffff16601c810198509690036007613041565b506004810297889003805186529794909401938103865b60078211156130bb575160101c61ffff1680518652601c909501947ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff990910190613076565b81156130d6575160101c61ffff168051865260048202909501945b505050600191820180519092919091019060001a8061302a565b50505050818652600486019350846001600484040360181b1763ffffffff19855116178452601f19601f820116604052505050506001846001901b61313591906149e6565b851682851b60f06131478760106149f9565b901b171760c08701526040805160208082528082018352908852600090880181905290870181905260a087018190526101c0870152505050505050565b60c08101518151516060919060f082901c90602081146131d0576040517f858f2dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051935060208401601083046000818353506001600885048301810192839101600080805b8881101561322f5789811c61ffff81165163ffff0000601092831b16811760e01b8786015284019360f08390031b9290921791016131f6565b50825117909152878203017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08181018952908801601f011660405260005b828110156132b0576002810288016003015161ffff90811683018051602060f082901c019260e09190911c16906132a5838284611ae4565b50505060010161326d565b50505050505050919050565b6101608101516040805161ffff8316808252602080820283019081019093529092909160109190911c90835b808211156133285760208301518252915161ffff16917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101906132e8565b50505050919050565b6002810282016003015161ffff16600061334a84612013565b8451909150600560028302840101908111806133665750818410155b156133a15784846040517fd3fc97bd000000000000000000000000000000000000000000000000000000008152600401610513929190614a0c565b505092915050565b60208101805160001a6001810182015160001a61056b578251805160a085018051600861ffff939093169290920460200390920160106001601e84901a860301021b179052505050565b80516143fb9060009081908190600181831a1b6703ff00000000000081161561361557600182811a1b7ffffffffffffffffffffffffffffffffffeffffffffffffffffff000000000000828217016134cf5760028801806c7e0000007e03ff0000000000005b806001835160001a1b161561347357600182019150613459565b508a5161ffff8d16908c01602001808311156134bb576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50985090965094508493506136ad92505050565b876001810160006703ff0000000000006c200000002000000000000000005b816001855160001a1b1615613508576001840193506134ee565b806001855160001a1b161561353957600184019392505b816001855160001a1b16156135395760018401935061351f565b5050801580159061355857508060030182118061355857508060010182145b156135b5576040517f013b2aaa0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08d8303016004820152602401610513565b8b5161ffff60108f901c16908d0160200180841115613600576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50995091975095508594506136ad9350505050565b87518801602001808810613655576040517f7d565df600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fb0e4e5b30000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a8a03016004820152602401610513565b93509350935093565b60006136c28383613745565b9250507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff821660ff600884811c919091168301901b1792915050565b600060ff83168281101561373e576040517f04671d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050900390565b600060ff808416830190600885901c16601085901c808311156137655750815b601081901b600883901b841717935050505092915050565b600082820360408111156137e3576040517fff2f59490000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b80600003613843576040517fc75cd5090000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b600281066001036138a6576040517fd76d9b570000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830160005b858210613a1f578151600090811a906001821b906703ff00000000000082161561391957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd082016139e9565b6c7e00000000000000000000000082161561395757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa982016139e9565b687e000000000000000082161561399157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc982016139e9565b6040517f69f1e3e60000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8703016004820152602401610513565b831b959095179450507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909101906004016138cc565b5050509392505050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8101516000908190603090829080821a878703600381118015613a7e57506001821b6c200000002000000000000000001615155b15613aa057600488039550600a858460011a0302858460021a03019350613b4c565b8260011a9150600281118015613ac757506001821b6c200000002000000000000000001615155b15613adf57600388039550848360021a039350613b4c565b8015613af45760018803955060009350613b4c565b6040517ffa65827e0000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b8b03016004820152602401610513565b5050505b858310158015613b605750604d81105b15613ba557825160001a829003600a82900a0293909301927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191600101613b50565b858310613a1f57825160001a8290036001811115613c18578784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f8f2b5ffd00000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b600a82900a8102858101861115613c53578885037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613be3565b9490940193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201915b858310613a1f57825160001a60308114613cbd578784037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613be3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191613c7f565b80516000908190600190821a1b7ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008101613d74576040517ff8216c550000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868603016004820152602401610513565b83600092509250505b935093915050565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613e8557613dd460018601826401000026006123b5565b94506000613de6888861ffff896142fe565b9096509050613dfb86836401000026006123b5565b8051909650600160009190911a1b92506740000000000000008314613e75578686037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f722cd24a00000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b6001860194509250613d7d915050565b846000935093505050613d7d565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613f9457613ee260018601826401000026006123b5565b94506000613ef3888860ff896142fe565b909650905080613f0987846401000026006123b5565b96506000613f1a8a8a60ff8b6142fe565b909850600881901b92909217919050613f3988856401000026006123b5565b8051909850600160009190911a1b94506740000000000000008514613f82578888037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b506001870195509350613d7d92505050565b8585037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015b6040517f24027dc400000000000000000000000000000000000000000000000000000000815260040161051391815260200190565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613e855761403e60018601826401000026006123b5565b80519095506001600091821a1b92507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000830161407c575060006140a1565b61408988886001896142fe565b909650905061409e86836401000026006123b5565b95505b85516001600091821a1b93507fffffffffffffffffffffffffffffffffffffffffffffffffc00000000000000084016140dc57506000614101565b6140e9898960018a6142fe565b90975090506140fe87846401000026006123b5565b96505b8651600160009190911a81901b945081901b8217674000000000000000851461414e578888037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b6001880196509450613d7d9350505050565b815181516000918291600190831a1b9085016020017ffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000008201613f94576141af60018601826401000026006123b5565b945060006141c0888860ff896142fe565b90965090506141d586836401000026006123b5565b80519096506001600091821a1b93507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000840161421357506000614238565b614220898960018a6142fe565b909750905061423587846401000026006123b5565b96505b86516001600091821a1b94507fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000850161427357506000614298565b6142808a8a60018b6142fe565b909850905061429588856401000026006123b5565b97505b8751600160009190911a1b9450600882901b8317600982901b1767400000000000000086146142eb578989037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613e40565b6001890197509550613d7d945050505050565b80516000908190600190821a1b7fffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000810161435c578584037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001613fba565b6143fb600080600061436f8b8b8a6133f3565b935093509350935060006143888b85858863ffffffff16565b9050898111156143ea576040517f7480c7840000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c8b03016004820152602401610513565b909b909a5098505050505050505050565b614403614a2e565b565b60006020828403121561441757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461444757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156144a0576144a061444e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156144ed576144ed61444e565b604052919050565b600067ffffffffffffffff82111561450f5761450f61444e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261454c57600080fd5b813561455f61455a826144f5565b6144a6565b81815284602083860101111561457457600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156145ab576145ab61444e565b5060051b60200190565b600082601f8301126145c657600080fd5b813560206145d661455a83614591565b82815260059290921b840181019181810190868411156145f557600080fd5b8286015b8481101561461057803583529183019183016145f9565b509695505050505050565b60008060006060848603121561463057600080fd5b833567ffffffffffffffff8082111561464857600080fd5b6146548783880161453b565b9450602086013591508082111561466a57600080fd5b614676878388016145b5565b9350604086013591508082111561468c57600080fd5b50614699868287016145b5565b9150509250925092565b60005b838110156146be5781810151838201526020016146a6565b50506000910152565b600081518084526146df8160208601602086016146a3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061444760208301846146c7565b60006020828403121561473657600080fd5b813567ffffffffffffffff81111561474d57600080fd5b61053f8482850161453b565b600081518084526020808501945080840160005b838110156147895781518752958201959082019060010161476d565b509495945050505050565b6040815260006147a760408301856146c7565b82810360208401526147b98185614759565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff851681526080602082015260006147f160808301866146c7565b82810360408401526148038186614759565b905082810360608401526148178185614759565b979650505050505050565b6000602080838503121561483557600080fd5b825167ffffffffffffffff8082111561484d57600080fd5b818501915085601f83011261486157600080fd5b815161486f61455a82614591565b81815260059190911b8301840190848101908883111561488e57600080fd5b8585015b8381101561497b578051858111156148aa5760008081fd5b86016060818c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156148e05760008081fd5b6148e861447d565b89830151815260408084015160ff811681146149045760008081fd5b828c015291830151918883111561491b5760008081fd5b82840193508d603f85011261493257600092508283fd5b8a840151925061494461455a846144f5565b8381528e828587010111156149595760008081fd5b614968848d83018488016146a3565b9082015285525050918601918601614892565b5098975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156102cf576102cf6149b7565b808201808211156102cf576102cf6149b7565b604081526000614a1f60408301856146c7565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe1b4a1bc41c2b1c351c2b1c2b1c2b1c2b1c2b1c3f1c611c8b1cad1c3f1cad1cad1cb71cc11cad1cad1cca1cca1cad1cc11cc11cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cc11ce11ceb1ceb010f00c20804b001180500014014144080040101008082020092020040a100148024163082aae700108f616d2200e3c6181b0025fdfc2100a1cef21c00e7762b2500229a7e0b103e260a0600ce656d0220f12be70c0035f0270900da2bcc14001874cb0700319e1e2300c17cd61100d0684c05007c4b951f000859681e00ce62340d0021f48512009046c219008710c503002c340815002eaa701740b3357a1a00e6d3420800f0dfe2040080a95b0e004e5b480a107012321840438b4b24008a3266281043e2f6011056328a1d00ec53cd0f006e69fa1000ac8cde2600f2c1681300b8577627103fa0c82000c6ff51",
    "sourceMap": "3758:7282:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7405:216;;;;;;:::i;:::-;;:::i;:::-;;;516:14:277;;509:22;491:41;;479:2;464:18;7405:216:77;;;;;;;;8811:1006;;;;;;:::i;:::-;;:::i;:::-;;;;3964:42:277;4033:15;;;4015:34;;4085:15;;;4080:2;4065:18;;4058:43;4137:15;;4117:18;;;4110:43;;;;3942:2;3927:18;8811:1006:77;3699:460:277;10885:153:77;;;:::i;:::-;;;;;;;:::i;7814:481::-;;;;;;:::i;:::-;;:::i;7657:121::-;;;2529:66;5446:25:277;;5434:2;5419:18;7657:121:77;5300:177:277;5051:43:77;;;;;;;;5687:42:277;5675:55;;;5657:74;;5645:2;5630:18;5051:43:77;5482:255:277;9870:249:77;;;;;;:::i;:::-;;:::i;:::-;;4924:44;;;;;8474:289;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;8331:107::-;;;:::i;7405:216::-;7491:4;7514:55;;;7530:39;7514:55;;:100;;-1:-1:-1;7573:41:77;;;7589:25;7573:41;7514:100;7507:107;7405:216;-1:-1:-1;;7405:216:77:o;8811:1006::-;8951:14;8967:19;8988:7;9011:47;9026:8;9036:9;9047:10;9011:14;:47::i;:::-;9074:58;9088:10;9100:8;9110:9;9121:10;9074:58;;;;;;;;;:::i;:::-;;;;;;;;502:16:157;;484:15;;9144:37:77;;;;9214:100;;521:4:157;502:23;484:41;528:4;484:48;4202:4:53;4196:11;;4311:43;;;4356:9;4307:59;4291:76;;4278:90;;;4687:343;4972:1;4959:15;;;4787:3;4687:343;;;;;1522:75;4622:430;5069:27;;4196:11;1728:2;4463:35;;;3702:1424;9214:100:77;9143:171;;;;9436:81;9488:7;9497:8;9507:9;9436:51;:81::i;:::-;9581:18;9602:32;9624:9;9602:21;:32::i;:::-;9717:41;;;9735:10;7850:34:277;;7799:42;7920:15;;7915:2;7900:18;;7893:43;9581:53:77;;-1:-1:-1;9717:41:77;;7762:18:277;9717:41:77;;;;;;;9777:12;;-1:-1:-1;9791:6:77;;-1:-1:-1;9799:10:77;-1:-1:-1;;;8811:1006:77;;;;;;;;:::o;10885:153::-;10953:12;10984:47;:45;:47::i;:::-;10977:54;;10885:153;:::o;7814:481::-;7963:24;;;;;;7906:12;;2529:66;8001:45;;7997:153;;8069:70;;;;;2529:66;8069:70;;;8121:25:277;8162:18;;;8155:34;;;8094:18;;8069:70:77;;;;;;;;7997:153;8159:28;8201:13;8190:44;;;;;;;;;;;;:::i;:::-;8159:75;;8251:37;8279:5;8286:1;8251:27;:37::i;:::-;8244:44;7814:481;-1:-1:-1;;;;7814:481:77:o;9870:249::-;10016:96;10051:27;;;;;;;;;;;;;;;;;10080:8;10090:9;10101:10;10016:34;:96::i;:::-;9870:249;;;:::o;8474:289::-;8548:12;8562:16;8723:33;8738:4;8744:11;:9;:11::i;:::-;8723:14;:33::i;:::-;8716:40;;;;8474:289;;;:::o;8331:107::-;8390:12;8421:10;;;;;;;;;;;;;;;;;8414:17;;8331:107;:::o;555:809:157:-;843:9;946:1;934:9;928:16;924:24;918:4;914:35;897:15;893:57;794:385;989:12;972:15;969:33;794:385;;;1154:22;;1139:38;;1065:4;1101:17;;;;1044:26;;;;794:385;;;798:170;;1263:84;1291:23;:8;1472:4:66;1331:161;1291:23:157;1316:6;1324:8;:15;1342:4;1324:22;1263:27;:84::i;5489:666:53:-;5562:7;5581:16;5607:21;1728:2;5607:43;;5959:10;5953:17;5948:3;5944:27;5936:6;5932:40;5839:13;5810:184;5778:10;5755:1;5727:285;5699:313;-1:-1:-1;6080:22:53;;;6076:47;;6111:12;;;;;;;;;;;;;;6076:47;-1:-1:-1;6140:8:53;5489:666;-1:-1:-1;;5489:666:53:o;14259:4336:109:-;14319:12;14367:125;14506:14;2305:2;14506:40;;14620:6;14603:23;;14653:161;:3443;;;;;;;;14839:13;14653:3443;;;;;;;;15083:22;14653:3443;;;;15127:25;14653:3443;;;;15249:24;14653:3443;;;;15295:21;14653:3443;;;;15338:28;14653:3443;;;;15388:24;14653:3443;;;;15594:27;14653:3443;;;;15681:27;14653:3443;;;;15730:26;14653:3443;;;;15778:20;14653:3443;;;;15820:27;14653:3443;;;;15869:23;14653:3443;;;;15914:24;14653:3443;;;;15960:22;14653:3443;;;;16004:28;14653:3443;;;;16054:37;14653:3443;;;;16113:19;14653:3443;;;;16154:23;14653:3443;;;;16199:25;14653:3443;;;;16246:34;14653:3443;;;;16302:29;14653:3443;;;;16353:29;14653:3443;;;;16404:40;14653:3443;;;;16466:33;14653:3443;;;;16521:32;14653:3443;;;;16735:23;14653:3443;;;;16818:23;14653:3443;;;;16863:23;14653:3443;;;;16908:23;14653:3443;;;;17113:23;14653:3443;;;;17196:23;14653:3443;;;;17401:23;14653:3443;;;;17484:23;14653:3443;;;;17529:23;14653:3443;;;;17574:23;14653:3443;;;;17779:23;14653:3443;;;;17862:23;14653:3443;;;;17907:20;14653:3443;;;;17949:20;14653:3443;;;;17991:32;14653:3443;;;;18045:33;14653:3443;;;;;18110:32;18218:13;18199:32;;2305:2;18373:15;:22;:49;18369:143;;18466:22;;18449:48;;;;;;;;8121:25:277;;;;8162:18;;;8155:34;;;8094:18;;18449:48:109;7947:248:277;18369:143:109;18532:46;18562:15;18532:29;:46::i;:::-;18525:53;;;;;;14259:4336;:::o;4650:4696:154:-;4775:22;;;4949:17;;5041:21;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5041:21:154;;5033:29;;5107:8;5093:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5093:23:154;-1:-1:-1;5080:36:154;-1:-1:-1;5204:13:154;5239:387;5246:29;;:33;5239:387;;5307:10;5343:17;5430:40;5447:22;5430:16;:40::i;:::-;5496:12;;5386:84;;-1:-1:-1;5386:84:154;;-1:-1:-1;5386:84:154;-1:-1:-1;5386:84:154;;5496:5;;5502;;5496:12;;;;;;:::i;:::-;;;;;;:19;;;;;;;;;;;5561:9;5541:10;5552:5;5541:17;;;;;;;;:::i;:::-;;;;;;;;;;:29;-1:-1:-1;;5596:7:154;;;;;5239:387;;;5134:510;5662:23;1230:1;5757:13;:20;:37;1388:4;5727:5;:27;1460:1;5708:46;:86;5662:132;;5834:15;5824:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5824:26:154;;5812:38;;5945:5;5938:4;5927:9;5923:20;5915:36;5991:9;5986:474;6010:5;6006:1;:9;5986:474;;;6227:1;6221:4;6217:12;6210:4;6199:9;6195:20;6191:39;6313:1;6307:4;6303:12;6297:4;6293:23;6286:5;6282:35;6276:42;6263:11;6255:64;6408:4;6404:12;;;6378:40;;;6372:47;6368:1;6351:19;;;6344:76;6017:3;5986:474;;;-1:-1:-1;;1388:4:154;6557:27;6670:26;;6521:33;6670:26;;-1:-1:-1;6500:18:154;6792:2538;6816:13;:20;6812:1;:24;6792:2538;;;6861:9;6892:21;6935:2381;6970:15;7007;7150:17;7170:10;7181:1;7170:13;;;;;;;;:::i;:::-;;;;;;;7150:33;;7210:14;7280:15;7345:46;7359:5;7365:1;7359:8;;;;;;;;:::i;:::-;;;;;;;7345:46;;7369:13;7383:1;7369:16;;;;;;;;:::i;:::-;;;;;;;:21;;;7345:13;:46::i;:::-;7325:66;-1:-1:-1;7325:66:154;-1:-1:-1;1230:1:154;7422:20;7547:13;7531:11;;;7518:25;;1392:1:150;1387:6;;;115:66;1386:19;;;1369:12;;1368:38;1448:1;1443:6;;;241:66;1442:19;;;1425:12;;1424:38;1504:1;1499:6;;;375:66;1498:19;;;1481:12;;1480:38;1560:1;1555:6;;;509:66;1554:19;;;1537:12;;1536:38;1617:2;1612:7;;;645:66;1611:21;;;1593:13;;1592:41;1676:2;1671:7;;;781:66;1670:21;;;1652:13;;1651:41;1735:2;1730:7;;;917:66;1729:21;;;1711:13;;1710:41;1795:3;1790:8;;;1055:66;1770:14;;;;1769:44;7503:57:154;7675:22;;;;7660:38;;8020:14;;7660:38;;-1:-1:-1;1101:8:154;7836:25;;;;-1:-1:-1;8093:34:154;;-1:-1:-1;8161:19:154;;8157:466;;8238:15;8220:14;:33;8216:141;;8300:22;;;;;;;;;;;;;;8216:141;8456:3;;;;;8525:25;8540:9;1196:7:150;115:66;1392:1;1387;:6;;1386:19;115:66;1369:1;:12;1368:38;1364:42;;241:66;1448:1;1443;:6;;1442:19;241:66;1425:1;:12;1424:38;1420:42;;375:66;1504:1;1499;:6;;1498:19;375:66;1481:1;:12;1480:38;1476:42;;509:66;1560:1;1555;:6;;1554:19;509:66;1537:1;:12;1536:38;1532:42;;645:66;1617:2;1612:1;:7;;1611:21;645:66;1593:1;:13;1592:41;1588:45;;781:66;1676:2;1671:1;:7;;1670:21;781:66;1652:1;:13;1651:41;1647:45;;917:66;1735:2;1730:1;:7;;1729:21;917:66;1711:1;:13;1710:41;1706:45;;1055:66;1795:3;1790:1;:8;;1789:23;1055:66;1770:1;:14;1769:44;1765:48;;1835:1;1828:8;;1147:706;;;;8525:25:154;8509:13;:41;8493:57;;8584:8;;;;;;;;8157:466;8787:15;8777:25;;7780:1049;;7124:1727;;9013:4;8972:13;8986:1;8972:16;;;;;;;;:::i;:::-;;;;;;;:36;;;8964:45;;:53;;8955:4;8950:1;:9;;8949:69;8938:80;;;;9041:12;1291:1;1230;1268;:19;;1267:25;9056:15;9041:30;;9190:7;9183:4;9173:7;9167:14;9163:25;9160:38;9151:7;9144:55;9292:5;;;-1:-1:-1;;6838:3:154;;6792:2538;;;;4813:4527;;;4650:4696;;;;:::o;2846:4663:102:-;3060:19;3082:33;3106:8;3082:23;:33::i;:::-;3060:55;;3265:11;3245:10;:17;:31;3241:126;;;3321:17;;3303:49;;;;;;;;8121:25:277;;;;8162:18;;;8155:34;;;8094:18;;3303:49:102;7947:248:277;3241:126:102;3477:4;3462:20;;3381:22;3567:3926;3591:11;3587:1;:15;3567:3926;;;3698:20;3721:43;3752:8;3762:1;3721:30;:43::i;:::-;3698:66;;3865:21;3889:44;3921:8;3931:1;3889:31;:44::i;:::-;3865:68;;4033:10;:17;4029:1;:21;4025:351;;;4078:17;;4074:118;;4130:39;;;;;;;;8121:25:277;;;8162:18;;;8155:34;;;8094:18;;4130:39:102;7947:248:277;4074:118:102;4234:10;4245:1;4234:13;;;;;;;;:::i;:::-;;;;;;;4218;:29;4214:144;;;4303:1;4306:13;4321:10;4332:1;4321:13;;;;;;;;:::i;:::-;;;;;;;4282:53;;;;;;;;;;;;11331:25:277;;;11387:2;11372:18;;11365:34;;;;11430:2;11415:18;;11408:34;11319:2;11304:18;;11129:319;4214:144:102;4394:34;4451:70;4480:8;4490:12;4504:9;:16;4451:28;:70::i;:::-;4394:127;;4648:14;4722:4;4680:38;4706:8;4716:1;4680:25;:38::i;:::-;4665:61;4648:78;;4744:11;4767:40;4795:8;4805:1;4767:27;:40::i;:::-;4810:1;4767:44;4758:6;:53;4744:67;;4830:2096;4846:3;4837:6;:12;4830:2096;;;5162:13;;5250:2;5245:14;;;5261:1;5241:22;5221:43;;5215:50;5353:8;5343:19;;;5412:2;5407:14;;5209:4;5205:61;4873:15;;5512:17;5514:5;5343:19;5205:61;5512:17::i;:::-;5464:65;;;;5571:16;5555:12;:32;5551:158;;5640:13;;;;5622:64;;;;;;;;11331:25:277;;;;11372:18;;;11365:34;;;11415:18;;;11408:34;;;11304:18;;5622:64:102;11129:319:277;5551:158:102;5750:16;;5735:31;;5731:154;;;5816:13;;;;5831:16;;5801:61;;;;;;;;11331:25:277;;;;11372:18;;;11365:34;11415:18;;;11408:34;;;11304:18;;5801:61:102;11129:319:277;5731:154:102;5906:32;;;;;;;;6055:19;;;;-1:-1:-1;6032:177:102;;;6133:13;;;;6148:16;;6166:19;;;;;6109:77;;;;;;;;11331:25:277;;;;11372:18;;;11365:34;;;;11415:18;;;11408:34;11304:18;;6109:77:102;11129:319:277;6032:177:102;6368:33;;;;;;;6519:19;;;;-1:-1:-1;6496:131:102;;;6588:16;;6566:19;;;:38;6496:131;6747:1;6731:13;:17;6727:110;;;6798:16;;6776:19;;;:38;6727:110;-1:-1:-1;;;6859:13:102;;;:15;;;;;;-1:-1:-1;;6906:1:102;6896:11;;;;;4830:2096;;;7052:46;7086:8;7096:1;7052:33;:46::i;:::-;7029:5;:19;;;:69;7025:215;;7153:5;:19;;;7174:46;7208:8;7218:1;7174:33;:46::i;:::-;7129:92;;;;;;;;8121:25:277;;;;8162:18;;;8155:34;8094:18;;7129:92:102;7947:248:277;7025:215:102;7343:16;;:33;;7339:140;;7428:16;;7407:53;;;;;;;;8121:25:277;;;;8162:18;;;8155:34;;;8094:18;;7407:53:102;7947:248:277;7339:140:102;-1:-1:-1;;3604:3:102;;;;;-1:-1:-1;3567:3926:102;;-1:-1:-1;;3567:3926:102;;;3036:4467;;2846:4663;;;;:::o;44772:11995:151:-;44872:21;44895:16;44951:23;44977:24;:22;:24::i;:::-;45019:11;;44951:50;;-1:-1:-1;45019:15:151;45015:11668;;45287:11;;45054:12;;45242:4;45232:15;;;;45275:24;;;45054:12;45334:11074;45350:3;45341:6;:12;45334:11074;;;45532:1;45522:6;45516:13;45513:1;45508:22;45504:30;45496:38;;2555:1;45609:5;:9;;;:24;45637:1;45609:29;45605:10785;;14954:40:152;45670:27:151;;:31;45666:2999;;45806:9;;;;2591:6;45806:25;:29;45802:156;;41137:28;;;;;45896:30;45878:49;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;45802:156:151;13201:425:152;46041:28:151;;:32;46037:814;;46126:39;46136:6;15296:54:152;46126:9:151;:39::i;:::-;46109:56;-1:-1:-1;46109:56:151;-1:-1:-1;46200:11:151;;46230:25;:5;46109:56;46230:19;:25::i;:::-;46199:56;;;;46482:6;46478:140;;;46535:48;;;;;41137:28;;;;;46535:48;;;5446:25:277;5419:18;;46535:48:151;5300:177:277;46478:140:151;46075:573;;46037:814;;;46773:47;46791:1;46782:10;;46794:3;15296:54:152;46773:8:151;:47::i;:::-;46764:56;;46037:814;47011:17;;;:19;;;;;;47217:9;;;;;:50;;47271:22;47216:77;47204:89;;45334:11074;;45666:2999;15866:76:152;47330:23:151;;:28;47326:1339;;47399:43;47417:1;47408:10;;47420:3;15866:76:152;47399:8:151;:43::i;:::-;47545:9;;;:27;;47558:14;47545:27;;;47390:52;-1:-1:-1;45334:11074:151;;47326:1339;6214:41:152;47609:30:151;;:35;47605:1060;;47820:9;;;;;:49;;47905:40;47819:126;47807:138;;2555:1;47975:8;;;;;45334:11074;;47605:1060;5212:41:152;48020:25:151;;:30;48016:649;;2872:6;48086:5;:9;;;:33;48123:1;48086:38;48082:165;;41137:28;;;;;48185:30;48167:49;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;48082:165:151;48285:25;48297:4;48303:6;48285:11;:25::i;:::-;48493:9;;;:26;;2591:6;48493:26;;;48276:34;-1:-1:-1;45334:11074:151;;48016:649;41137:28;;;;;48607:30;40978:203;45605:10785;13201:425:152;48770:26:151;;:30;48766:7602;;48902:9;;;;2591:6;48902:25;:29;48898:156;;41137:28;;;;;48992:30;48974:49;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;48898:156:151;49101:38;49111:6;15296:54:152;49101:9:151;:38::i;:::-;49084:55;;;;;;;;49272:11;49317:19;49370:86;49489:57;49513:4;49519:5;:20;;;49541:4;49489:23;:57::i;:::-;49238:308;;;;;;49580:6;49576:1207;;;49622:15;49691:49;49705:5;:20;;;49727:4;49733:6;49691:13;:49;;:::i;:::-;49671:69;;-1:-1:-1;49671:69:151;-1:-1:-1;49774:42:151;:5;49795:11;49671:69;49774:20;:42::i;:::-;-1:-1:-1;49977:9:151;;;:30;;2636:6;49977:30;;;49576:1207;;;50184:45;50217:5;50224:4;50184:32;:45::i;:::-;50160:69;;-1:-1:-1;50160:69:151;-1:-1:-1;50263:490:151;;;;50313:61;:5;3474:1;50361:11;50313:20;:61::i;:::-;50572:17;:5;:15;:17::i;:::-;50263:490;;;50675:43;;;;;41137:28;;;;;50675:43;;;5446:25:277;5419:18;;50675:43:151;5300:177:277;50263:490:151;-1:-1:-1;;;50813:9:151;;;:26;;2591:6;50813:26;;;45334:11074;;48766:7602;50979:9;;;;2636:6;50979:29;:33;50975:5393;;4552:41:152;51048:23:151;;51075:1;51048:28;51044:155;;51119:49;;;;;41137:28;;;;;51119:49;;;5446:25:277;5419:18;;51119:49:151;5300:177:277;51044:155:151;51953:4;51942:16;;51936:23;;51795:22;51928:32;51962:1;51924:40;;;;51997:41;52340:2;52323:14;:19;52319:112;;;52385:15;;;;;;;;;;;;;;52319:112;-1:-1:-1;52643:9:151;;;:49;;52656:36;52643:49;;;52460:8;;;;;45334:11074;;50975:5393;4650:41:152;52729:24:151;;:28;52725:3643;;52789:19;52937:4;52930:5;52926:16;52920:23;52917:1;52912:32;52897:47;;53007:11;53022:1;53007:16;53003:146;;53066:52;;;;;41137:28;;;;;53066:52;;;5446:25:277;5419:18;;53066:52:151;5300:177:277;53003:146:151;53728:19;;53675:4;53664:16;;53728:19;53664:16;53780:33;54554:11;54550:1;54537:11;54533:19;54529:37;54523:44;54520:1;54515:53;54309:11;54305:1;54292:11;54288:19;54284:37;54278:44;54272:4;54268:55;54265:1;54261:63;53846:756;;54661:17;:5;:15;:17::i;:::-;-1:-1:-1;54708:8:151;;;;;45334:11074;;52725:3643;15866:76:152;54753:23:151;;:27;54749:1619;;54821:43;54839:1;54830:10;;54842:3;15866:76:152;54821:8:151;:43::i;54749:1619::-;12910:131:152;55102:25:151;;:29;55098:1270;;55172:31;:5;55190:4;55196:6;55172:17;:31::i;:::-;55163:40;;55233:17;:5;:15;:17::i;:::-;55397:9;;;:26;;2591:6;55397:26;;;45334:11074;;55098:1270;4933:41:152;55460:16:151;;:20;55456:912;;55512:27;:5;55526:4;55532:6;55512:13;:27::i;:::-;55569:8;;;;;45334:11074;;55456:912;6310:41:152;55680:16:151;;:20;55676:692;;55732:27;:5;55746:4;55752:6;55732:13;:27::i;:::-;55789:17;:5;:15;:17::i;:::-;3175:49;55875:9;;;:23;55836:8;;;;;45334:11074;;55676:692;5212:41:152;56104:25:151;;:30;56100:268;;41137:28;;;;;56191:30;40978:203;56100:268;41137:28;;;;;56310:30;40978:203;45334:11074;56439:3;56429:6;:13;56425:86;;56473:19;;;;;;;;;;;;;;56425:86;56532:9;;;;3023:6;56532:34;:39;56528:141;;56602:48;;;;;41137:28;;;;;56602:48;;;5446:25:277;5419:18;;56602:48:151;5300:177:277;56528:141:151;45036:11647;;;;45015:11668;56704:21;:5;:19;:21::i;:::-;56727:22;:5;:20;:22::i;:::-;56696:54;;;;;44772:11995;;;;;;:::o;1085:1363:67:-;1617:4;1609:6;1605:17;1676:1;1668:6;1664:14;1650:12;1646:33;1692:202;1716:3;1702:12;1699:21;1692:202;;;1872:19;;1851:41;;1773:4;1755:23;;;;1811;;;;1692:202;;;1696:2;1925:1;1918:9;1908:524;;2035:66;2031:1;2028;2024:9;2020:82;2372:5;2357:12;2351:19;2347:31;2314:5;2310:10;2295:12;2289:19;2285:36;2224:176;2190:12;2162:256;;1908:524;;1085:1363;;;:::o;603:563:106:-;873:16;;698:7;;;;761;;860:29;;856:131;;933:13;;;;948:16;;912:64;;;;;;;;11331:25:277;;;;11372:18;;;11365:34;11415:18;;;11408:34;;;11304:18;;912:64:106;11129:319:277;856:131:106;1059:5;:19;;;1047:9;:31;1043:93;;;1094:19;;;:31;;;1043:93;-1:-1:-1;1154:1:106;;1157;;-1:-1:-1;603:563:106;-1:-1:-1;;;603:563:106:o;580:555:105:-;675:7;684;816:5;:21;;;804:7;789:48;785:172;;884:13;;;;899:21;;;;860:86;;;;;;;;11331:25:277;;;;11372:18;;;11365:34;11415:18;;;11408:34;;;11304:18;;860:86:105;11129:319:277;785:172:105;-1:-1:-1;1123:1:105;;1126;;-1:-1:-1;580:555:105;-1:-1:-1;;580:555:105:o;186:359:111:-;-1:-1:-1;267:7:111;;536:1;;-1:-1:-1;186:359:111:o;277:307:112:-;545:4;518:31;;575:1;;-1:-1:-1;277:307:112:o;339:287:122:-;428:7;;545:4;518:31;;;568:10;:23;;590:1;568:23;;;581:6;568:23;559:32;617:1;;-1:-1:-1;339:287:122;-1:-1:-1;;;;339:287:122:o;698:417:123:-;787:7;;905:4;878:31;;;928:10;:23;;950:1;928:23;;;941:6;928:23;919:32;-1:-1:-1;1042:1:123;919:32;1033:10;:15;:37;;1060:6;1069:1;1060:10;1033:37;;728:287:124;817:7;;934:4;907:31;;;957:10;:23;;979:1;957:23;;;970:6;957:23;948:32;1006:1;;-1:-1:-1;728:287:124;-1:-1:-1;;;;728:287:124:o;328:129:125:-;-1:-1:-1;445:1:125;;448;;-1:-1:-1;328:129:125:o;356::129:-;-1:-1:-1;473:1:129;;476;;-1:-1:-1;356:129:129:o;287::130:-;-1:-1:-1;404:1:130;;;;-1:-1:-1;287:129:130:o;661:288:133:-;750:7;;868:4;841:31;;;900:1;891:10;;:23;;913:1;891:23;;359:239:147;-1:-1:-1;586:1:147;;440:7;;-1:-1:-1;359:239:147:o;339:355:148:-;666:1;642;616:27;;;611:33;339:355;;;;;:::o;1837:972:59:-;1910:12;2023:19;2055:3;:10;2068:1;2055:14;2045:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2045:25:59;;2023:47;;2147:6;2195:12;2191:17;2275:4;2270:3;2266:14;2342:4;2336:3;2330:10;2326:21;2317:7;2313:35;2401:4;2393:6;2389:17;2225:527;2437:4;2428:7;2425:17;2225:527;;;2608:19;;2717:14;;2699:33;;2672:25;;;2669:64;2648:86;;2489:4;2476:18;;;;2549:4;2531:23;2225:527;;;-1:-1:-1;2786:6:59;;1837:972;-1:-1:-1;;;;;;1837:972:59:o;2762:1882:154:-;2865:14;2881:21;2904:32;2994:14;3035:12;3030:789;3060:15;3053:22;;3030:789;;;3107:17;3155:9;3150:253;3174:5;:12;3170:1;:16;3150:253;;;3220:15;3237:14;3255:34;3269:4;3275:5;3281:1;3275:8;;;;;;;;:::i;3255:34::-;-1:-1:-1;3361:19:154;;;;;-1:-1:-1;;3188:3:154;;3150:253;;;-1:-1:-1;3424:10:154;1392:1:150;1387:6;;;115:66;1386:19;;;1369:12;;;1368:38;1448:1;1443:6;;;241:66;1442:19;;;1425:12;;1424:38;1504:1;1499:6;;;375:66;1498:19;;;1481:12;;1480:38;1560:1;1555:6;;;509:66;1554:19;;;1537:12;;1536:38;1617:2;1612:7;;;645:66;1611:21;;;1593:13;;1592:41;1676:2;1671:7;;;781:66;1670:21;;;1652:13;;1651:41;1735:2;1730:7;;;917:66;1729:21;;;1711:13;;1710:41;1795:3;1790:8;;;1055:66;1770:14;;;;1769:44;3424:38:154;;3493:6;3488:2;:11;3484:176;;;3536:2;3527:11;;3581:4;3564:22;;3628:9;3612:25;;3484:176;3733:5;:12;3727:2;:18;3723:78;;3773:5;;;;3723:78;-1:-1:-1;;3077:6:154;;3030:789;;;-1:-1:-1;3863:12:154;;3968:4;3962:11;;3863:21;;;;3994:34;;;4091:1;4087:23;4081:4;4077:34;4062:50;;4049:64;;3962:11;-1:-1:-1;3837:23:154;;;4224:404;4248:5;:12;4244:1;:16;4224:404;;;4286:15;4303:14;4321:38;4335:8;4321:38;;4345:5;4351:1;4345:8;;;;;;;;:::i;4321:38::-;4285:74;;;;4418:13;4408:7;:23;4436:1;4407:30;4403:211;;4477:23;;;;4403:211;;;4562:5;4568:1;4562:8;;;;;;;;:::i;:::-;;;;;;;4547:9;4557:1;4547:12;;;;;;;;:::i;:::-;;;;;;;;;;:23;4592:3;;;;;4403:211;-1:-1:-1;;4262:3:154;;4224:404;;;;2952:1686;;2762:1882;;;;;:::o;1664:727::-;1738:14;1754;1829:4;1826:1;1819:15;1861:4;1855;1847:19;1902:4;1899:1;1889:18;1879:28;;2373:1;2364:6;2361:1;2356:15;2352:23;2342:33;;1664:727;;;;;:::o;476:349:93:-;543:13;572:8;:15;591:1;572:20;568:59;;-1:-1:-1;615:1:93;;476:349;-1:-1:-1;476:349:93:o;568:59::-;-1:-1:-1;802:4:93;788:19;782:26;779:1;774:35;;476:349::o;3054:319::-;3149:14;3199:15;3217:36;3231:8;3241:11;3217:13;:36::i;:::-;3328:14;3325:1;3320:23;;3054:319;-1:-1:-1;;;;3054:319:93:o;3379:320::-;3475:14;3525:15;3543:36;3557:8;3567:11;3543:13;:36::i;:::-;3654:14;3651:1;3646:23;;3379:320;-1:-1:-1;;;;3379:320:93:o;1923:555:102:-;2056:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:28:102;-1:-1:-1;2107:364:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2107:364:102;;;;;;;;;;;;1923:555::o;1950:412:93:-;2040:15;2091:26;2124:21;2136:8;2124:11;:21::i;:::-;2148:1;2124:25;2120:1;:29;2091:58;;2163:14;2180:43;2201:8;2211:11;2180:20;:43::i;:::-;2279:44;;;;2275:57;;;2297:4;2275:57;;1950:412;-1:-1:-1;;;1950:412:93:o;2368:316::-;2460:14;2510:15;2528:36;2542:8;2552:11;2528:13;:36::i;:::-;2639:14;2636:1;2631:23;;2368:316;-1:-1:-1;;;;2368:316:93:o;2690:358::-;2812:18;2870:15;2888:36;2902:8;2912:11;2888:13;:36::i;:::-;3003:14;3000:1;2995:23;;2690:358;-1:-1:-1;;;;2690:358:93:o;10087:1022:151:-;10130:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10130:17:151;10159:23;10185:866;;;;;;;;10289:1;10185:866;;;;10329:1;10185:866;;;;10369:1;10185:866;;;;10413:1;10185:866;;;;10457:1;10185:866;;;;10551:1;10185:866;;;;10596:1;10185:866;;;;2872:6;2689;3175:49;10185:866;;;;10681:1;10185:866;;;;10726:1;10185:866;;;;10769:1;10185:866;;;;10816:1;10185:866;;;;10861:37;2099:35:153;1320:4;2357:52;1881:31;2308:102;;1357:1083;10861:37:151;10185:866;;;;10942:37;2445:36:155;470:4;2627:54;2090:34;417:4;2266:50;1637;366:4;1881:82;1246:38;295:4;1436:58;868:38;1417:78;1862:102;2247:70;2608:74;;669:2029;10942:37:151;10185:866;;11039:1;10185:866;;;;;;;9763:4;9757:11;;9781:42;;;9849:26;;;9836:40;;9895:39;;9944:15;;;:19;;;9973:15;;;:19;;;10002:17;;;:21;;;10033:18;;;:41;9895:39;11097:5;-1:-1:-1;;10087:1022:151:o;41187:710::-;41414:13;;41259:7;;;;41321:1;41530:92;41592:4;41588:9;41584:1;41577:4;41574:1;41569:13;41565:21;41561:37;41554:45;41547:4;41544:1;41541:11;41537:63;41530:92;;;41615:1;41608:9;41530:92;;;41740:14;;;;41656:4;41652:12;;;41666:1;41648:20;;41700:16;;;41689:28;;;;41773:87;;41825:22;;;;;;11953:19:277;;;11988:12;41825:22:151;;;;;;;;;;;;;;41809:40;;;;;;;;:::i;41773:87::-;-1:-1:-1;41877:6:151;;41187:710;-1:-1:-1;;;41187:710:151:o;338:990:156:-;423:11;436:13;503:27;518:5;525:4;503:14;:27::i;:::-;485:45;;-1:-1:-1;485:45:156;-1:-1:-1;485:45:156;544:768;;-1:-1:-1;665:16:156;;;;;759:4;753:11;;785:17;;;857:4;842:20;;;901:26;;;961:14;;948:28;;;1143:17;;;;1169:4;1113:24;;;1164:1;1143:22;;;;1142:31;1112:62;1243:4;1226:21;;;864:15;838:42;;;;1211:37;;;;:43;1192:62;;;1296:1;1280:17;338:990;;;;;:::o;41996:346:151:-;42080:7;42194:109;42268:1;42261:4;42257:1;42247:6;42241:13;42238:1;42233:22;42229:30;42225:41;42222:48;42216:3;42208:6;42205:15;42201:70;42194:109;;;42296:1;42288:6;42284:14;42274:24;;42194:109;;;-1:-1:-1;42329:6:151;;41996:346;-1:-1:-1;;41996:346:151:o;42713:1999::-;42978:13;;42792:7;;42972:4;42968:24;16488:20:152;43015:39:151;;43011:130;;43077:53;;;;;41137:28;;;;;43077:53;;;5446:25:277;5419:18;;43077:53:151;5300:177:277;43011:130:151;43451:11;;43415:1;43403:14;;;;;43184:25;;43251:27;;43437:33;;43464:4;43437:33;43150:31;43562:799;43576:4;43562:799;;43603:156;43686:3;43678:6;43675:15;43648:23;43638:6;43632:13;43629:1;43624:22;43621:51;43614:59;43610:81;43603:156;;;43739:1;43731:6;43727:14;43717:24;;43603:156;;;43920:1;43912:6;43908:14;43898:24;;44246:3;44238:6;44235:15;44228:23;44204:21;44194:6;44188:13;44185:1;44180:22;44177:49;44174:78;44171:176;;;-1:-1:-1;44283:1:151;44315:14;;;;44171:176;43562:799;;;43566:2;44627:3;44618:6;:12;44614:69;;;44653:19;;;;;;;;;;;;;;44614:69;-1:-1:-1;44699:6:151;;42713:1999;-1:-1:-1;;;;;42713:1999:151:o;9774:2851:154:-;10370:1;10360:12;;;10410:13;;9898:4;;;;9913:73;;1388:4;10425;10406:24;;;10512:29;10500:42;;10576:22;;;;10500:42;9898:4;10682:1600;10698:3;10689:6;:12;10682:1600;;;11002:1;10990:14;;11041:13;11096:17;;;;11151:13;;11096:17;;10721;;;;11056:4;11037:24;10721:17;;11244:25;11037:24;11264:4;11244:13;:25::i;:::-;11208:61;;;;11291:11;11349:12;11305:41;11343:1;11333:7;:11;11320:9;:25;1196:7:150;115:66;1392:1;1387;:6;;1386:19;115:66;1369:1;:12;1368:38;1364:42;;241:66;1448:1;1443;:6;;1442:19;241:66;1425:1;:12;1424:38;1420:42;;375:66;1504:1;1499;:6;;1498:19;375:66;1481:1;:12;1480:38;1476:42;;509:66;1560:1;1555;:6;;1554:19;509:66;1537:1;:12;1536:38;1532:42;;645:66;1617:2;1612:1;:7;;1611:21;645:66;1593:1;:13;1592:41;1588:45;;781:66;1676:2;1671:1;:7;;1670:21;781:66;1652:1;:13;1651:41;1647:45;;917:66;1735:2;1730:1;:7;;1729:21;917:66;1711:1;:13;1710:41;1706:45;;1055:66;1795:3;1790:1;:8;;1789:23;1055:66;1770:1;:14;1769:44;1765:48;;1835:1;1828:8;;1147:706;;;;11305:41:154;:56;1230:1;11590:22;11575:38;;11569:45;;-1:-1:-1;;1101:8:154;11401:25;;;;-1:-1:-1;11720:26:154;;11701:45;;;-1:-1:-1;11697:571:154;;-1:-1:-1;11697:571:154;-1:-1:-1;12134:4:154;;-1:-1:-1;11978:2:154;11973:17;;;;-1:-1:-1;12045:2:154;12040:17;12036:38;;;12076:6;12032:51;;-1:-1:-1;12126:35:154;;-1:-1:-1;;;;;12126:35:154;11697:571;1392:1:150;1387:6;;;115:66;1386:19;;;1369:12;;;1368:38;1448:1;1443:6;;;241:66;1442:19;;;1425:12;;1424:38;1504:1;1499:6;;;375:66;1498:19;;;1481:12;;1480:38;1560:1;1555:6;;;509:66;1554:19;;;1537:12;;1536:38;1617:2;1612:7;;;645:66;1611:21;;;1593:13;;1592:41;1676:2;1671:7;;;781:66;1670:21;;;1652:13;;1651:41;1735:2;1730:7;;;917:66;1729:21;;;1711:13;;1710:41;1795:3;1790:8;;;1055:66;1770:14;;;;1769:44;12208:41:154;;;;10703:1579;;;10682:1600;;;-1:-1:-1;12544:1:154;;;;-1:-1:-1;12544:1:154;;-1:-1:-1;9774:2851:154;-1:-1:-1;;;;;;;9774:2851:154:o;23585:5085:151:-;23861:39;:5;:37;:39::i;:::-;23997:9;;;:39;;3023:6;24010:26;23997:39;;;;24096:35;;;;;24417:16;;24503:20;24472:57;-1:-1:-1;24495:29:151;;;24472:57;;;24624:21;;24472:57;;24616:30;24526:1;24612:38;24472:57;24588:63;-1:-1:-1;24811:12:151;;24856:26;;25771:4;25760:16;;25989:22;24679:20;25981:31;;;25861:177;;25832:396;;26331:22;;24856:26;;25006:6;24988:25;;;25258:1;25246:14;;25206:59;;;;;;26205:1;26323:31;;;26319:39;25832:396;26294:65;26458:1;26454;26437:15;26433:23;26425:35;26718:24;;26794:26;;26822:11;26790:44;26787:67;;;26759:96;;27598:12;;27167:4;27152:19;;;27317:33;;;27152:198;27529:4;27520:13;;27509:25;;;27152:382;27591:34;;;;27808:4;27798:14;;;27794:860;;28152:12;;28254:4;28248:11;;28280:25;;;3266:4;28371;28367:21;;;28345:44;;28326:64;;28424:21;;28411:35;;;28577:17;;28596:11;28573:35;28570:51;28551:71;;27794:860;23691:4973;;23585:5085;;;:::o;1396:1144:156:-;1570:16;;;;1621:20;;;;1482:11;1713:15;;;1779:4;1766:18;;;1482:11;;;;1756:29;;;;;1891:1;1884:4;1867:22;;1863:30;1989:26;;;1986:483;;;2067:6;2055:10;2051:23;2034:421;2091:3;2084:11;2034:421;;2264:10;2258:4;2254:21;2241:11;2238:38;2235:202;;2313:4;2303:14;;2378:6;2365:10;2359:4;2355:21;2351:34;2342:43;;2410:5;;2235:202;2133:10;;-1:-1:-1;2187:6:156;2171:23;;2034:421;;;2038:38;1986:483;2511:22;2488:20;;;;:45;;;;-1:-1:-1;1396:1144:156;;;;-1:-1:-1;1396:1144:156;-1:-1:-1;1396:1144:156:o;17873:631:151:-;17941:19;18049:4;18042:5;18038:16;18032:23;18029:1;18024:32;18009:47;;18079:11;18094:1;18079:16;18075:423;;18229:4;18218:16;;18284:24;;18111:25;18276:33;18311:1;18272:41;;;18218:16;18330:45;;18406:17;18427:4;18406:25;18402:86;;18458:15;;;;;;;;;;;;;;18075:423;17931:573;17873:631;:::o;18510:5069::-;18614:7;18675:70;18763:18;18799:16;18833;18866:64;18895:5;:20;;;18917:4;18923:6;18866:28;:64::i;:::-;19095:21;;;19077:40;;20504:18;;;;18657:273;;-1:-1:-1;18657:273:151;;-1:-1:-1;18657:273:151;;-1:-1:-1;18657:273:151;-1:-1:-1;19119:11:151;19073:58;;19254:1;18944:19;19232:20;;;19228:28;;;;18944:19;;19254:1;20504:37;;:42;20500:948;;20584:22;;;;20610:4;20584:30;20632:802;20639:12;;20632:802;;20774:14;;21075:16;21065:26;;21049:43;;21045:142;;21129:4;21120:13;;21159:5;;;21045:142;-1:-1:-1;21346:14:151;21412:3;;;;;21362:6;21342:27;20632:802;;;20548:900;20500:948;21860:22;;;;21885:6;21860:31;21909:99;3638:1;21960:6;:46;;21991:15;21960:46;;;21987:1;21969:15;:19;21960:46;21909:5;;:99;:20;:99::i;:::-;21816:207;22299:6;22294:1239;;22457:4;22451:11;;22496:14;;;22483:28;;;22850:22;;;;22876:4;22850:30;:44;;22967:20;;22325:11;23131:34;23138:4;23144:10;23156:8;23131:34;;;:::i;:::-;23307:4;23298:14;;23291:33;-1:-1:-1;23409:22:151;;;;;23444:1;23434:6;23409:31;;;23408:37;23457:4;23450:11;;;;23407:55;;;;23382:80;;23480:18;;;:38;;;;;;22294:1239;-1:-1:-1;23554:8:151;;18510:5069;-1:-1:-1;;;;;;;;;;18510:5069:151:o;12191:5374::-;12458:4;12447:16;;12441:23;12334:19;12433:32;12504:15;;12500:127;;12550:58;;;;;41137:28;;;;;12550:58;;;5446:25:277;5419:18;;12550:58:151;5300:177:277;12500:127:151;12316:325;12843:39;:5;:37;:39::i;:::-;13118:9;;;;;13072:125;2689:6;13118:37;;;13072:125;13060:137;;;13235:17;;;;3023:6;13378:15;;;13255:4;13235:24;;;;13397:4;13378:23;;;;;13563:22;;;13562:31;13542:52;;-1:-1:-1;14102:20:151;;;14098:1378;;2689:6;14146:5;:9;;;:37;14187:1;14146:42;14142:682;;14219:59;;;;;41137:28;;;;;14219:59;;;5446:25:277;5419:18;;14219:59:151;5300:177:277;14142:682:151;14559:32;;;14651:4;14631:24;;;14613:15;;;:42;14762:18;;;;14559:32;;-1:-1:-1;14762:43:151;;14579:12;14762:29;:43::i;:::-;14741:18;;;:64;14098:1378;;;15157:1;15139:15;:19;15135:341;;;15197:15;15182:12;:30;15178:284;;;15243:55;;;;;41137:28;;;;;15243:55;;;5446:25:277;5419:18;;15243:55:151;5300:177:277;15178:284:151;15342:15;15327:12;:30;15323:139;;;15388:55;;;;;41137:28;;;;;15388:55;;;5446:25:277;5419:18;;15388:55:151;5300:177:277;15323:139:151;15576:38;;;:1;:38;15669:4;15643;:22;;15642:31;;;15687:1806;15724:3;15715:6;:12;15687:1806;;;15789:17;;;;15966:4;15951:37;;;;15945:44;15789:27;;;15820:6;15788:38;;15763:22;15937:53;16042:1;16025:1420;16050:8;16045:1;:13;16025:1420;;16267:4;16250:14;:21;16275:4;16250:29;16246:230;;16398:21;;16392:4;16388:32;;16246:230;16618:21;;16712:18;;;;16615:1;16610:30;;;;;16712:32;;16610:30;16712:22;:32::i;:::-;16691:18;;;:53;17282:81;17306:13;;;:37;;;;;17323:15;17342:1;17323:20;17306:37;:56;;17361:1;17306:56;;;17346:12;17306:56;17282:18;;;;;:23;:81::i;:::-;17233:18;;;:130;-1:-1:-1;17425:1:151;17407:19;;;;;16060:3;;16025:1420;;;-1:-1:-1;;17462:16:151;;;;;-1:-1:-1;15739:4:151;15729:14;15687:1806;;;-1:-1:-1;;;;17547:1:151;17527:21;17507:17;;;;:41;;;;-1:-1:-1;;;12191:5374:151:o;28676:6032::-;28744:9;;;:36;;28757:23;28744:36;;;28816:20;;;;3023:6;29091:16;;29085:23;28881:4;28863:22;;;;-1:-1:-1;29077:32:151;29111:1;29073:40;;29137:14;;;29133:5569;;29174:12;;;;;;;;;;;;;;29133:5569;29661:14;29689:25;29717:5;:18;;;29689:46;;29860:5;29854:12;29933:6;29923;29917:13;29911:4;29907:24;29903:37;29957:172;29978:11;29971:19;29957:172;;30088:13;;30027:11;;-1:-1:-1;30082:4:151;30078:24;30104:6;30074:37;29957:172;;;-1:-1:-1;30564:4:151;30558:11;30801:4;30790:16;;30906:20;;30558:11;;-1:-1:-1;30417:4:151;30405:17;;;30372:6;30530:1;;30732:19;;;;30858:1;;30898:29;;;30823:2893;31005:3;31002:1;30999:10;30823:2893;;;31297:1;31285:10;31281:18;31273:6;31269:31;31259:41;;31459:1;31445:11;31437:6;31433:24;31429:32;31621:362;31647:22;31631:14;31628:42;31621:362;;;31813:18;;31833:6;31809:31;31952:4;31935:22;;;-1:-1:-1;31809:31:151;31722:43;;31895:1;31621:362;;;-1:-1:-1;32384:1:151;32364:22;;32421:17;;;;32483:13;;32463:34;;32421:17;32537:22;;;;;32721:31;;32316:11;32832:433;32858:1;32842:14;32839:21;32832:433;;;33063:25;33057:4;33053:36;33091:6;33049:49;33147:25;;33127:46;;33234:4;33217:22;;;;32912;;;;;32832:433;;;33368:21;;33365:311;;33456:25;33450:4;33446:36;33484:6;33442:49;33540:25;;33520:46;;33647:1;33627:22;;33610:40;;;;33365:311;-1:-1:-1;;;31044:1:151;31084:21;;;31148:20;;31084:21;;31037:9;;;;;31145:1;31140:29;;30823:2893;;;30827:171;;;;33805:6;33797;33790:22;33970:1;33962:6;33958:14;33932:40;;34196:12;34191:1;34187;34179:6;34175:14;34171:22;34165:4;34161:33;34158:51;34120:10;34116:15;34095:18;34089:25;34085:47;34057:174;34017:18;33989:260;34383:4;34379:9;34372:4;34359:11;34355:22;34351:38;34345:4;34338:52;;;;;34597:1;34587:6;34582:1;:11;;34581:17;;;;:::i;:::-;34563:36;;34542:16;;;34533:4;34515:13;34552:6;34524:4;34515:13;:::i;:::-;34514:23;;34513:46;:87;34474:20;;;:126;9763:4;9757:11;;3266:4;9781:42;;;9849:26;;;9836:40;;9895:39;;;9609:23;9944:15;;;:19;;;9973:15;;;:19;;;10002:17;;;:21;;;10033:18;;;:41;29647:5055;;28734:5974;;;28676:6032;:::o;34714:4165::-;34867:20;;;;35376:12;;35370:19;34785:21;;34867:20;34940:4;34922:22;;;;3266:4;35420:35;;35416:97;;35482:16;;;;;;;;;;;;;;35416:97;35682:4;35676:11;;-1:-1:-1;35842:4:151;35830:17;;35952:4;35937:20;;35527:14;35937:20;35830:17;35974:29;-1:-1:-1;36042:1:151;36288;36273:17;;36261:30;;;;;;;36030:14;36576:1;;;36634:916;36669:9;36661:6;36658:21;36634:916;;;36766:27;;;36795:6;36762:40;;37054:27;37329:31;37333:4;37329:31;;;;37326:56;;37320:4;37316:67;37411:32;;;37404:51;37493:39;;;36976:4;36972:17;;;36968:37;36949:57;;;;;36692:17;36634:916;;;-1:-1:-1;37593:21:151;;37590:41;37567:65;;;37685:38;;;37666:58;37689:23;37666:58;;;37649:76;;37879:41;;;37933:4;37875:52;37871:68;37865:4;37858:82;-1:-1:-1;38192:671:151;38216:12;38212:1;:16;38192:671;;;38471:1;38464:9;;38443:32;;38461:1;38443:32;38437:39;38478:6;38433:52;;;38523:34;;38595:20;;38657:4;38667;38663:20;;;38653:31;;38723:4;38719:20;;;;38715:33;;38783:65;38653:31;38523:34;38715:33;38783:27;:65::i;:::-;-1:-1:-1;;;38230:3:151;;38192:671;;;;34818:4055;;;;;;34714:4165;;;:::o;38885:1947::-;39021:22;;;;39180:4;39174:11;;39046:6;39021:31;;39230;;;39605:4;39584:26;;;39572:39;;39836:17;;;39823:31;;;39174:11;;39021:31;;39106:4;39080:30;;;;;39174:11;40253:563;40271:3;40263:6;40260:15;40253:563;;;40795:4;40782:18;;40776:25;40761:41;;40655:14;;40671:6;40651:27;;40353:17;;;;;40253:563;;;40257:2;;39146:1680;;38885:1947;;;:::o;831:1113:93:-;1163:1;1146:19;;1124:42;;1142:1;1124:42;1118:49;1169:6;1114:62;928:14;1582:21;1132:8;1582:11;:21::i;:::-;1782:15;;1566:37;;-1:-1:-1;1738:26:93;1750:1;1742:9;;1738:22;;:26;;1782:34;-1:-1:-1;1782:34:93;:58;;;1835:5;1820:11;:20;;1782:58;1778:150;;;1891:8;1901:11;1867:46;;;;;;;;;;;;:::i;1778:150::-;1542:396;;831:1113;;;;:::o;11238:947:151:-;11402:4;11395:5;11391:16;11458;11452:23;11449:1;11444:32;11623:1;11605:16;11601:24;11583:16;11579:47;11573:54;11570:1;11565:63;11555:614;;11666:12;;11721:17;;11874:4;11863:16;;11857:23;;11749:1;11740:6;11717:30;;;;11713:38;;;;11802:4;11798:21;11782:38;;;11999:4;12026:1;11947:2;11942:21;;;11920:44;;12005:23;11995:34;12077:23;12061:40;12118:37;;11555:614;;11238:947;:::o;3348:5359:153:-;3709:13;;3476:64;;3541:7;;;;;;3826:1;3811:13;;;3807:21;12910:131:152;3903:33:153;;:38;3899:4435;;4137:1;4122:13;;;4118:21;4233:47;4234:15;;;4233:47;4229:4091;;4334:1;4325:10;;;14521:65:152;4618:169:153;4677:11;4673:1;4661:8;4655:15;4652:1;4647:24;4643:32;4639:50;4632:58;4618:169;;4752:1;4742:8;4738:16;4726:28;;4618:169;;;-1:-1:-1;5330:11:153;;5034:6;4987:53;;;5316:33;;5343:4;5316:33;5404:17;;;5400:106;;;5460:19;;;;;;;;;;;;;;5400:106;-1:-1:-1;5557:6:153;-1:-1:-1;5565:10:153;;-1:-1:-1;5577:8:153;-1:-1:-1;5577:8:153;;-1:-1:-1;5549:47:153;;-1:-1:-1;;;5549:47:153;4229:4091;5757:6;5894:1;5881:14;;5736:18;12910:131:152;13103:29;6241:173:153;6300:15;6296:1;6284:8;6278:15;6275:1;6270:24;6266:32;6262:54;6255:62;6241:173;;6379:1;6369:8;6365:16;6353:28;;6241:173;;;6741:5;6737:1;6725:8;6719:15;6716:1;6711:24;6707:32;6703:44;6696:52;6686:567;;6864:1;6850:16;;;6797:8;-1:-1:-1;7042:181:153;7101:15;7097:1;7085:8;7079:15;7076:1;7071:24;7067:32;7063:54;7056:62;7042:181;;7184:1;7174:8;7170:16;7158:28;;7042:181;;;-1:-1:-1;;7326:14:153;;;;;:73;;;7356:9;7368:1;7356:13;7345:8;:24;:53;;;;7385:9;7397:1;7385:13;7373:8;:25;7345:53;7322:202;;;7434:67;;;;;41137:28:151;;;;;7434:67:153;;;5446:25:277;5419:18;;7434:67:153;5300:177:277;7322:202:153;8031:11;;7727:6;1320:4;7677:46;;;7676:57;;8017:33;;8044:4;8017:33;8105:21;;;8101:110;;;8165:19;;;;;;;;;;;;;;8101:110;-1:-1:-1;8262:6:153;-1:-1:-1;8270:10:153;;-1:-1:-1;8282:8:153;-1:-1:-1;8282:8:153;;-1:-1:-1;8254:47:153;;-1:-1:-1;;;;8254:47:153;3899:4435;8451:11;;8437:33;;8464:4;8437:33;8501:20;;;8497:194;;8548:19;;;;;;;;;;;;;;8497:194;8613:63;;;;;41137:28:151;;;;;8613:63:153;;;5446:25:277;5419:18;;8613:63:153;5300:177:277;3348:5359:153;;;;;;;;:::o;8188:369:151:-;8264:12;8322:15;:7;8335:1;8322:12;:15::i;:::-;8312:25;-1:-1:-1;;8506:16:151;8475:47;;8406:4;8401:1;8369:33;;;8368:42;;;;8424:11;;8527;;8474:65;8188:369;;;;:::o;9077:345::-;9146:12;9243:4;9212:35;;9265:11;;;9261:73;;;9303:16;;;;;;;;;;;;;;9261:73;-1:-1:-1;;9372:32:151;;;9077:345::o;8563:508::-;8633:12;8730:4;8699:35;;;8885:12;;;8798:1;8766:33;;;8765:42;8867:4;8835:36;;;8915:13;;;8911:65;;;-1:-1:-1;8954:7:151;8911:65;9048:4;9041:3;:11;;9035:1;9025:6;:11;;9014:7;:23;:39;8989:65;;;;;8563:508;;;;:::o;9010:1887:153:-;9105:13;9171:11;;;9209:4;9200:13;;9196:1685;;;9240:58;;;;;41137:28:151;;;;;9240:58:153;;;5446:25:277;5419:18;;9240:58:153;5300:177:277;9196:1685:153;9323:6;9333:1;9323:11;9319:1562;;9361:60;;;;;41137:28:151;;;;;9361:60:153;;;5446:25:277;5419:18;;9361:60:153;5300:177:277;9319:1562:153;9455:1;9446:6;:10;9460:1;9446:15;9442:1439;;9488:59;;;;;41137:28:151;;;;;9488:59:153;;;5446:25:277;5419:18;;9488:59:153;5300:177:277;9442:1439:153;9603:7;;;9586:14;9669:1198;9686:5;9676:6;:15;9669:1198;;9830:13;;9715:19;9822:22;;;;9969:1;:16;;;12910:131:152;10075:27:153;;:32;10071:657;;-1:-1:-1;10144:41:153;;;10071:657;;;14199:93:152;10265:31:153;;:36;10261:467;;-1:-1:-1;10338:46:153;;;10261:467;;;14371:93:152;10464:31:153;;:36;10460:268;;-1:-1:-1;10537:46:153;;;10460:268;;;10645:60;;;;;41137:28:151;;;;;10645:60:153;;;5446:25:277;5419:18;;10645:60:153;5300:177:277;10460:268:153;10759:21;;10750:30;;;;;-1:-1:-1;;10840:8:153;;;;;10817:1;10802:16;9669:1198;;;9568:1313;;9130:1761;9010:1887;;;;;:::o;11526:4950::-;12331:11;;;12325:18;11625:13;;;;11891:18;;11625:13;;12383;;;12241:11;;;12340:1;12625:10;;:62;;;;-1:-1:-1;7285:1:152;12641:20:153;;13103:29:152;12640:41:153;12639:48;;12625:62;12621:1379;;;12726:1;12720:3;:7;12711:16;;12886:2;12872:11;12865:4;12862:1;12857:13;12853:31;12849:40;12835:11;12828:4;12825:1;12820:13;12816:31;12812:78;12800:90;;12621:1379;;;13036:4;13033:1;13028:13;13009:32;;13299:1;13290:6;:10;:62;;;;-1:-1:-1;7285:1:152;13306:20:153;;13103:29:152;13305:41:153;13304:48;;13290:62;13286:696;;;13395:1;13389:3;:7;13380:16;;13508:11;13501:4;13498:1;13493:13;13489:31;13477:43;;13286:696;;;13748:10;;13744:238;;13801:1;13795:3;:7;13786:16;;13839:1;13828:12;;13744:238;;;13902:57;;;;;41137:28:151;;;;;13902:57:153;;;5446:25:277;5419:18;;13902:57:153;5300:177:277;13744:238:153;12077:1937;;;14146:486;14163:5;14153:6;:15;;:32;;;;;14183:2;14172:8;:13;14153:32;14146:486;;;14497:13;;14494:1;14489:22;14485:40;;;14531:2;14527:17;;;14481:64;14470:76;;;;;14609:8;;;;;14581:10;;14146:486;;;14848:5;14838:6;:15;14834:1626;;15002:13;;14895;14994:22;14990:40;;;15230:1;15222:9;;15218:451;;;41137:28:151;;;;;15289:39:153;15266:63;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;15218:451:153;15410:2;:14;;;15401:24;;15455:14;;;:22;-1:-1:-1;15451:155:153;;;41137:28:151;;;;;15539:39:153;40978:203:151;15451:155:153;15631:15;;;;;-1:-1:-1;15690:8:153;;;;;15881:547;15898:5;15888:6;:15;15881:547;;16128:13;;15997:23;16120:22;16224:18;16197:46;;16193:179;;41137:28:151;;;;;16305:39:153;40978:203:151;16193:179:153;-1:-1:-1;16397:8:153;;;;;15881:547;;3762:535:155;4038:13;;3885:7;;;;4054:1;4030:22;;;4026:30;4079:27;;;4075:123;;4129:58;;;;;41137:28:151;;;;;4129:58:155;;;5446:25:277;5419:18;;4129:58:155;5300:177:277;4075:123:155;4266:6;4287:1;4258:32;;;;;3762:535;;;;;;;:::o;4349:1314::-;4642:11;;4758:13;;4487:7;;;;4774:1;4750:22;;;4746:30;;4628:33;;4655:4;4628:33;4807:27;;;4803:844;;4863:52;4890:1;4881:10;;4893:3;15866:76:152;4863:17:155;:52::i;:::-;4854:61;-1:-1:-1;4934:13:155;4983:67;5003:14;5019:4;5025:16;4854:61;4983:19;:67::i;:::-;4965:85;;-1:-1:-1;4965:85:155;-1:-1:-1;5078:48:155;4965:85;5104:3;15866:76:152;5078:17:155;:48::i;:::-;5275:13;;5069:57;;-1:-1:-1;5291:1:155;5272;5267:22;;;;5263:30;;-1:-1:-1;6613:41:152;5332:25:155;;5328:135;;41137:28:151;;;;;5404:39:155;5388:56;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;5328:135:155;5497:1;5488:10;;;-1:-1:-1;5513:5:155;-1:-1:-1;5480:40:155;;-1:-1:-1;;5480:40:155;4803:844;5608:6;5629:1;5600:32;;;;;;;;5699:1704;6020:11;;6136:13;;5849:7;;;;6152:1;6128:22;;;6124:30;;6006:33;;6033:4;6006:33;6185:27;;;6181:1206;;6241:52;6268:1;6259:10;;6271:3;15866:76:152;6241:17:155;:52::i;:::-;6232:61;-1:-1:-1;6312:9:155;6353:66;6373:14;6389:4;6395:15;6232:61;6353:19;:66::i;:::-;6339:80;;-1:-1:-1;6339:80:155;-1:-1:-1;6339:80:155;6498:48;6339:80;6524:3;15866:76:152;6498:17:155;:48::i;:::-;6489:57;-1:-1:-1;6565:9:155;6606:66;6626:14;6642:4;6648:15;6489:57;6606:19;:66::i;:::-;6592:80;;-1:-1:-1;6745:1:155;6740:6;;;6713:34;;;;;6592:80;-1:-1:-1;6776:48:155;6592:80;6802:3;15866:76:152;6776:17:155;:48::i;:::-;6974:13;;6767:57;;-1:-1:-1;6990:1:155;6971;6966:22;;;;6962:30;;-1:-1:-1;6613:41:152;7031:25:155;;7027:135;;41137:28:151;;;;;7103:39:155;40978:203:151;7027:135:155;-1:-1:-1;7196:1:155;7187:10;;;-1:-1:-1;7199:7:155;-1:-1:-1;7179:28:155;;-1:-1:-1;;;7179:28:155;6181:1206;41137:28:151;;;;;7332:39:155;7316:56;;;;;;;;;5446:25:277;;5434:2;5419:18;;5300:177;10078:2147:155;10367:11;;10483:13;;10212:7;;;;10499:1;10475:22;;;10471:30;;10353:33;;10380:4;10353:33;10532:27;;;10528:1681;;10588:52;10615:1;10606:10;;10618:3;15866:76:152;10588:17:155;:52::i;:::-;10817:13;;10579:61;;-1:-1:-1;10833:1:155;10659:9;10809:22;;;10805:30;;-1:-1:-1;10874:25:155;;;10870:269;;-1:-1:-1;10927:1:155;10870:269;;;10989:52;11009:14;11025:4;11031:1;11034:6;10989:19;:52::i;:::-;10975:66;;-1:-1:-1;10975:66:155;-1:-1:-1;11072:48:155;10975:66;11098:3;15866:76:152;11072:17:155;:48::i;:::-;11063:57;;10870:269;11315:13;;11331:1;11157:9;11307:22;;;11303:30;;-1:-1:-1;11372:25:155;;;11368:269;;-1:-1:-1;11425:1:155;11368:269;;;11487:52;11507:14;11523:4;11529:1;11532:6;11487:19;:52::i;:::-;11473:66;;-1:-1:-1;11473:66:155;-1:-1:-1;11570:48:155;11473:66;11596:3;15866:76:152;11570:17:155;:48::i;:::-;11561:57;;11368:269;11849:13;;11696:1;11655:15;11841:22;;;;11837:30;;;;-1:-1:-1;11691:6:155;;;11686:12;;6613:41:152;11906:25:155;;11902:135;;41137:28:151;;;;;11978:39:155;40978:203:151;11902:135:155;12071:1;12062:10;;;-1:-1:-1;12074:7:155;-1:-1:-1;12054:28:155;;-1:-1:-1;;;;12054:28:155;7466:2576;7757:11;;7873:13;;7602:7;;;;7889:1;7865:22;;;7861:30;;7743:33;;7770:4;7743:33;7922:27;;;7918:2108;;7978:52;8005:1;7996:10;;8008:3;15866:76:152;7978:17:155;:52::i;:::-;7969:61;-1:-1:-1;8091:9:155;8132:66;8152:14;8168:4;8174:15;7969:61;8132:19;:66::i;:::-;8118:80;;-1:-1:-1;8118:80:155;-1:-1:-1;8225:48:155;8118:80;8251:3;15866:76:152;8225:17:155;:48::i;:::-;8487:13;;8216:57;;-1:-1:-1;8503:1:155;8329:9;8479:22;;;8475:30;;-1:-1:-1;8544:25:155;;;8540:269;;-1:-1:-1;8597:1:155;8540:269;;;8659:52;8679:14;8695:4;8701:1;8704:6;8659:19;:52::i;:::-;8645:66;;-1:-1:-1;8645:66:155;-1:-1:-1;8742:48:155;8645:66;8768:3;15866:76:152;8742:17:155;:48::i;:::-;8733:57;;8540:269;9022:13;;9038:1;8864:9;9014:22;;;9010:30;;-1:-1:-1;9079:25:155;;;9075:269;;-1:-1:-1;9132:1:155;9075:269;;;9194:52;9214:14;9230:4;9236:1;9239:6;9194:19;:52::i;:::-;9180:66;;-1:-1:-1;9180:66:155;-1:-1:-1;9277:48:155;9180:66;9303:3;15866:76:152;9277:17:155;:48::i;:::-;9268:57;;9075:269;9567:13;;9583:1;9362:15;9559:22;;;;9555:30;;-1:-1:-1;9403:1:155;9398:6;;;9393:12;;9414:1;9409:6;;;9393:23;6613:41:152;9624:25:155;;9620:135;;41137:28:151;;;;;9696:39:155;40978:203:151;9620:135:155;9789:1;9780:10;;;-1:-1:-1;9792:7:155;-1:-1:-1;9772:28:155;;-1:-1:-1;;;;;9772:28:155;2744:967;3045:13;;2892:7;;;;3061:1;3037:22;;;3033:30;3086:25;;;3082:119;;41137:28:151;;;;;3150:39:155;40978:203:151;3082:119:155;3224:77;3315:18;3347:16;3377;3406:58;3435:14;3451:4;3457:6;3406:28;:58::i;:::-;3210:254;;;;;;;;3474:13;3490:41;3504:4;3510:10;3522:8;3490:13;:41;;:::i;:::-;3474:57;;3553:3;3545:5;:11;3541:105;;;3579:56;;;;;41137:28:151;;;;;3579:56:155;;;5446:25:277;5419:18;;3579:56:155;5300:177:277;3541:105:155;3664:8;;;;-1:-1:-1;2744:967:155;-1:-1:-1;;;;;;;;;2744:967:155:o;-1:-1:-1:-;;;:::i;:::-;:::o;14:332:277:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:277:o;543:184::-;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:253;804:2;798:9;846:4;834:17;;881:18;866:34;;902:22;;;863:62;860:88;;;928:18;;:::i;:::-;964:2;957:22;732:253;:::o;990:334::-;1061:2;1055:9;1117:2;1107:13;;1122:66;1103:86;1091:99;;1220:18;1205:34;;1241:22;;;1202:62;1199:88;;;1267:18;;:::i;:::-;1303:2;1296:22;990:334;;-1:-1:-1;990:334:277:o;1329:245::-;1377:4;1410:18;1402:6;1399:30;1396:56;;;1432:18;;:::i;:::-;-1:-1:-1;1489:2:277;1477:15;1494:66;1473:88;1563:4;1469:99;;1329:245::o;1579:462::-;1621:5;1674:3;1667:4;1659:6;1655:17;1651:27;1641:55;;1692:1;1689;1682:12;1641:55;1728:6;1715:20;1759:48;1775:31;1803:2;1775:31;:::i;:::-;1759:48;:::i;:::-;1832:2;1823:7;1816:19;1878:3;1871:4;1866:2;1858:6;1854:15;1850:26;1847:35;1844:55;;;1895:1;1892;1885:12;1844:55;1960:2;1953:4;1945:6;1941:17;1934:4;1925:7;1921:18;1908:55;2008:1;1983:16;;;2001:4;1979:27;1972:38;;;;1987:7;1579:462;-1:-1:-1;;;1579:462:277:o;2046:183::-;2106:4;2139:18;2131:6;2128:30;2125:56;;;2161:18;;:::i;:::-;-1:-1:-1;2206:1:277;2202:14;2218:4;2198:25;;2046:183::o;2234:662::-;2288:5;2341:3;2334:4;2326:6;2322:17;2318:27;2308:55;;2359:1;2356;2349:12;2308:55;2395:6;2382:20;2421:4;2445:60;2461:43;2501:2;2461:43;:::i;2445:60::-;2539:15;;;2625:1;2621:10;;;;2609:23;;2605:32;;;2570:12;;;;2649:15;;;2646:35;;;2677:1;2674;2667:12;2646:35;2713:2;2705:6;2701:15;2725:142;2741:6;2736:3;2733:15;2725:142;;;2807:17;;2795:30;;2845:12;;;;2758;;2725:142;;;-1:-1:-1;2885:5:277;2234:662;-1:-1:-1;;;;;;2234:662:277:o;2901:793::-;3037:6;3045;3053;3106:2;3094:9;3085:7;3081:23;3077:32;3074:52;;;3122:1;3119;3112:12;3074:52;3162:9;3149:23;3191:18;3232:2;3224:6;3221:14;3218:34;;;3248:1;3245;3238:12;3218:34;3271:49;3312:7;3303:6;3292:9;3288:22;3271:49;:::i;:::-;3261:59;;3373:2;3362:9;3358:18;3345:32;3329:48;;3402:2;3392:8;3389:16;3386:36;;;3418:1;3415;3408:12;3386:36;3441:63;3496:7;3485:8;3474:9;3470:24;3441:63;:::i;:::-;3431:73;;3557:2;3546:9;3542:18;3529:32;3513:48;;3586:2;3576:8;3573:16;3570:36;;;3602:1;3599;3592:12;3570:36;;3625:63;3680:7;3669:8;3658:9;3654:24;3625:63;:::i;:::-;3615:73;;;2901:793;;;;;:::o;4164:250::-;4249:1;4259:113;4273:6;4270:1;4267:13;4259:113;;;4349:11;;;4343:18;4330:11;;;4323:39;4295:2;4288:10;4259:113;;;-1:-1:-1;;4406:1:277;4388:16;;4381:27;4164:250::o;4419:329::-;4460:3;4498:5;4492:12;4525:6;4520:3;4513:19;4541:76;4610:6;4603:4;4598:3;4594:14;4587:4;4580:5;4576:16;4541:76;:::i;:::-;4662:2;4650:15;4667:66;4646:88;4637:98;;;;4737:4;4633:109;;4419:329;-1:-1:-1;;4419:329:277:o;4753:217::-;4900:2;4889:9;4882:21;4863:4;4920:44;4960:2;4949:9;4945:18;4937:6;4920:44;:::i;4975:320::-;5043:6;5096:2;5084:9;5075:7;5071:23;5067:32;5064:52;;;5112:1;5109;5102:12;5064:52;5152:9;5139:23;5185:18;5177:6;5174:30;5171:50;;;5217:1;5214;5207:12;5171:50;5240:49;5281:7;5272:6;5261:9;5257:22;5240:49;:::i;5997:435::-;6050:3;6088:5;6082:12;6115:6;6110:3;6103:19;6141:4;6170:2;6165:3;6161:12;6154:19;;6207:2;6200:5;6196:14;6228:1;6238:169;6252:6;6249:1;6246:13;6238:169;;;6313:13;;6301:26;;6347:12;;;;6382:15;;;;6274:1;6267:9;6238:169;;;-1:-1:-1;6423:3:277;;5997:435;-1:-1:-1;;;;;5997:435:277:o;6437:421::-;6662:2;6651:9;6644:21;6625:4;6688:44;6728:2;6717:9;6713:18;6705:6;6688:44;:::i;:::-;6780:9;6772:6;6768:22;6763:2;6752:9;6748:18;6741:50;6808:44;6845:6;6837;6808:44;:::i;:::-;6800:52;6437:421;-1:-1:-1;;;;;6437:421:277:o;6863:747::-;7206:42;7198:6;7194:55;7183:9;7176:74;7286:3;7281:2;7270:9;7266:18;7259:31;7157:4;7313:45;7353:3;7342:9;7338:19;7330:6;7313:45;:::i;:::-;7406:9;7398:6;7394:22;7389:2;7378:9;7374:18;7367:50;7440:44;7477:6;7469;7440:44;:::i;:::-;7426:58;;7532:9;7524:6;7520:22;7515:2;7504:9;7500:18;7493:50;7560:44;7597:6;7589;7560:44;:::i;:::-;7552:52;6863:747;-1:-1:-1;;;;;;;6863:747:277:o;8200:2482::-;8327:6;8358:2;8401;8389:9;8380:7;8376:23;8372:32;8369:52;;;8417:1;8414;8407:12;8369:52;8450:9;8444:16;8479:18;8520:2;8512:6;8509:14;8506:34;;;8536:1;8533;8526:12;8506:34;8574:6;8563:9;8559:22;8549:32;;8619:7;8612:4;8608:2;8604:13;8600:27;8590:55;;8641:1;8638;8631:12;8590:55;8670:2;8664:9;8693:60;8709:43;8749:2;8709:43;:::i;8693:60::-;8787:15;;;8869:1;8865:10;;;;8857:19;;8853:28;;;8818:12;;;;8893:19;;;8890:39;;;8925:1;8922;8915:12;8890:39;8957:2;8953;8949:11;8969:1683;8985:6;8980:3;8977:15;8969:1683;;;9064:3;9058:10;9100:2;9087:11;9084:19;9081:109;;;9144:1;9173:2;9169;9162:14;9081:109;9213:20;;9256:4;9284:16;;;9302:66;9280:89;9276:98;-1:-1:-1;9273:188:277;;;9415:1;9444:2;9440;9433:14;9273:188;9487:22;;:::i;:::-;9550:2;9546;9542:11;9536:18;9529:5;9522:33;9578:2;9622;9618;9614:11;9608:18;9674:4;9665:7;9661:18;9652:7;9649:31;9639:132;;9723:1;9753:3;9748;9741:16;9639:132;9791:14;;;9784:31;9850:11;;;9844:18;;9878:16;;;9875:109;;;9936:1;9966:3;9961;9954:16;9875:109;10016:8;10012:2;10008:17;9997:28;;10066:7;10061:2;10056:3;10052:12;10048:26;10038:127;;10117:1;10106:12;;10147:3;10142;10135:16;10038:127;10204:2;10199:3;10195:12;10189:19;10178:30;;10234:49;10250:32;10278:3;10250:32;:::i;10234:49::-;10310:3;10303:5;10296:18;10357:7;10352:2;10346:3;10341;10337:13;10333:22;10330:35;10327:128;;;10407:1;10437:3;10432;10425:16;10327:128;10468:69;10533:3;10528:2;10521:5;10517:14;10512:2;10507:3;10503:12;10468:69;:::i;:::-;10557:14;;;10550:29;10592:18;;-1:-1:-1;;10630:12:277;;;;9002;;8969:1683;;;-1:-1:-1;10671:5:277;8200:2482;-1:-1:-1;;;;;;;;8200:2482:277:o;10940:184::-;10992:77;10989:1;10982:88;11089:4;11086:1;11079:15;11113:4;11110:1;11103:15;12235:184;12287:77;12284:1;12277:88;12384:4;12381:1;12374:15;12408:4;12405:1;12398:15;12424:128;12491:9;;;12512:11;;;12509:37;;;12526:18;;:::i;12557:125::-;12622:9;;;12643:10;;;12640:36;;;12656:18;;:::i;12687:288::-;12862:2;12851:9;12844:21;12825:4;12882:44;12922:2;12911:9;12907:18;12899:6;12882:44;:::i;:::-;12874:52;;12962:6;12957:2;12946:9;12942:18;12935:34;12687:288;;;;;:::o;12980:184::-;13032:77;13029:1;13022:88;13129:4;13126:1;13119:15;13153:4;13150:1;13143:15",
    "linkReferences": {},
    "immutableReferences": {
      "54688": [
        {
          "start": 497,
          "length": 32
        },
        {
          "start": 1066,
          "length": 32
        }
      ],
      "54692": [
        {
          "start": 400,
          "length": 32
        },
        {
          "start": 1101,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "authoringMetaHash()": "b6c7175a",
    "buildParseMeta(bytes)": "a600bd0a",
    "deployExpression(bytes,uint256[],uint256[])": "31a66b65",
    "iInterpreter()": "f0cfdd37",
    "iStore()": "c19423bc",
    "integrityCheck(bytes,uint256[],uint256[])": "cbb7d173",
    "integrityFunctionPointers()": "8d614591",
    "parse(bytes)": "fab4087a",
    "parseMeta()": "ffc25704",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"authoringMeta\",\"type\":\"bytes\"}],\"internalType\":\"struct RainterpreterExpressionDeployerConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"AuthoringMetaHashMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dynamicLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"standardOpsLength\",\"type\":\"uint256\"}],\"name\":\"BadDynamicLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedInputs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeInputs\",\"type\":\"uint256\"}],\"name\":\"BadOpInputsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DanglingSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"DecimalLiteralOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateFingerprint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorOffset\",\"type\":\"uint256\"}],\"name\":\"DuplicateLHSItem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entrypointIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOutputs\",\"type\":\"uint256\"}],\"name\":\"EntrypointMinOutputs\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedEntrypoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualEntrypoints\",\"type\":\"uint256\"}],\"name\":\"EntrypointMissing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entrypointIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputsLength\",\"type\":\"uint256\"}],\"name\":\"EntrypointNonZeroInput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ExcessLHSItems\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ExcessRHSItems\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ExpectedLeftParen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ExpectedOperand\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"HexLiteralOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"MalformedCommentStart\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"MalformedExponentDigits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"MalformedHexLiteral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSources\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"MissingFinalSemi\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"NotAcceptingInputs\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"OddLengthHexLiteral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"OperandOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constantsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constantRead\",\"type\":\"uint256\"}],\"name\":\"OutOfBoundsConstantRead\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackTopIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackRead\",\"type\":\"uint256\"}],\"name\":\"OutOfBoundsStackRead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParenOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParserOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"sourceIndex\",\"type\":\"uint256\"}],\"name\":\"SourceOffsetOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stackMaxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeAllocation\",\"type\":\"uint256\"}],\"name\":\"StackAllocationMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeOutputs\",\"type\":\"uint256\"}],\"name\":\"StackOutputsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StackOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedInputs\",\"type\":\"uint256\"}],\"name\":\"StackUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StackUnderflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackHighwater\",\"type\":\"uint256\"}],\"name\":\"StackUnderflowHighwater\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnclosedLeftParen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnclosedOperand\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnexpectedComment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actualBytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedInterpreterBytecodeHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnexpectedLHSChar\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actualOpMeta\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedOpMetaHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnexpectedOperand\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"actualPointers\",\"type\":\"bytes\"}],\"name\":\"UnexpectedPointers\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnexpectedRHSChar\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnexpectedRightParen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actualBytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedStoreBytecodeHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnknownWord\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"UnsupportedLiteralType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"WordSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WriteError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ZeroLengthDecimal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"ZeroLengthHexLiteral\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"store\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"opMeta\",\"type\":\"bytes\"}],\"name\":\"DISpair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"name\":\"ExpressionAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"minOutputs\",\"type\":\"uint256[]\"}],\"name\":\"NewExpression\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authoringMetaHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"authoringMeta\",\"type\":\"bytes\"}],\"name\":\"buildParseMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minOutputs\",\"type\":\"uint256[]\"}],\"name\":\"deployExpression\",\"outputs\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iInterpreter\",\"outputs\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minOutputs\",\"type\":\"uint256[]\"}],\"name\":\"integrityCheck\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"integrityFunctionPointers\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"parse\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parseMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId_\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AuthoringMetaHashMismatch(bytes32,bytes32)\":[{\"details\":\"The `IParserV1` MUST revert if the authoring meta provided to a build does not match the authoring meta hash.\"}],\"DuplicateFingerprint()\":[{\"details\":\"For metadata builder.\"}],\"DuplicateLHSItem(uint256)\":[{\"details\":\"Thrown when a stack name is duplicated. Shadowing in all forms is disallowed in Rainlang.\"}],\"EntrypointMissing(uint256,uint256)\":[{\"details\":\"There are more entrypoints defined by the minimum stack outputs than there are provided sources. This means the calling contract WILL attempt to eval a dangling reference to a non-existent source at some point, so this MUST REVERT.\"}],\"UnexpectedInterpreterBytecodeHash(bytes32)\":[{\"params\":{\"actualBytecodeHash\":\"The bytecode hash that was found at the interpreter address upon construction.\"}}],\"UnexpectedPointers(bytes)\":[{\"details\":\"Thrown when the pointers known to the expression deployer DO NOT match the interpreter it is constructed for. This WILL cause undefined expression behaviour so MUST REVERT.\",\"params\":{\"actualPointers\":\"The actual function pointers found at the interpreter address upon construction.\"}}],\"UnexpectedStoreBytecodeHash(bytes32)\":[{\"params\":{\"actualBytecodeHash\":\"The bytecode hash that was found at the store address upon construction.\"}}]},\"events\":{\"DISpair(address,address,address,address,bytes)\":{\"params\":{\"opMeta\":\"The raw binary data of the op meta. Maybe compressed data etc. and is intended for offchain consumption.\",\"sender\":\"The `msg.sender` providing the op meta.\"}},\"ExpressionAddress(address,address)\":{\"params\":{\"expression\":\"The address of the deployed expression.\",\"sender\":\"The caller of `deployExpression`.\"}},\"NewExpression(address,bytes,uint256[],uint256[])\":{\"params\":{\"bytecode\":\"As per `IExpressionDeployerV2`.\",\"constants\":\"As per `IExpressionDeployerV2`.\",\"minOutputs\":\"As per `IExpressionDeployerV2`.\",\"sender\":\"The caller of `deployExpression`.\"}}},\"kind\":\"dev\",\"methods\":{\"authoringMetaHash()\":{\"returns\":{\"_0\":\"The authoring meta hash.\"}},\"buildParseMeta(bytes)\":{\"params\":{\"authoringMeta\":\"The authoring meta bytes.\"},\"returns\":{\"_0\":\"The built parse meta bytes.\"}},\"deployExpression(bytes,uint256[],uint256[])\":{\"params\":{\"bytecode\":\"Bytecode verbatim. Exactly how the bytecode is structured is up to the deployer and interpreter. The deployer MUST NOT modify the bytecode in any way. The interpreter MUST NOT assume anything about the bytecode other than that it is valid according to the interpreter's integrity checks. It is assumed that the bytecode will be produced from a human friendly string via. `IParserV1.parse` but this is not required if the caller has some other means to prooduce valid bytecode.\",\"constants\":\"Constants verbatim. Constants are provided alongside sources rather than inline as it allows us to avoid variable length opcodes and can be more memory efficient if the same constant is referenced several times from the sources.\",\"minOutputs\":\"The first N sources on the state config are entrypoints to the expression where N is the length of the `minOutputs` array. Each item in the `minOutputs` array specifies the number of outputs that MUST be present on the final stack for an evaluation of each entrypoint. The minimum output for some entrypoint MAY be zero if the expectation is that the expression only applies checks and error logic. Non-entrypoint sources MUST NOT have a minimum outputs length specified.\"},\"returns\":{\"_0\":\"The interpreter the deployer believes it is qualified to perform integrity checks on behalf of.\",\"_1\":\"The interpreter store the deployer believes is compatible with the interpreter.\",\"_2\":\"The address of the deployed onchain expression. MUST be valid according to all integrity checks the deployer is aware of.\"}},\"integrityCheck(bytes,uint256[],uint256[])\":{\"params\":{\"bytecode\":\"The bytecode to check.\",\"constants\":\"The constants to check.\",\"minOutputs\":\"The minimum number of outputs expected from each of the sources. Only applies to sources that are entrypoints. Internal sources have their integrity checked implicitly by the use of opcodes such as `call` that have min/max outputs in their operand.\"}},\"integrityFunctionPointers()\":{\"returns\":{\"_0\":\"The list of integrity function pointers.\"}},\"parse(bytes)\":{\"params\":{\"data\":\"The Rainlang bytes to parse.\"},\"returns\":{\"_0\":\"The expressions that can be evaluated.\",\"_1\":\"The constants that can be referenced by sources.\"}},\"parseMeta()\":{\"returns\":{\"_0\":\"The parse meta bytes.\"}}},\"title\":\"RainterpreterExpressionDeployer\",\"version\":1},\"userdoc\":{\"errors\":{\"BadDynamicLength(uint256,uint256)\":[{\"notice\":\"Thrown when a dynamic length array is NOT 1 more than a fixed length array. Should never happen outside a major breaking change to memory layouts.\"}],\"BadOpInputsLength(uint256,uint256,uint256)\":[{\"notice\":\"The bytecode and integrity function disagree on number of inputs.\"}],\"DanglingSource()\":[{\"notice\":\"The parser encountered a dangling source. This is a bug in the parser.\"}],\"DecimalLiteralOverflow(uint256)\":[{\"notice\":\"Encountered a decimal literal that is larger than supported.\"}],\"EntrypointMinOutputs(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when some entrypoint has less outputs than the minimum required.\"}],\"EntrypointNonZeroInput(uint256,uint256)\":[{\"notice\":\"Thrown when some entrypoint has non-zero inputs. This is not allowed as only internal dispatches can have source level inputs.\"}],\"ExcessLHSItems(uint256)\":[{\"notice\":\"Encountered too many LHS items.\"}],\"ExcessRHSItems(uint256)\":[{\"notice\":\"Encountered too many RHS items.\"}],\"ExpectedLeftParen(uint256)\":[{\"notice\":\"More specific version of UnexpectedRHSChar where we specifically expected a left paren but got some other char.\"}],\"HexLiteralOverflow(uint256)\":[{\"notice\":\"Encountered a literal that is larger than supported.\"}],\"MalformedCommentStart(uint256)\":[{\"notice\":\"Encountered a comment start sequence that is malformed.\"}],\"MalformedExponentDigits(uint256)\":[{\"notice\":\"Encountered a decimal literal with an exponent that has too many or no digits.\"}],\"MalformedHexLiteral(uint256)\":[{\"notice\":\"Encountered a hex literal with an invalid character.\"}],\"MaxSources()\":[{\"notice\":\"The parser exceeded the maximum number of sources that it can build.\"}],\"MissingFinalSemi(uint256)\":[{\"notice\":\"The expression does not finish with a semicolon (EOF).\"}],\"NotAcceptingInputs(uint256)\":[{\"notice\":\"Encountered inputs where they can't be handled.\"}],\"OddLengthHexLiteral(uint256)\":[{\"notice\":\"Encountered an odd sized hex literal.\"}],\"OutOfBoundsConstantRead(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when a constant read index is outside the constants array.\"}],\"OutOfBoundsStackRead(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when a stack read index is outside the current stack top.\"}],\"ParenOverflow()\":[{\"notice\":\"The parser encountered a paren group deeper than it can process in the memory region allocated for paren tracking.\"}],\"ParserOutOfBounds()\":[{\"notice\":\"The parser moved past the end of the data.\"}],\"SourceOffsetOutOfBounds(bytes,uint256)\":[{\"notice\":\"Thrown when a bytecode source offset is out of bounds.\"}],\"StackAllocationMismatch(uint256,uint256)\":[{\"notice\":\"The bytecode stack allocation does not match the allocation calculated by the integrity check.\"}],\"StackOutputsMismatch(uint256,uint256)\":[{\"notice\":\"The final stack index does not match the bytecode outputs.\"}],\"StackOverflow()\":[{\"notice\":\"The parser encountered a stack deeper than it can process in the memory region allocated for stack names.\"}],\"StackUnderflow()\":[{\"notice\":\"The parser encountered a stack underflow.\"}],\"StackUnderflow(uint256,uint256,uint256)\":[{\"notice\":\"The stack underflowed during integrity check.\"}],\"StackUnderflowHighwater(uint256,uint256,uint256)\":[{\"notice\":\"The stack underflowed the highwater during integrity check.\"}],\"UnclosedLeftParen(uint256)\":[{\"notice\":\"Encountered an unclosed left paren.\"}],\"UnexpectedComment(uint256)\":[{\"notice\":\"Encountered a comment outside the interstitial space between lines.\"}],\"UnexpectedInterpreterBytecodeHash(bytes32)\":[{\"notice\":\"Thrown when the `RainterpreterExpressionDeployer` is constructed with unknown interpreter bytecode.\"}],\"UnexpectedLHSChar(uint256)\":[{\"notice\":\"Enountered an unexpected character on the LHS.\"}],\"UnexpectedOpMetaHash(bytes32)\":[{\"notice\":\"Thrown when the `Rainterpreter` is constructed with unknown opMeta.\"}],\"UnexpectedRHSChar(uint256)\":[{\"notice\":\"Encountered an unexpected character on the RHS.\"}],\"UnexpectedRightParen(uint256)\":[{\"notice\":\"Encountered a right paren without a matching left paren.\"}],\"UnexpectedStoreBytecodeHash(bytes32)\":[{\"notice\":\"Thrown when the `Rainterpreter` is constructed with unknown store bytecode.\"}],\"UnknownWord(uint256)\":[{\"notice\":\"Parsed a word that is not in the meta.\"}],\"UnsupportedLiteralType(uint256)\":[{\"notice\":\"The parser tried to bound an unsupported literal that we have no type for.\"}],\"WordSize(string)\":[{\"notice\":\"Encountered a word that is longer than 32 bytes.\"}],\"WriteError()\":[{\"notice\":\"Thrown if writing the data by creating the contract fails somehow.\"}],\"ZeroLengthDecimal(uint256)\":[{\"notice\":\"Encountered a zero length decimal literal.\"}],\"ZeroLengthHexLiteral(uint256)\":[{\"notice\":\"Encountered a zero length hex literal.\"}]},\"events\":{\"DISpair(address,address,address,address,bytes)\":{\"notice\":\"This is the literal InterpreterOpMeta bytes to be used offchain to make sense of the opcodes in this interpreter deployment, as a human. For formats like json that make heavy use of boilerplate, repetition and whitespace, some kind of compression is recommended.\"},\"ExpressionAddress(address,address)\":{\"notice\":\"The address of the deployed expression. Will only be emitted once the expression can be loaded and deserialized into an evaluable interpreter state.\"},\"NewExpression(address,bytes,uint256[],uint256[])\":{\"notice\":\"The config of the deployed expression including uncompiled sources. Will only be emitted after the config passes the integrity check.\"}},\"kind\":\"user\",\"methods\":{\"authoringMetaHash()\":{\"notice\":\"Returns the bytes of the authoring meta hash. Authoring meta is the data used by the authoring tool to give authors a better experience when writing Rainlang strings. The authoring meta is also used to generate the parse meta. As the authoring meta can be quite large, including potentially hundreds of long string descriptions of individual words, only the hash is required to be reported by the parser. This hash MUST NOT be modified after deployment. There MUST be a one-to-one mapping between authoring meta and parse meta that can be verified externally in a deterministic way.\"},\"buildParseMeta(bytes)\":{\"notice\":\"Builds the parse meta from authoring meta. MUST be deterministic and MUST NOT have side effects. The only input is the authoring meta. The hash of the provided authoring meta MUST match the authoring meta hash returned by `authoringMetaHash` and MUST determine the parse meta returned by `parseMeta`. Implementations are free to define their own data structures for authoring meta, which is why this function takes `bytes`. This function is likely very gas intensive, so it is STRONGLY RECOMMENDED to use a tool to generate the authoring meta offchain then call this and cross reference it against the return value of `parseMeta`, but then always use `parseMeta` directly onchain.\"},\"deployExpression(bytes,uint256[],uint256[])\":{\"notice\":\"Expressions are expected to be deployed onchain as immutable contract code with a first class address like any other contract or account. Technically this is optional in the sense that all the tools required to eval some expression and define all its opcodes are available as libraries. In practise there are enough advantages to deploying the sources directly onchain as contract data and loading them from the interpreter at eval: - Loading and storing binary data is gas efficient as immutable contract   data - Expressions need to be immutable between their deploy time integrity   check and runtime evaluation - Passing the address of an expression through calldata to an interpreter   is cheaper than passing an entire expression through calldata - Conceptually a very simple approach, even if implementations like   SSTORE2 are subtle under the hood The expression deployer MUST perform an integrity check of the source code before it puts the expression onchain at a known address. The integrity check MUST at a minimum (it is free to do additional static analysis) calculate the memory required to be allocated for the stack in total, and that no out of bounds memory reads/writes occur within this stack. A simple example of an invalid source would be one that pushes one value to the stack then attempts to pops two values, clearly we cannot remove more values than we added. The `IExpressionDeployerV1` MUST revert in the case of any integrity failure, all integrity checks MUST pass in order for the deployment to complete. Once the integrity check is complete the `IExpressionDeployerV1` MUST do any additional processing required by its paired interpreter. For example, the `IExpressionDeployerV1` MAY NEED to replace the indexed opcodes in the `ExpressionConfig` sources with real function pointers from the corresponding interpreter.\"},\"iInterpreter()\":{\"notice\":\"The interpreter with known bytecode that this deployer is constructed for.\"},\"iStore()\":{\"notice\":\"The store with known bytecode that this deployer is constructed for.\"},\"integrityCheck(bytes,uint256[],uint256[])\":{\"notice\":\"Drives an integrity check of the provided bytecode and constants. Unlike `IDebugExpressionDeployerV1` this version ONLY checks the integrity of bytecode as produced by `IParserV1.parse`. There is an eval debug method on `IDebugInterpreterV2` that can be used to check the runtime outputs of bytecode that passes the integrity check. Integrity check MUST revert with a descriptive error if the bytecode fails the integrity check.\"},\"integrityFunctionPointers()\":{\"notice\":\"Defines all the function pointers to integrity checks. This is the expression deployer's equivalent of the opcode function pointers and follows a near identical dispatch process. These are never compiled into source and are instead indexed into directly by the integrity check. The indexing into integrity pointers (which has an out of bounds check) is a proxy for enforcing that all opcode pointers exist at runtime, so the length of the integrity pointers MUST match the length of opcode function pointers. This function is `virtual` so that it can be overridden pairwise with overrides to `functionPointers` on `Rainterpreter`.\"},\"parse(bytes)\":{\"notice\":\"Parses a Rainlang string into an evaluable expression. MUST be deterministic and MUST NOT have side effects. The only inputs are the Rainlang string and the parse meta. MAY revert if the Rainlang string is invalid. This function takes `bytes` instead of `string` to allow for definitions of \\\"string\\\" other than UTF-8.\"},\"parseMeta()\":{\"notice\":\"Returns the bytes of the parse meta. Parse meta is the data used by the parser to convert a Rainlang string into an evaluable expression. These bytes MUST NOT be modified after deployment. The function is marked `external` so that it can be externally verified against the authoring meta, but is likely to be `public` in practice so that it can also be used internally by `parse`. The bytes returned MUST be identical to the bytes returned by `buildParseMeta` when provided with the correct authoring meta as defined by `authoringMetaHash`.\"}},\"notice\":\"!!!EXPERIMENTAL!!! This is the deployer for the RainterpreterNP interpreter. Notably includes onchain parsing/compiling of expressions from Rainlang strings.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/RainterpreterExpressionDeployerNP.sol\":\"RainterpreterExpressionDeployerNP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/sol.lib.binmaskflag/src/\",\":v2-core/=lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/prb-math/src/Common.sol\":{\"keccak256\":\"0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039\",\"dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"lib/prb-math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"lib/prb-math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770\",\"dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D\"]},\"lib/prb-math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"lib/prb-math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"lib/prb-math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"lib/prb-math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8\",\"dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC\"]},\"lib/prb-math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1\",\"dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a\"]},\"lib/prb-math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"lib/prb-math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787\",\"dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze\"]},\"lib/prb-math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"lib/prb-math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5\",\"dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F\"]},\"lib/prb-math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b\",\"dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP\"]},\"lib/prb-math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"lib/prb-math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"lib/prb-math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"lib/prb-math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"lib/prb-math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"lib/prb-math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"lib/prb-math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"lib/prb-math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205\",\"dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y\"]},\"lib/prb-math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"lib/rain.datacontract/src/lib/LibDataContract.sol\":{\"keccak256\":\"0xe3700fdb21ade704e8b7b75bee127544794e3c33f8ec693e348cb1f1515e1900\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://628b35072f98948d8968302976af3d5aa80b37ba33958d6a5a4ee158834a2670\",\"dweb:/ipfs/QmPQd1bkpnuTTAv1oTuz6HUd2ZRkERL34SBv4f4Jaf2LKu\"]},\"lib/rain.erc1820/src/interface/IERC1820Registry.sol\":{\"keccak256\":\"0xbfcb68f1a27e3b04f9acfd4164ad5373afc27659033307c8f697b958ce4cd16e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d280c893633b3f28a4db8416224d626c7d3badf009e3e6da318b81f09eac7f44\",\"dweb:/ipfs/QmUWZBQoCCLdAF4ExnxnxMKA4VuEYqTNhLHwaAo3SJevDP\"]},\"lib/rain.erc1820/src/lib/LibIERC1820.sol\":{\"keccak256\":\"0xc0dabba14979d7b6f03d2cded0719735356ed00b48beba3dd8b59e366089e771\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a8046398a515f49a2095fea84bfa3418b5e0b122eaa2b150876334cb8a931ab1\",\"dweb:/ipfs/QmQUKdvALy6L412JEEZBt4TzqLHrZ1JuWkpYyk8ut83DT8\"]},\"lib/rain.lib.memkv/src/lib/LibMemoryKV.sol\":{\"keccak256\":\"0x6c9b2a50a27f2eb77f5b53348df31f4a2c427ea62f6f628278b870bf5b305a16\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9abc6e1b29c98a754d566997c924de78b885a2b0eb60e77de8d988c8b29d22f6\",\"dweb:/ipfs/QmPhhEeqSs8BDVEYxfSsqQSiZaKLHw6bFtgjuq8QsjVhdc\"]},\"lib/rain.lib.typecast/src/LibCast.sol\":{\"keccak256\":\"0xbb5ecf1af5ccc7591ce16d02d20d200bee330fd40fdf57d933aaf7e0e7e58369\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fcf92be17e5ed37416341839bd401a10b4cde2be8c737a2e56de7967f4874378\",\"dweb:/ipfs/QmcFeqUSU7zo87v6yW4Vd3nczAau9NiqM6FZLGime1Vev5\"]},\"lib/rain.lib.typecast/src/LibConvert.sol\":{\"keccak256\":\"0xa9511da2a6f737cc4fa208eea891139748e71e39d03b7d169c5a4fb4ccf24928\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://13d9ad983b7538346879e4f5ec25c417772815e46a32c8b8b738860e4f1282c3\",\"dweb:/ipfs/Qme7HhdvuNWeWzq7Aw1jciuPuJPNHDFMYxvyBcoSK889zu\"]},\"lib/rain.math.fixedpoint/src/../src/FixedPointDecimalConstants.sol\":{\"keccak256\":\"0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75\",\"dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN\"]},\"lib/rain.math.fixedpoint/src/../test/WillOverflow.sol\":{\"keccak256\":\"0x7a0b168bd00664c84e70fd1bc14f8f9b5a7b190aa11a199d354b522065e14edf\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3159b38877c9e3cd52509f78fbe15c008e5bc66cf43861a08e276e868a5508d4\",\"dweb:/ipfs/QmPGYk7ZF7pDJ8P7VAis7jGzt9S7N5NTfUCLDiAzz76URc\"]},\"lib/rain.math.fixedpoint/src/FixedPointDecimalConstants.sol\":{\"keccak256\":\"0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75\",\"dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN\"]},\"lib/rain.math.fixedpoint/src/FixedPointDecimalScale.sol\":{\"keccak256\":\"0xe9dc01284107997c9d1a810188d330c9907274a1e1bd00b8db79329eba6a11c1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://03c1a4894e9082f50cc621c23526c4bcfcbf6db33059d645ddcf6a3ee22dfb36\",\"dweb:/ipfs/QmbmEkiJA1J8Db7v73nCMRcmrw98bQMw8o8GNyJUkmwtQR\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibMemory.sol\":{\"keccak256\":\"0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830\",\"dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibStackPointer.sol\":{\"keccak256\":\"0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8\",\"dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/sol.lib.binmaskflag/src/Binary.sol\":{\"keccak256\":\"0xce65af9621e3306f7e05641138ab961d2de30ee544a50e688a8e1784be74d437\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://04746eee593e31401af18509d7be132dfd3205644473f44178e480866b37c848\",\"dweb:/ipfs/QmVpwKJyp65wzjXfJS1aR2yywKJ6SKLSdrV1jEznFrHutd\"]},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"src/concrete/RainterpreterExpressionDeployerNP.sol\":{\"keccak256\":\"0x9cd0e98545eff8b75b661df2c7458a619ac2bfc826cf16ff2a938a53e4b9a910\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://04bc8e34737f0f6a72545aa22c8ff1fc8db820eeec4411656bc64ef043d3875b\",\"dweb:/ipfs/QmcNPqp1CKbzDPYLWmjrooD5G2b2NNxgRtFUZ5fEBVL9c9\"]},\"src/concrete/RainterpreterNP.sol\":{\"keccak256\":\"0x983dc71abd587adde82a4de95928e8456290708a9390c44052c3cbd456bcbd9c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://27c2fcac25b6ad461df47949d1ebca10738974fbf51d681816290037cf664f10\",\"dweb:/ipfs/QmWhks1aPEXDBijsLfnyTPLTxAhTXATi1asBojayu5YXAv\"]},\"src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"src/interface/unstable/IDebugExpressionDeployerV2.sol\":{\"keccak256\":\"0x7327252801a367fc09798816188475020c6d0af6ef1b541cde1f3b95c6071ec1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://073361ed02299d387bc78ce2fab7c8fcf6f04095b7737db5c5225c8af24ceb47\",\"dweb:/ipfs/Qmf5DfWuNZXTMzKqoXjTJPMudMUK88GVqeTALaokkSc7o2\"]},\"src/interface/unstable/IDebugInterpreterV2.sol\":{\"keccak256\":\"0x95f545be8f5160a2f0b1d343bca0d1375714204acbb83b8f40aa06feca27c026\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a552843946540944306eb1345cdc167301206575963126297ac87caed59bcf30\",\"dweb:/ipfs/QmYygicZEzyt7Vvh9s5B1Tm1yXnDz2Z3RjgC8Xp6pBgEx5\"]},\"src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"src/interface/unstable/IParserV1.sol\":{\"keccak256\":\"0x9714ffc0595336863f994cc661f00fdb6b162676beceb2a004782b4a72082ed4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://74fefdee4bcf63af1e4d9b5baef85abbb445d49e51b3f6604bb7f25bd6f45f72\",\"dweb:/ipfs/QmUJvW9YFZeZtJiG4ujdh6mBjVpTMpGA8GrSP47quawEAF\"]},\"src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691\",\"dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB\"]},\"src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"src/lib/eval/LibEvalNP.sol\":{\"keccak256\":\"0xc887115ef258539a445b5d9edfd7fb7e36ab74e31cece67b32558b0d316b0640\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd4c259f263b9d9d9d902f684624fc70e226b8ecd85f7c12ea3b931fe7671dde\",\"dweb:/ipfs/QmbwhDZPHr5uWPsWiKxdHnaakV1UbvAX1mtaxk7DiQLnjM\"]},\"src/lib/integrity/LibIntegrityCheckNP.sol\":{\"keccak256\":\"0x352de2def5a918d8b2537f52bb43bc7ddb97a6f23891a649664df9bcbccb7aee\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://54d48174009030fb049d2ea82d1d658419b7c1bfa64173e4c30902797816084f\",\"dweb:/ipfs/QmaJhMAi99aaPiSMKDeRW8656kEZ6m3EqVhBKwNnSJrvZf\"]},\"src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0xd72b1340849f083cfa8f9882f4acf1ff3cfa548425872e5ada2e453553381457\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d974d8ae488be26fafb9fe7e106918aec02fc78d463eeda29fa2d0029b0521b3\",\"dweb:/ipfs/QmWSe3vEEEt7DN19eERQmmnen2mBdwR6kwriafvmuo5zfo\"]},\"src/lib/op/00/LibOpConstantNP.sol\":{\"keccak256\":\"0x2d5661ea3103e37ca46d543246cffe2fa108e21f8631fff8008fc4ff62156075\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://303f2d6538e4a4c9541288700ab3fc3759b7758d50de81d2ad4753ed62a66f6c\",\"dweb:/ipfs/QmYnc5H7XYC6Y4zcvgjq5SgmgYnki3E455prHq5zj6mjmg\"]},\"src/lib/op/00/LibOpStackNP.sol\":{\"keccak256\":\"0xcaa290607fdeaa8ade6dc08a90e32d900ba2863a3d4da1264741e9a2e2dc4f9c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1983aab22e37936616deb1ab0b69d9294da2633b5098d423ce2a6172a96c9b34\",\"dweb:/ipfs/QmTpYaQyRSbXpffcD1m7rkeVtVRpazPUmFMiUWBFQ58HgM\"]},\"src/lib/op/LibAllStandardOpsNP.sol\":{\"keccak256\":\"0x08e7530f0c4a30b4a41e3d45838159a7fb8ee425edcc8d4b1cec545a378ea398\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4c9e07e32c6dd0088bb569c9eec4a301c9c9e896075f0ceee4e951fb40bc8d4c\",\"dweb:/ipfs/QmaWW6XcNNuHwdMet88mySV2P9yhxPzQ54kyQ2f6Fz69DX\"]},\"src/lib/op/context/LibOpContextNP.sol\":{\"keccak256\":\"0x13700163259f1a39620146adccae05620b46d627f214650ecae1ffa17e4eb488\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9218e5e84444ebff1828086e0a423bc46e558ae1ba031839c2af9d8b1a2e7c34\",\"dweb:/ipfs/QmdWCXMu8pnxfCHB1mboCJL8QsMZasg3cwj9yvKqNS2d3Q\"]},\"src/lib/op/crypto/LibOpHashNP.sol\":{\"keccak256\":\"0x309cdf1d9cdbf7789ddb87877bbc6942fe8b708aa4a8b9bc6915273710ef6b11\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://354fa864d9bcaf13282796afe310487c9d6d706217b0d86a0e4b69b1f6279246\",\"dweb:/ipfs/QmRFHm2ymba6ALps4XKsm1UJkct8eeH7vrjA9RaRcZFqoX\"]},\"src/lib/op/evm/LibOpBlockNumberNP.sol\":{\"keccak256\":\"0x4e464f107d35bd80d85a6a64e826161c2659ff74d8c8f8a743e08cee967045d5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7041bb8e3201c3a770ac444ce124a6140aba7b27e37c0b598edd2aa146cdfcc4\",\"dweb:/ipfs/QmbxxF7SKyXHStSpieLQup5q5Ga7eTJu9EZS5bPxaN8zdg\"]},\"src/lib/op/evm/LibOpChainIdNP.sol\":{\"keccak256\":\"0xa7b2621ffb21d38d93dae42a9aaf017c28cd154adedd8d142e726c817c91175e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f65cf9118ec360c849c13e9950ebe8093bf36994f075232594aaf6c15056b45e\",\"dweb:/ipfs/QmZyxAPvB5d17bCxPskFP8pdF5FfTb5yCRMtypKnxHqC2r\"]},\"src/lib/op/evm/LibOpMaxUint256NP.sol\":{\"keccak256\":\"0x6a46895f80470b730fa2d2c9f8710c8f60c46b498091273b296501af6d48f8c4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf021bd50b24f99d995d2d141e33e1a7f27b44a488aba8c52f9b351d76e10c9f\",\"dweb:/ipfs/QmdNYKyiJyzg1PeHumvhLaco5rt48SGWoiLd5xwNh2Fax8\"]},\"src/lib/op/evm/LibOpTimestampNP.sol\":{\"keccak256\":\"0xbf1ef6ae2ecc0a5f5f29d888e87f524f5c23514cfc729c2b77336912688da71c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eaa94c30b8f02631acbea6b339ef89665c7d881974664e3f6d745c901bcaabf5\",\"dweb:/ipfs/QmUoC8azwbNaEv7rx3EsXQRJXMqNREcnrnLhtx1t4Nc34X\"]},\"src/lib/op/logic/LibOpAnyNP.sol\":{\"keccak256\":\"0x053bd8e6dd4ba9e5eea0d5e7cfe574a9027f5ee7ecef369a67cf5f456f4daadb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://92dfb954e5fa430a069c9ad8ee9adeca770e1dc476fee4bf88aceeba075d014b\",\"dweb:/ipfs/QmZRVQMTocCrGbnwHQ3ps5YQM9PRj4Vkrc32pjbYaxYUTN\"]},\"src/lib/op/logic/LibOpConditionsNP.sol\":{\"keccak256\":\"0xffa5ec76c53aefd30609d8cb13e1ca78c03bb00095c76d293764b9d8d140485e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7fa3ec8cc1f33b296caeee35abb0798010e14992e0cda8537c530eb24c711f31\",\"dweb:/ipfs/QmXMfKDGnDdFk2LFLGqSoPmotGS782zE4yWanqejd5Pq5b\"]},\"src/lib/op/logic/LibOpEnsureNP.sol\":{\"keccak256\":\"0xbbec557f1fa0810a191c055429e86b9d49ec28779fa331bce664ebde58e2e682\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://565e300f1c6058e2d6cee6d414dc01f4860e36753aa60dc1b645b19111e03749\",\"dweb:/ipfs/QmccKU8PiNRN8UW8aWiS7S7rn8q9p6jK1c2Vzo14zWgykb\"]},\"src/lib/op/logic/LibOpEqualToNP.sol\":{\"keccak256\":\"0xad9881f4c0555b100996dfa9350b206d680a87cdaaf7e25a5027cceba2d224c0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d2ac6a4162a236fb4e20fd76d261961e3366c7d2e9278c1fa30cf98083df6206\",\"dweb:/ipfs/QmQsbyLP6Bmd47uuLg3wPSjz7zPUY3J9sfAZFs2Rqrvqng\"]},\"src/lib/op/logic/LibOpEveryNP.sol\":{\"keccak256\":\"0x45f997659ae947a0b663907640b4f301335a031f2cddbefc68ba0dca6fa46502\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6d9e5f2637d71edf1f9c5dc72b60eed1f8991fb1c2bbce7e40f371ea8efd2041\",\"dweb:/ipfs/QmPWeFKHavLs1LSUhVqoCWqqz3JV2TGYejBRvHbbCZCARt\"]},\"src/lib/op/logic/LibOpGreaterThanNP.sol\":{\"keccak256\":\"0xd0f8c149c522520a7f7c707ef76b96b2ed14e2cb374925fa944faf25df13f41a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f59ebe95274cd1b78fffa5a6b6923818cbba0ae9b854745a6c685c66f945e2e0\",\"dweb:/ipfs/QmQ8uBEjvWmZy1SDiPqozLgSUvL7GmQQcNh5E3C7RLnwsr\"]},\"src/lib/op/logic/LibOpGreaterThanOrEqualToNP.sol\":{\"keccak256\":\"0x48cc828f464e9d64714aa3b5956a63c42eb10daef80aad69a5d61f26f6e153a7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6d629c32421cc32366ab66b83da17399f5e37315d3fe8a9f42be571087fe4904\",\"dweb:/ipfs/QmXwt2QPQF35oi3WajoAFePBgNknRqZPdvG6YPEThaWaxF\"]},\"src/lib/op/logic/LibOpIfNP.sol\":{\"keccak256\":\"0xd398f6482646f1ed74cfd291f053f1d14a2aa5074fb80a746972d5ccc600ecd0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0b652b90d9e007f24e6e0780d8dfdc9addf9dc38a306796ddcbde68d3b4e62e3\",\"dweb:/ipfs/QmUVF8TvoRthRmWH6JXKfJvCGTDnJaraS4YXUyejhypuTS\"]},\"src/lib/op/logic/LibOpIsZeroNP.sol\":{\"keccak256\":\"0xb24881e858814ed9521dbb9a781207b0dde9aab8f81089a57a1751f97d37b6b9\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://287e84e4f1b289ce4bb681e9dd392f2e714426f433d1072da56666628a6935e0\",\"dweb:/ipfs/QmYywCkubjZqkwxTeLGLCs4yuntGTgwRsX7TETsiuesBjV\"]},\"src/lib/op/logic/LibOpLessThanNP.sol\":{\"keccak256\":\"0x30a70b1ace2e33a3ad79892a10f53e581838d3967e92743a77193f73d79dcc07\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://91c6e73bcf34bd3c8900c6144b39406118be0d12a74b76d8e6f2efb9a0c0190d\",\"dweb:/ipfs/QmWLkx2zXLEtv3z2kEmTpaD1CUjF4PtVyiE9MZiBm4MywM\"]},\"src/lib/op/logic/LibOpLessThanOrEqualToNP.sol\":{\"keccak256\":\"0x6287a32c4a4ec11edc7e580c68ca4008bcb13ae0c2dd4f0b34fbee9373ee9125\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ca49adcf94dfd4fd5c316efb24097a0ffeec7973bbe581aff4f6a084793ae4c2\",\"dweb:/ipfs/QmRJcADpVf16HBfkazgp4U75RpF1gunKLdaniKfsK9uq2Y\"]},\"src/lib/op/math/decimal18/LibOpDecimal18DivNP.sol\":{\"keccak256\":\"0x556d22dc35f8631aff454291e384be7a15aec66e8078928a84882ceceb762af8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2e9d49604c1d9a5492d4647bec994051a84dd10562e1b78c99703e1474495c1e\",\"dweb:/ipfs/QmZo9MrpzKKXFr5YBbb9aJdyUssDtBewg5VT95DpHSYTzZ\"]},\"src/lib/op/math/decimal18/LibOpDecimal18MulNP.sol\":{\"keccak256\":\"0x4a1a42c8dad8a32a23afb3e67d79bc6805da1b3e4c57a1392877a4efd335616c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30ad9b686b526d659e44f0675f04fba307e7d16610615d5f505c6fb56648c2b6\",\"dweb:/ipfs/QmYx6XdF9ps291CGSFBbufT6h1f1YYPoE68LdmCUY1mkKn\"]},\"src/lib/op/math/decimal18/LibOpDecimal18Scale18DynamicNP.sol\":{\"keccak256\":\"0x96c8db069222b8ca9aeacb307ff3891f454f796d05e91af870d7fed6e202af56\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c33c63057853609504ae6f51071936e446ff7058e9020718448da37319c0fe69\",\"dweb:/ipfs/QmYnXFr1fujysruX8PEgqsHRvVSEizax5hLUQR46JeiUv8\"]},\"src/lib/op/math/decimal18/LibOpDecimal18Scale18NP.sol\":{\"keccak256\":\"0x2021289602d984f54d634aa917a8d341621221797fa6522ee4777557f5a43c31\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a81c7c30d48e75f320d5a3d887f37365796aa08cee19c842dac1a97bc3600a50\",\"dweb:/ipfs/QmazWCbq3k1RkP7Nk3JzLfBXzWdUW246YDaYoXEWpZ9UHm\"]},\"src/lib/op/math/decimal18/LibOpDecimal18ScaleNNP.sol\":{\"keccak256\":\"0xd37209a42d49e2165b2c75504ac40758d10815036c62fff3014a52919f90f6dd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://15f90b121e9fef598f230970f52f4429de3f66a76f70fcc408d71fc549ff37ba\",\"dweb:/ipfs/QmTwXsXyPCVfvAQXWMvrHo2xd37aUyUp9csBM7k1TzVvaZ\"]},\"src/lib/op/math/int/LibOpIntAddNP.sol\":{\"keccak256\":\"0x876de6d3c804f2b272d170d4288dd18aac01e18daa18604fce3e11f3821e40f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://17775026eda8ce05fc71c8e5afba633bb617b8d2559fa046d2e10e8d199c50dd\",\"dweb:/ipfs/QmbeXQbJXxGbmMj42A5aHAfVwwVdDcw6kxuT3p8aEmpMXG\"]},\"src/lib/op/math/int/LibOpIntDivNP.sol\":{\"keccak256\":\"0x7697b77c1e9c0853c9b5284ffeec7e514627520d275848bb1d11ebfc998dd7c1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://8a2112389b34615ba2cbb1ab9e74977712944da34e39650cdda65e8845e3b8ea\",\"dweb:/ipfs/QmYdyGdG4X3JVB2h6GsGUCgogNTfZojubzpggR9y3cUTSw\"]},\"src/lib/op/math/int/LibOpIntExpNP.sol\":{\"keccak256\":\"0x1b747d6f0e5b3428b7d3c4a45d171f360e1c62912bb79159b40963d9e65eacbc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://aa03fff2264f0b32f652b19bb91c5558b0e7993fa4dc284007fc0199186478c3\",\"dweb:/ipfs/QmPdNPmC3GZTfxSfcPG5ATwdYfuq7iJQ8F1ijnW9WNfmtm\"]},\"src/lib/op/math/int/LibOpIntMaxNP.sol\":{\"keccak256\":\"0xb77e8a922693194b0e42255c892b8b87e9b1a2083efdb4702a8c44afcb11b01d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3091d0ece13f61d08f3693e7f9a913d8225cec09a610084e43ca771325b6ad17\",\"dweb:/ipfs/QmdMJcoLfioGeRr3igawstsCGPJWhx87Eh1844BdgQcPvd\"]},\"src/lib/op/math/int/LibOpIntMinNP.sol\":{\"keccak256\":\"0xe7058452aa5124d999fc7b55285e4eed76554777a09ac80a5b99ed0eb1271ec8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a820ba4e9f3760d5be630373dd0d200e6efc08144964d92cc370d545e4d63d4e\",\"dweb:/ipfs/QmVw6jsBxbKuNjg2P5WGu2FqV8FrSDta76E5tdT7wmfN65\"]},\"src/lib/op/math/int/LibOpIntModNP.sol\":{\"keccak256\":\"0x63ae362fac2b193ebd8dcb7907c50d3d11e7a88f6504e63d8218611562d90eaf\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b9840982d49f9f2f650c25c297b940ab5d819e3493989bf65cca59157b5cda02\",\"dweb:/ipfs/QmPXj5UNCFLMT9FNBp6JhJUJ8vMfzTRRXMhYTBc7fZkmqd\"]},\"src/lib/op/math/int/LibOpIntMulNP.sol\":{\"keccak256\":\"0x57a4b9e4a81bc722a2bfd856d9a3247f0922dd761c647e57522c23c3ce9ad62a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1dae3d0cdc6c748949cf09deb41fef432d5a003f9d84fb8c17c7a34cd1acb6f1\",\"dweb:/ipfs/QmR4Ki1b3Y6Hwiq43KMhsBtrrB4KdpJqWotJfjCrq2Xv5X\"]},\"src/lib/op/math/int/LibOpIntSubNP.sol\":{\"keccak256\":\"0xc325fd8fb88a258bd385681b8df7836b285f627792cdc60a9661a83d4c23c744\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b14ae45c4fe89fff414cb3b1388f3a71bf3ac1554c5f1a89787d483cd53bf093\",\"dweb:/ipfs/Qma5sES45ZqDV2pyYrp88xbRFnLqtg7ehnnowAoGpCp28K\"]},\"src/lib/op/store/LibOpGetNP.sol\":{\"keccak256\":\"0x5688dd926dbaac507c0af4269c2d341b64fc778887619936c21d6422cb966572\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9495f93b6f68cb5b0f9ff5db65f2bdbd00651bc0567e0f6fe15b8607afcf8bd2\",\"dweb:/ipfs/QmTdtks7M2aum5657rkUefdmATAQRRshL6G8DLFg9HhAKf\"]},\"src/lib/op/store/LibOpSetNP.sol\":{\"keccak256\":\"0xfcba43d59c778aa97beee6208970bbfbfe86e1c6ea37f2ef8a83cc39fd62b589\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://844d9a2d00fa307a3d639f795304c68081ce9325ccfe67669cb45f52c5fb1f1b\",\"dweb:/ipfs/QmS4WQHStwLK4BGwAi3wuWie7rLL1TebdFrccN3w75yKqv\"]},\"src/lib/op/uniswap/LibOpUniswapV2AmountIn.sol\":{\"keccak256\":\"0x6a461a4b4aab73c7fceb7f67a8ebd6ee47f390f3b7014726d48f3c8c71ce31d5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bf0b2c17cc78f6263da2751b6a2d53d21f22b5a185d4ce17f97de41f74572026\",\"dweb:/ipfs/QmVKSPCjPhQRbz1LYs9W59nt6VA9pBREcVtHcnrhpxJnMj\"]},\"src/lib/op/uniswap/LibOpUniswapV2AmountOut.sol\":{\"keccak256\":\"0xe822d25a6d84942bd2e1d8d044216ae06d9cf3b50e8e538c292782cefa17812a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ec8d6374a6593e6e33aaa6c60424c238e9666df79fc192fe56c5be04ccc92f3\",\"dweb:/ipfs/QmW3vdn2UpRJUjwh9zc2Z4ykxuiDnVfHiyUwzDNhHmMtQV\"]},\"src/lib/parse/LibCtPop.sol\":{\"keccak256\":\"0x02681ac3433a844043b26a4d8958080c48c70039fc72c224f2607fb87c55f758\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4e14bbc205554ac9c910a80846280dddb4989fe3dd5e5dc0f134a5db49d5a8c6\",\"dweb:/ipfs/QmbWLfM49zKHNpvS48BTeAWWsMAU9L7k6XiaVunLQoZaMe\"]},\"src/lib/parse/LibParse.sol\":{\"keccak256\":\"0x30e58605e81c89cd2fd8a39c6c70ae06124ba81d79802c6f39627904d3ccb843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://39ce45cbeff0c627f5d1f89ecd96ed04576a01046f6d9a6a3aa287c2c6d35f80\",\"dweb:/ipfs/QmcpQ2iEt3MSB1joKWqsZPKuKDqdK2DtiS8cygwMNPY6rL\"]},\"src/lib/parse/LibParseCMask.sol\":{\"keccak256\":\"0x5ec6b865df66bec72ea0976082ce9b7d0250818ee8180cf463861f20eec3b0ff\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3e6660d651d4d57eadd18b440235f5a63c4bac7dce52a9f065329b47e2ca4fec\",\"dweb:/ipfs/QmNUJs5iPbuZRYmkZc3XzsekRdzdrABoQUPbg5eEGhr2kV\"]},\"src/lib/parse/LibParseLiteral.sol\":{\"keccak256\":\"0x170019ccfcfc697115afdebc14137062bdab4c54bf5a6e6baa9e26dbfafa11ab\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ee275319b3c9508cf363f3e5ecab4aae63695ba50ce84f4bd6a64ea617eadba3\",\"dweb:/ipfs/QmPetJ94MHDUQD7wGVggGuCuVeF1BaXerKZ63mVazrnVU4\"]},\"src/lib/parse/LibParseMeta.sol\":{\"keccak256\":\"0x0982f62c3cfd8cc19e0caf857d60ee3cbfd9ec87cc5275c9a7b79ff935f01f82\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://68fca23641f4c84c3f68f353bef6a4d84cd1db78603e080766ffd55d8176641c\",\"dweb:/ipfs/QmNbdNGKTmiw2QJhKLRBSPsu2PAX1stUBnjJfAbq7AtAeM\"]},\"src/lib/parse/LibParseOperand.sol\":{\"keccak256\":\"0x5d422ef714a1c13a3bfcb05170dec7662758f4125cd77a1e79c8afdbd064b465\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://06e396e8698b17225269b0c8c09e5d4ce867112e6a1fda92f9056eb53d3a1301\",\"dweb:/ipfs/QmPGm9oBbXosP1NZrc37uZ5DpEg6suLmJ5A9jH8y8iVXZv\"]},\"src/lib/parse/LibParseStackName.sol\":{\"keccak256\":\"0x66dcbde3d68a30ce3813684ee6ba3f5cc9d28eba38460935d60144be6069a91e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ecb40d8eb97d881755376794dd6f42a8dbd117601f07e2f3a980a13b3857d4cd\",\"dweb:/ipfs/QmQzPK6BuRfGFSFa6U3ivFHpH8s9NTFyAadWrN2RDCHuWu\"]},\"src/lib/state/LibInterpreterStateDataContractNP.sol\":{\"keccak256\":\"0x8517de1fb60a1027a8b1d53d03c0282c654b16ef0ba6458e89588e423bd16231\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ec222a95a0839b4eb0b97784b993fe01288bfe51af285c9801892ff0b68486ce\",\"dweb:/ipfs/QmX7QGkpsbhAb7WdtKBr4McjTE97uQiCD2SpP1rgbgqRka\"]},\"src/lib/state/LibInterpreterStateNP.sol\":{\"keccak256\":\"0x2058050c280e19928aff10a513c6684167b842e5d37c735ab21244be732564eb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2f577b97f015fc7db843f33f5c25a97b8e4a1926fe8d5b1b3b50fe88d2f4cb64\",\"dweb:/ipfs/QmUKEqGnGDecgfCnZeEsQQD9gsPs4mAA7y7TbRcB8znkJo\"]},\"src/lib/uniswap/LibUniswapV2.sol\":{\"keccak256\":\"0x58a413eabb96f4757f9c7d30b90536de357797dfcba8125dc13bacc60408fa6d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://70cbf2570733e11c87b96d538f9d4bea51110b44b60e826d50ea6a9d8ad434e6\",\"dweb:/ipfs/QmbjmMfMBzB7syAJfJQ5JpqqbJcbdvJaYtRYPF995fBzo6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct RainterpreterExpressionDeployerConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "authoringMeta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AuthoringMetaHashMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dynamicLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "standardOpsLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadDynamicLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calculatedInputs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeInputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadOpInputsLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DanglingSource"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DecimalLiteralOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DuplicateFingerprint"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "errorOffset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DuplicateLHSItem"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entrypointIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "outputsLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "EntrypointMinOutputs"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expectedEntrypoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actualEntrypoints",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "EntrypointMissing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entrypointIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "inputsLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "EntrypointNonZeroInput"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExcessLHSItems"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExcessRHSItems"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExpectedLeftParen"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExpectedOperand"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "HexLiteralOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MalformedCommentStart"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MalformedExponentDigits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MalformedHexLiteral"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSources"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingFinalSemi"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotAcceptingInputs"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OddLengthHexLiteral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OperandOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "constantsLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "constantRead",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OutOfBoundsConstantRead"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackTopIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackRead",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OutOfBoundsStackRead"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ParenOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ParserOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "sourceIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SourceOffsetOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stackMaxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeAllocation",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackAllocationMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackOutputsMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StackOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calculatedInputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StackUnderflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackHighwater",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackUnderflowHighwater"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnclosedLeftParen"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnclosedOperand"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnexpectedComment"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actualBytecodeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedInterpreterBytecodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnexpectedLHSChar"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actualOpMeta",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedOpMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnexpectedOperand"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "actualPointers",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "UnexpectedPointers"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnexpectedRHSChar"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnexpectedRightParen"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actualBytecodeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedStoreBytecodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnknownWord"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsupportedLiteralType"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "word",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "WordSize"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WriteError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ZeroLengthDecimal"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ZeroLengthHexLiteral"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "interpreter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "store",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "opMeta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DISpair",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExpressionAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "minOutputs",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewExpression",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "authoringMetaHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "authoringMeta",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "buildParseMeta",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minOutputs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployExpression",
          "outputs": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iInterpreter",
          "outputs": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minOutputs",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "integrityCheck"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "integrityFunctionPointers",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parse",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseMeta",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId_",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authoringMetaHash()": {
            "returns": {
              "_0": "The authoring meta hash."
            }
          },
          "buildParseMeta(bytes)": {
            "params": {
              "authoringMeta": "The authoring meta bytes."
            },
            "returns": {
              "_0": "The built parse meta bytes."
            }
          },
          "deployExpression(bytes,uint256[],uint256[])": {
            "params": {
              "bytecode": "Bytecode verbatim. Exactly how the bytecode is structured is up to the deployer and interpreter. The deployer MUST NOT modify the bytecode in any way. The interpreter MUST NOT assume anything about the bytecode other than that it is valid according to the interpreter's integrity checks. It is assumed that the bytecode will be produced from a human friendly string via. `IParserV1.parse` but this is not required if the caller has some other means to prooduce valid bytecode.",
              "constants": "Constants verbatim. Constants are provided alongside sources rather than inline as it allows us to avoid variable length opcodes and can be more memory efficient if the same constant is referenced several times from the sources.",
              "minOutputs": "The first N sources on the state config are entrypoints to the expression where N is the length of the `minOutputs` array. Each item in the `minOutputs` array specifies the number of outputs that MUST be present on the final stack for an evaluation of each entrypoint. The minimum output for some entrypoint MAY be zero if the expectation is that the expression only applies checks and error logic. Non-entrypoint sources MUST NOT have a minimum outputs length specified."
            },
            "returns": {
              "_0": "The interpreter the deployer believes it is qualified to perform integrity checks on behalf of.",
              "_1": "The interpreter store the deployer believes is compatible with the interpreter.",
              "_2": "The address of the deployed onchain expression. MUST be valid according to all integrity checks the deployer is aware of."
            }
          },
          "integrityCheck(bytes,uint256[],uint256[])": {
            "params": {
              "bytecode": "The bytecode to check.",
              "constants": "The constants to check.",
              "minOutputs": "The minimum number of outputs expected from each of the sources. Only applies to sources that are entrypoints. Internal sources have their integrity checked implicitly by the use of opcodes such as `call` that have min/max outputs in their operand."
            }
          },
          "integrityFunctionPointers()": {
            "returns": {
              "_0": "The list of integrity function pointers."
            }
          },
          "parse(bytes)": {
            "params": {
              "data": "The Rainlang bytes to parse."
            },
            "returns": {
              "_0": "The expressions that can be evaluated.",
              "_1": "The constants that can be referenced by sources."
            }
          },
          "parseMeta()": {
            "returns": {
              "_0": "The parse meta bytes."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authoringMetaHash()": {
            "notice": "Returns the bytes of the authoring meta hash. Authoring meta is the data used by the authoring tool to give authors a better experience when writing Rainlang strings. The authoring meta is also used to generate the parse meta. As the authoring meta can be quite large, including potentially hundreds of long string descriptions of individual words, only the hash is required to be reported by the parser. This hash MUST NOT be modified after deployment. There MUST be a one-to-one mapping between authoring meta and parse meta that can be verified externally in a deterministic way."
          },
          "buildParseMeta(bytes)": {
            "notice": "Builds the parse meta from authoring meta. MUST be deterministic and MUST NOT have side effects. The only input is the authoring meta. The hash of the provided authoring meta MUST match the authoring meta hash returned by `authoringMetaHash` and MUST determine the parse meta returned by `parseMeta`. Implementations are free to define their own data structures for authoring meta, which is why this function takes `bytes`. This function is likely very gas intensive, so it is STRONGLY RECOMMENDED to use a tool to generate the authoring meta offchain then call this and cross reference it against the return value of `parseMeta`, but then always use `parseMeta` directly onchain."
          },
          "deployExpression(bytes,uint256[],uint256[])": {
            "notice": "Expressions are expected to be deployed onchain as immutable contract code with a first class address like any other contract or account. Technically this is optional in the sense that all the tools required to eval some expression and define all its opcodes are available as libraries. In practise there are enough advantages to deploying the sources directly onchain as contract data and loading them from the interpreter at eval: - Loading and storing binary data is gas efficient as immutable contract   data - Expressions need to be immutable between their deploy time integrity   check and runtime evaluation - Passing the address of an expression through calldata to an interpreter   is cheaper than passing an entire expression through calldata - Conceptually a very simple approach, even if implementations like   SSTORE2 are subtle under the hood The expression deployer MUST perform an integrity check of the source code before it puts the expression onchain at a known address. The integrity check MUST at a minimum (it is free to do additional static analysis) calculate the memory required to be allocated for the stack in total, and that no out of bounds memory reads/writes occur within this stack. A simple example of an invalid source would be one that pushes one value to the stack then attempts to pops two values, clearly we cannot remove more values than we added. The `IExpressionDeployerV1` MUST revert in the case of any integrity failure, all integrity checks MUST pass in order for the deployment to complete. Once the integrity check is complete the `IExpressionDeployerV1` MUST do any additional processing required by its paired interpreter. For example, the `IExpressionDeployerV1` MAY NEED to replace the indexed opcodes in the `ExpressionConfig` sources with real function pointers from the corresponding interpreter."
          },
          "iInterpreter()": {
            "notice": "The interpreter with known bytecode that this deployer is constructed for."
          },
          "iStore()": {
            "notice": "The store with known bytecode that this deployer is constructed for."
          },
          "integrityCheck(bytes,uint256[],uint256[])": {
            "notice": "Drives an integrity check of the provided bytecode and constants. Unlike `IDebugExpressionDeployerV1` this version ONLY checks the integrity of bytecode as produced by `IParserV1.parse`. There is an eval debug method on `IDebugInterpreterV2` that can be used to check the runtime outputs of bytecode that passes the integrity check. Integrity check MUST revert with a descriptive error if the bytecode fails the integrity check."
          },
          "integrityFunctionPointers()": {
            "notice": "Defines all the function pointers to integrity checks. This is the expression deployer's equivalent of the opcode function pointers and follows a near identical dispatch process. These are never compiled into source and are instead indexed into directly by the integrity check. The indexing into integrity pointers (which has an out of bounds check) is a proxy for enforcing that all opcode pointers exist at runtime, so the length of the integrity pointers MUST match the length of opcode function pointers. This function is `virtual` so that it can be overridden pairwise with overrides to `functionPointers` on `Rainterpreter`."
          },
          "parse(bytes)": {
            "notice": "Parses a Rainlang string into an evaluable expression. MUST be deterministic and MUST NOT have side effects. The only inputs are the Rainlang string and the parse meta. MAY revert if the Rainlang string is invalid. This function takes `bytes` instead of `string` to allow for definitions of \"string\" other than UTF-8."
          },
          "parseMeta()": {
            "notice": "Returns the bytes of the parse meta. Parse meta is the data used by the parser to convert a Rainlang string into an evaluable expression. These bytes MUST NOT be modified after deployment. The function is marked `external` so that it can be externally verified against the authoring meta, but is likely to be `public` in practice so that it can also be used internally by `parse`. The bytes returned MUST be identical to the bytes returned by `buildParseMeta` when provided with the correct authoring meta as defined by `authoringMetaHash`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/prb-math/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/sol.lib.binmaskflag/src/",
        "v2-core/=lib/v2-core/contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/RainterpreterExpressionDeployerNP.sol": "RainterpreterExpressionDeployerNP"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Common.sol": {
        "keccak256": "0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053",
        "urls": [
          "bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039",
          "dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Constants.sol": {
        "keccak256": "0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f",
        "urls": [
          "bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770",
          "dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Constants.sol": {
        "keccak256": "0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a",
        "urls": [
          "bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8",
          "dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Errors.sol": {
        "keccak256": "0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04",
        "urls": [
          "bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1",
          "dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Math.sol": {
        "keccak256": "0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868",
        "urls": [
          "bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787",
          "dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Casting.sol": {
        "keccak256": "0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099",
        "urls": [
          "bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5",
          "dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Constants.sol": {
        "keccak256": "0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5",
        "urls": [
          "bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b",
          "dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Math.sol": {
        "keccak256": "0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29",
        "urls": [
          "bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205",
          "dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "lib/rain.datacontract/src/lib/LibDataContract.sol": {
        "keccak256": "0xe3700fdb21ade704e8b7b75bee127544794e3c33f8ec693e348cb1f1515e1900",
        "urls": [
          "bzz-raw://628b35072f98948d8968302976af3d5aa80b37ba33958d6a5a4ee158834a2670",
          "dweb:/ipfs/QmPQd1bkpnuTTAv1oTuz6HUd2ZRkERL34SBv4f4Jaf2LKu"
        ],
        "license": "CAL"
      },
      "lib/rain.erc1820/src/interface/IERC1820Registry.sol": {
        "keccak256": "0xbfcb68f1a27e3b04f9acfd4164ad5373afc27659033307c8f697b958ce4cd16e",
        "urls": [
          "bzz-raw://d280c893633b3f28a4db8416224d626c7d3badf009e3e6da318b81f09eac7f44",
          "dweb:/ipfs/QmUWZBQoCCLdAF4ExnxnxMKA4VuEYqTNhLHwaAo3SJevDP"
        ],
        "license": "MIT"
      },
      "lib/rain.erc1820/src/lib/LibIERC1820.sol": {
        "keccak256": "0xc0dabba14979d7b6f03d2cded0719735356ed00b48beba3dd8b59e366089e771",
        "urls": [
          "bzz-raw://a8046398a515f49a2095fea84bfa3418b5e0b122eaa2b150876334cb8a931ab1",
          "dweb:/ipfs/QmQUKdvALy6L412JEEZBt4TzqLHrZ1JuWkpYyk8ut83DT8"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/src/lib/LibMemoryKV.sol": {
        "keccak256": "0x6c9b2a50a27f2eb77f5b53348df31f4a2c427ea62f6f628278b870bf5b305a16",
        "urls": [
          "bzz-raw://9abc6e1b29c98a754d566997c924de78b885a2b0eb60e77de8d988c8b29d22f6",
          "dweb:/ipfs/QmPhhEeqSs8BDVEYxfSsqQSiZaKLHw6bFtgjuq8QsjVhdc"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.typecast/src/LibCast.sol": {
        "keccak256": "0xbb5ecf1af5ccc7591ce16d02d20d200bee330fd40fdf57d933aaf7e0e7e58369",
        "urls": [
          "bzz-raw://fcf92be17e5ed37416341839bd401a10b4cde2be8c737a2e56de7967f4874378",
          "dweb:/ipfs/QmcFeqUSU7zo87v6yW4Vd3nczAau9NiqM6FZLGime1Vev5"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.typecast/src/LibConvert.sol": {
        "keccak256": "0xa9511da2a6f737cc4fa208eea891139748e71e39d03b7d169c5a4fb4ccf24928",
        "urls": [
          "bzz-raw://13d9ad983b7538346879e4f5ec25c417772815e46a32c8b8b738860e4f1282c3",
          "dweb:/ipfs/Qme7HhdvuNWeWzq7Aw1jciuPuJPNHDFMYxvyBcoSK889zu"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/../src/FixedPointDecimalConstants.sol": {
        "keccak256": "0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b",
        "urls": [
          "bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75",
          "dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/../test/WillOverflow.sol": {
        "keccak256": "0x7a0b168bd00664c84e70fd1bc14f8f9b5a7b190aa11a199d354b522065e14edf",
        "urls": [
          "bzz-raw://3159b38877c9e3cd52509f78fbe15c008e5bc66cf43861a08e276e868a5508d4",
          "dweb:/ipfs/QmPGYk7ZF7pDJ8P7VAis7jGzt9S7N5NTfUCLDiAzz76URc"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/FixedPointDecimalConstants.sol": {
        "keccak256": "0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b",
        "urls": [
          "bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75",
          "dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/FixedPointDecimalScale.sol": {
        "keccak256": "0xe9dc01284107997c9d1a810188d330c9907274a1e1bd00b8db79329eba6a11c1",
        "urls": [
          "bzz-raw://03c1a4894e9082f50cc621c23526c4bcfcbf6db33059d645ddcf6a3ee22dfb36",
          "dweb:/ipfs/QmbmEkiJA1J8Db7v73nCMRcmrw98bQMw8o8GNyJUkmwtQR"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemory.sol": {
        "keccak256": "0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5",
        "urls": [
          "bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830",
          "dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackPointer.sol": {
        "keccak256": "0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad",
        "urls": [
          "bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8",
          "dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/sol.lib.binmaskflag/src/Binary.sol": {
        "keccak256": "0xce65af9621e3306f7e05641138ab961d2de30ee544a50e688a8e1784be74d437",
        "urls": [
          "bzz-raw://04746eee593e31401af18509d7be132dfd3205644473f44178e480866b37c848",
          "dweb:/ipfs/QmVpwKJyp65wzjXfJS1aR2yywKJ6SKLSdrV1jEznFrHutd"
        ],
        "license": "CAL"
      },
      "lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b",
        "urls": [
          "bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf",
          "dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH"
        ],
        "license": null
      },
      "src/concrete/RainterpreterExpressionDeployerNP.sol": {
        "keccak256": "0x9cd0e98545eff8b75b661df2c7458a619ac2bfc826cf16ff2a938a53e4b9a910",
        "urls": [
          "bzz-raw://04bc8e34737f0f6a72545aa22c8ff1fc8db820eeec4411656bc64ef043d3875b",
          "dweb:/ipfs/QmcNPqp1CKbzDPYLWmjrooD5G2b2NNxgRtFUZ5fEBVL9c9"
        ],
        "license": "CAL"
      },
      "src/concrete/RainterpreterNP.sol": {
        "keccak256": "0x983dc71abd587adde82a4de95928e8456290708a9390c44052c3cbd456bcbd9c",
        "urls": [
          "bzz-raw://27c2fcac25b6ad461df47949d1ebca10738974fbf51d681816290037cf664f10",
          "dweb:/ipfs/QmWhks1aPEXDBijsLfnyTPLTxAhTXATi1asBojayu5YXAv"
        ],
        "license": "CAL"
      },
      "src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IDebugExpressionDeployerV2.sol": {
        "keccak256": "0x7327252801a367fc09798816188475020c6d0af6ef1b541cde1f3b95c6071ec1",
        "urls": [
          "bzz-raw://073361ed02299d387bc78ce2fab7c8fcf6f04095b7737db5c5225c8af24ceb47",
          "dweb:/ipfs/Qmf5DfWuNZXTMzKqoXjTJPMudMUK88GVqeTALaokkSc7o2"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IDebugInterpreterV2.sol": {
        "keccak256": "0x95f545be8f5160a2f0b1d343bca0d1375714204acbb83b8f40aa06feca27c026",
        "urls": [
          "bzz-raw://a552843946540944306eb1345cdc167301206575963126297ac87caed59bcf30",
          "dweb:/ipfs/QmYygicZEzyt7Vvh9s5B1Tm1yXnDz2Z3RjgC8Xp6pBgEx5"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IParserV1.sol": {
        "keccak256": "0x9714ffc0595336863f994cc661f00fdb6b162676beceb2a004782b4a72082ed4",
        "urls": [
          "bzz-raw://74fefdee4bcf63af1e4d9b5baef85abbb445d49e51b3f6604bb7f25bd6f45f72",
          "dweb:/ipfs/QmUJvW9YFZeZtJiG4ujdh6mBjVpTMpGA8GrSP47quawEAF"
        ],
        "license": "CAL"
      },
      "src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461",
        "urls": [
          "bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691",
          "dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB"
        ],
        "license": "CAL"
      },
      "src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "src/lib/eval/LibEvalNP.sol": {
        "keccak256": "0xc887115ef258539a445b5d9edfd7fb7e36ab74e31cece67b32558b0d316b0640",
        "urls": [
          "bzz-raw://fd4c259f263b9d9d9d902f684624fc70e226b8ecd85f7c12ea3b931fe7671dde",
          "dweb:/ipfs/QmbwhDZPHr5uWPsWiKxdHnaakV1UbvAX1mtaxk7DiQLnjM"
        ],
        "license": "CAL"
      },
      "src/lib/integrity/LibIntegrityCheckNP.sol": {
        "keccak256": "0x352de2def5a918d8b2537f52bb43bc7ddb97a6f23891a649664df9bcbccb7aee",
        "urls": [
          "bzz-raw://54d48174009030fb049d2ea82d1d658419b7c1bfa64173e4c30902797816084f",
          "dweb:/ipfs/QmaJhMAi99aaPiSMKDeRW8656kEZ6m3EqVhBKwNnSJrvZf"
        ],
        "license": "CAL"
      },
      "src/lib/ns/LibNamespace.sol": {
        "keccak256": "0xd72b1340849f083cfa8f9882f4acf1ff3cfa548425872e5ada2e453553381457",
        "urls": [
          "bzz-raw://d974d8ae488be26fafb9fe7e106918aec02fc78d463eeda29fa2d0029b0521b3",
          "dweb:/ipfs/QmWSe3vEEEt7DN19eERQmmnen2mBdwR6kwriafvmuo5zfo"
        ],
        "license": "CAL"
      },
      "src/lib/op/00/LibOpConstantNP.sol": {
        "keccak256": "0x2d5661ea3103e37ca46d543246cffe2fa108e21f8631fff8008fc4ff62156075",
        "urls": [
          "bzz-raw://303f2d6538e4a4c9541288700ab3fc3759b7758d50de81d2ad4753ed62a66f6c",
          "dweb:/ipfs/QmYnc5H7XYC6Y4zcvgjq5SgmgYnki3E455prHq5zj6mjmg"
        ],
        "license": "CAL"
      },
      "src/lib/op/00/LibOpStackNP.sol": {
        "keccak256": "0xcaa290607fdeaa8ade6dc08a90e32d900ba2863a3d4da1264741e9a2e2dc4f9c",
        "urls": [
          "bzz-raw://1983aab22e37936616deb1ab0b69d9294da2633b5098d423ce2a6172a96c9b34",
          "dweb:/ipfs/QmTpYaQyRSbXpffcD1m7rkeVtVRpazPUmFMiUWBFQ58HgM"
        ],
        "license": "CAL"
      },
      "src/lib/op/LibAllStandardOpsNP.sol": {
        "keccak256": "0x08e7530f0c4a30b4a41e3d45838159a7fb8ee425edcc8d4b1cec545a378ea398",
        "urls": [
          "bzz-raw://4c9e07e32c6dd0088bb569c9eec4a301c9c9e896075f0ceee4e951fb40bc8d4c",
          "dweb:/ipfs/QmaWW6XcNNuHwdMet88mySV2P9yhxPzQ54kyQ2f6Fz69DX"
        ],
        "license": "CAL"
      },
      "src/lib/op/context/LibOpContextNP.sol": {
        "keccak256": "0x13700163259f1a39620146adccae05620b46d627f214650ecae1ffa17e4eb488",
        "urls": [
          "bzz-raw://9218e5e84444ebff1828086e0a423bc46e558ae1ba031839c2af9d8b1a2e7c34",
          "dweb:/ipfs/QmdWCXMu8pnxfCHB1mboCJL8QsMZasg3cwj9yvKqNS2d3Q"
        ],
        "license": "CAL"
      },
      "src/lib/op/crypto/LibOpHashNP.sol": {
        "keccak256": "0x309cdf1d9cdbf7789ddb87877bbc6942fe8b708aa4a8b9bc6915273710ef6b11",
        "urls": [
          "bzz-raw://354fa864d9bcaf13282796afe310487c9d6d706217b0d86a0e4b69b1f6279246",
          "dweb:/ipfs/QmRFHm2ymba6ALps4XKsm1UJkct8eeH7vrjA9RaRcZFqoX"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpBlockNumberNP.sol": {
        "keccak256": "0x4e464f107d35bd80d85a6a64e826161c2659ff74d8c8f8a743e08cee967045d5",
        "urls": [
          "bzz-raw://7041bb8e3201c3a770ac444ce124a6140aba7b27e37c0b598edd2aa146cdfcc4",
          "dweb:/ipfs/QmbxxF7SKyXHStSpieLQup5q5Ga7eTJu9EZS5bPxaN8zdg"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpChainIdNP.sol": {
        "keccak256": "0xa7b2621ffb21d38d93dae42a9aaf017c28cd154adedd8d142e726c817c91175e",
        "urls": [
          "bzz-raw://f65cf9118ec360c849c13e9950ebe8093bf36994f075232594aaf6c15056b45e",
          "dweb:/ipfs/QmZyxAPvB5d17bCxPskFP8pdF5FfTb5yCRMtypKnxHqC2r"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpMaxUint256NP.sol": {
        "keccak256": "0x6a46895f80470b730fa2d2c9f8710c8f60c46b498091273b296501af6d48f8c4",
        "urls": [
          "bzz-raw://cf021bd50b24f99d995d2d141e33e1a7f27b44a488aba8c52f9b351d76e10c9f",
          "dweb:/ipfs/QmdNYKyiJyzg1PeHumvhLaco5rt48SGWoiLd5xwNh2Fax8"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpTimestampNP.sol": {
        "keccak256": "0xbf1ef6ae2ecc0a5f5f29d888e87f524f5c23514cfc729c2b77336912688da71c",
        "urls": [
          "bzz-raw://eaa94c30b8f02631acbea6b339ef89665c7d881974664e3f6d745c901bcaabf5",
          "dweb:/ipfs/QmUoC8azwbNaEv7rx3EsXQRJXMqNREcnrnLhtx1t4Nc34X"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpAnyNP.sol": {
        "keccak256": "0x053bd8e6dd4ba9e5eea0d5e7cfe574a9027f5ee7ecef369a67cf5f456f4daadb",
        "urls": [
          "bzz-raw://92dfb954e5fa430a069c9ad8ee9adeca770e1dc476fee4bf88aceeba075d014b",
          "dweb:/ipfs/QmZRVQMTocCrGbnwHQ3ps5YQM9PRj4Vkrc32pjbYaxYUTN"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpConditionsNP.sol": {
        "keccak256": "0xffa5ec76c53aefd30609d8cb13e1ca78c03bb00095c76d293764b9d8d140485e",
        "urls": [
          "bzz-raw://7fa3ec8cc1f33b296caeee35abb0798010e14992e0cda8537c530eb24c711f31",
          "dweb:/ipfs/QmXMfKDGnDdFk2LFLGqSoPmotGS782zE4yWanqejd5Pq5b"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEnsureNP.sol": {
        "keccak256": "0xbbec557f1fa0810a191c055429e86b9d49ec28779fa331bce664ebde58e2e682",
        "urls": [
          "bzz-raw://565e300f1c6058e2d6cee6d414dc01f4860e36753aa60dc1b645b19111e03749",
          "dweb:/ipfs/QmccKU8PiNRN8UW8aWiS7S7rn8q9p6jK1c2Vzo14zWgykb"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEqualToNP.sol": {
        "keccak256": "0xad9881f4c0555b100996dfa9350b206d680a87cdaaf7e25a5027cceba2d224c0",
        "urls": [
          "bzz-raw://d2ac6a4162a236fb4e20fd76d261961e3366c7d2e9278c1fa30cf98083df6206",
          "dweb:/ipfs/QmQsbyLP6Bmd47uuLg3wPSjz7zPUY3J9sfAZFs2Rqrvqng"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEveryNP.sol": {
        "keccak256": "0x45f997659ae947a0b663907640b4f301335a031f2cddbefc68ba0dca6fa46502",
        "urls": [
          "bzz-raw://6d9e5f2637d71edf1f9c5dc72b60eed1f8991fb1c2bbce7e40f371ea8efd2041",
          "dweb:/ipfs/QmPWeFKHavLs1LSUhVqoCWqqz3JV2TGYejBRvHbbCZCARt"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpGreaterThanNP.sol": {
        "keccak256": "0xd0f8c149c522520a7f7c707ef76b96b2ed14e2cb374925fa944faf25df13f41a",
        "urls": [
          "bzz-raw://f59ebe95274cd1b78fffa5a6b6923818cbba0ae9b854745a6c685c66f945e2e0",
          "dweb:/ipfs/QmQ8uBEjvWmZy1SDiPqozLgSUvL7GmQQcNh5E3C7RLnwsr"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpGreaterThanOrEqualToNP.sol": {
        "keccak256": "0x48cc828f464e9d64714aa3b5956a63c42eb10daef80aad69a5d61f26f6e153a7",
        "urls": [
          "bzz-raw://6d629c32421cc32366ab66b83da17399f5e37315d3fe8a9f42be571087fe4904",
          "dweb:/ipfs/QmXwt2QPQF35oi3WajoAFePBgNknRqZPdvG6YPEThaWaxF"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpIfNP.sol": {
        "keccak256": "0xd398f6482646f1ed74cfd291f053f1d14a2aa5074fb80a746972d5ccc600ecd0",
        "urls": [
          "bzz-raw://0b652b90d9e007f24e6e0780d8dfdc9addf9dc38a306796ddcbde68d3b4e62e3",
          "dweb:/ipfs/QmUVF8TvoRthRmWH6JXKfJvCGTDnJaraS4YXUyejhypuTS"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpIsZeroNP.sol": {
        "keccak256": "0xb24881e858814ed9521dbb9a781207b0dde9aab8f81089a57a1751f97d37b6b9",
        "urls": [
          "bzz-raw://287e84e4f1b289ce4bb681e9dd392f2e714426f433d1072da56666628a6935e0",
          "dweb:/ipfs/QmYywCkubjZqkwxTeLGLCs4yuntGTgwRsX7TETsiuesBjV"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpLessThanNP.sol": {
        "keccak256": "0x30a70b1ace2e33a3ad79892a10f53e581838d3967e92743a77193f73d79dcc07",
        "urls": [
          "bzz-raw://91c6e73bcf34bd3c8900c6144b39406118be0d12a74b76d8e6f2efb9a0c0190d",
          "dweb:/ipfs/QmWLkx2zXLEtv3z2kEmTpaD1CUjF4PtVyiE9MZiBm4MywM"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpLessThanOrEqualToNP.sol": {
        "keccak256": "0x6287a32c4a4ec11edc7e580c68ca4008bcb13ae0c2dd4f0b34fbee9373ee9125",
        "urls": [
          "bzz-raw://ca49adcf94dfd4fd5c316efb24097a0ffeec7973bbe581aff4f6a084793ae4c2",
          "dweb:/ipfs/QmRJcADpVf16HBfkazgp4U75RpF1gunKLdaniKfsK9uq2Y"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18DivNP.sol": {
        "keccak256": "0x556d22dc35f8631aff454291e384be7a15aec66e8078928a84882ceceb762af8",
        "urls": [
          "bzz-raw://2e9d49604c1d9a5492d4647bec994051a84dd10562e1b78c99703e1474495c1e",
          "dweb:/ipfs/QmZo9MrpzKKXFr5YBbb9aJdyUssDtBewg5VT95DpHSYTzZ"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18MulNP.sol": {
        "keccak256": "0x4a1a42c8dad8a32a23afb3e67d79bc6805da1b3e4c57a1392877a4efd335616c",
        "urls": [
          "bzz-raw://30ad9b686b526d659e44f0675f04fba307e7d16610615d5f505c6fb56648c2b6",
          "dweb:/ipfs/QmYx6XdF9ps291CGSFBbufT6h1f1YYPoE68LdmCUY1mkKn"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18Scale18DynamicNP.sol": {
        "keccak256": "0x96c8db069222b8ca9aeacb307ff3891f454f796d05e91af870d7fed6e202af56",
        "urls": [
          "bzz-raw://c33c63057853609504ae6f51071936e446ff7058e9020718448da37319c0fe69",
          "dweb:/ipfs/QmYnXFr1fujysruX8PEgqsHRvVSEizax5hLUQR46JeiUv8"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18Scale18NP.sol": {
        "keccak256": "0x2021289602d984f54d634aa917a8d341621221797fa6522ee4777557f5a43c31",
        "urls": [
          "bzz-raw://a81c7c30d48e75f320d5a3d887f37365796aa08cee19c842dac1a97bc3600a50",
          "dweb:/ipfs/QmazWCbq3k1RkP7Nk3JzLfBXzWdUW246YDaYoXEWpZ9UHm"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18ScaleNNP.sol": {
        "keccak256": "0xd37209a42d49e2165b2c75504ac40758d10815036c62fff3014a52919f90f6dd",
        "urls": [
          "bzz-raw://15f90b121e9fef598f230970f52f4429de3f66a76f70fcc408d71fc549ff37ba",
          "dweb:/ipfs/QmTwXsXyPCVfvAQXWMvrHo2xd37aUyUp9csBM7k1TzVvaZ"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntAddNP.sol": {
        "keccak256": "0x876de6d3c804f2b272d170d4288dd18aac01e18daa18604fce3e11f3821e40f7",
        "urls": [
          "bzz-raw://17775026eda8ce05fc71c8e5afba633bb617b8d2559fa046d2e10e8d199c50dd",
          "dweb:/ipfs/QmbeXQbJXxGbmMj42A5aHAfVwwVdDcw6kxuT3p8aEmpMXG"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntDivNP.sol": {
        "keccak256": "0x7697b77c1e9c0853c9b5284ffeec7e514627520d275848bb1d11ebfc998dd7c1",
        "urls": [
          "bzz-raw://8a2112389b34615ba2cbb1ab9e74977712944da34e39650cdda65e8845e3b8ea",
          "dweb:/ipfs/QmYdyGdG4X3JVB2h6GsGUCgogNTfZojubzpggR9y3cUTSw"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntExpNP.sol": {
        "keccak256": "0x1b747d6f0e5b3428b7d3c4a45d171f360e1c62912bb79159b40963d9e65eacbc",
        "urls": [
          "bzz-raw://aa03fff2264f0b32f652b19bb91c5558b0e7993fa4dc284007fc0199186478c3",
          "dweb:/ipfs/QmPdNPmC3GZTfxSfcPG5ATwdYfuq7iJQ8F1ijnW9WNfmtm"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMaxNP.sol": {
        "keccak256": "0xb77e8a922693194b0e42255c892b8b87e9b1a2083efdb4702a8c44afcb11b01d",
        "urls": [
          "bzz-raw://3091d0ece13f61d08f3693e7f9a913d8225cec09a610084e43ca771325b6ad17",
          "dweb:/ipfs/QmdMJcoLfioGeRr3igawstsCGPJWhx87Eh1844BdgQcPvd"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMinNP.sol": {
        "keccak256": "0xe7058452aa5124d999fc7b55285e4eed76554777a09ac80a5b99ed0eb1271ec8",
        "urls": [
          "bzz-raw://a820ba4e9f3760d5be630373dd0d200e6efc08144964d92cc370d545e4d63d4e",
          "dweb:/ipfs/QmVw6jsBxbKuNjg2P5WGu2FqV8FrSDta76E5tdT7wmfN65"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntModNP.sol": {
        "keccak256": "0x63ae362fac2b193ebd8dcb7907c50d3d11e7a88f6504e63d8218611562d90eaf",
        "urls": [
          "bzz-raw://b9840982d49f9f2f650c25c297b940ab5d819e3493989bf65cca59157b5cda02",
          "dweb:/ipfs/QmPXj5UNCFLMT9FNBp6JhJUJ8vMfzTRRXMhYTBc7fZkmqd"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMulNP.sol": {
        "keccak256": "0x57a4b9e4a81bc722a2bfd856d9a3247f0922dd761c647e57522c23c3ce9ad62a",
        "urls": [
          "bzz-raw://1dae3d0cdc6c748949cf09deb41fef432d5a003f9d84fb8c17c7a34cd1acb6f1",
          "dweb:/ipfs/QmR4Ki1b3Y6Hwiq43KMhsBtrrB4KdpJqWotJfjCrq2Xv5X"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntSubNP.sol": {
        "keccak256": "0xc325fd8fb88a258bd385681b8df7836b285f627792cdc60a9661a83d4c23c744",
        "urls": [
          "bzz-raw://b14ae45c4fe89fff414cb3b1388f3a71bf3ac1554c5f1a89787d483cd53bf093",
          "dweb:/ipfs/Qma5sES45ZqDV2pyYrp88xbRFnLqtg7ehnnowAoGpCp28K"
        ],
        "license": "CAL"
      },
      "src/lib/op/store/LibOpGetNP.sol": {
        "keccak256": "0x5688dd926dbaac507c0af4269c2d341b64fc778887619936c21d6422cb966572",
        "urls": [
          "bzz-raw://9495f93b6f68cb5b0f9ff5db65f2bdbd00651bc0567e0f6fe15b8607afcf8bd2",
          "dweb:/ipfs/QmTdtks7M2aum5657rkUefdmATAQRRshL6G8DLFg9HhAKf"
        ],
        "license": "CAL"
      },
      "src/lib/op/store/LibOpSetNP.sol": {
        "keccak256": "0xfcba43d59c778aa97beee6208970bbfbfe86e1c6ea37f2ef8a83cc39fd62b589",
        "urls": [
          "bzz-raw://844d9a2d00fa307a3d639f795304c68081ce9325ccfe67669cb45f52c5fb1f1b",
          "dweb:/ipfs/QmS4WQHStwLK4BGwAi3wuWie7rLL1TebdFrccN3w75yKqv"
        ],
        "license": "CAL"
      },
      "src/lib/op/uniswap/LibOpUniswapV2AmountIn.sol": {
        "keccak256": "0x6a461a4b4aab73c7fceb7f67a8ebd6ee47f390f3b7014726d48f3c8c71ce31d5",
        "urls": [
          "bzz-raw://bf0b2c17cc78f6263da2751b6a2d53d21f22b5a185d4ce17f97de41f74572026",
          "dweb:/ipfs/QmVKSPCjPhQRbz1LYs9W59nt6VA9pBREcVtHcnrhpxJnMj"
        ],
        "license": "CAL"
      },
      "src/lib/op/uniswap/LibOpUniswapV2AmountOut.sol": {
        "keccak256": "0xe822d25a6d84942bd2e1d8d044216ae06d9cf3b50e8e538c292782cefa17812a",
        "urls": [
          "bzz-raw://9ec8d6374a6593e6e33aaa6c60424c238e9666df79fc192fe56c5be04ccc92f3",
          "dweb:/ipfs/QmW3vdn2UpRJUjwh9zc2Z4ykxuiDnVfHiyUwzDNhHmMtQV"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibCtPop.sol": {
        "keccak256": "0x02681ac3433a844043b26a4d8958080c48c70039fc72c224f2607fb87c55f758",
        "urls": [
          "bzz-raw://4e14bbc205554ac9c910a80846280dddb4989fe3dd5e5dc0f134a5db49d5a8c6",
          "dweb:/ipfs/QmbWLfM49zKHNpvS48BTeAWWsMAU9L7k6XiaVunLQoZaMe"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParse.sol": {
        "keccak256": "0x30e58605e81c89cd2fd8a39c6c70ae06124ba81d79802c6f39627904d3ccb843",
        "urls": [
          "bzz-raw://39ce45cbeff0c627f5d1f89ecd96ed04576a01046f6d9a6a3aa287c2c6d35f80",
          "dweb:/ipfs/QmcpQ2iEt3MSB1joKWqsZPKuKDqdK2DtiS8cygwMNPY6rL"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseCMask.sol": {
        "keccak256": "0x5ec6b865df66bec72ea0976082ce9b7d0250818ee8180cf463861f20eec3b0ff",
        "urls": [
          "bzz-raw://3e6660d651d4d57eadd18b440235f5a63c4bac7dce52a9f065329b47e2ca4fec",
          "dweb:/ipfs/QmNUJs5iPbuZRYmkZc3XzsekRdzdrABoQUPbg5eEGhr2kV"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseLiteral.sol": {
        "keccak256": "0x170019ccfcfc697115afdebc14137062bdab4c54bf5a6e6baa9e26dbfafa11ab",
        "urls": [
          "bzz-raw://ee275319b3c9508cf363f3e5ecab4aae63695ba50ce84f4bd6a64ea617eadba3",
          "dweb:/ipfs/QmPetJ94MHDUQD7wGVggGuCuVeF1BaXerKZ63mVazrnVU4"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseMeta.sol": {
        "keccak256": "0x0982f62c3cfd8cc19e0caf857d60ee3cbfd9ec87cc5275c9a7b79ff935f01f82",
        "urls": [
          "bzz-raw://68fca23641f4c84c3f68f353bef6a4d84cd1db78603e080766ffd55d8176641c",
          "dweb:/ipfs/QmNbdNGKTmiw2QJhKLRBSPsu2PAX1stUBnjJfAbq7AtAeM"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseOperand.sol": {
        "keccak256": "0x5d422ef714a1c13a3bfcb05170dec7662758f4125cd77a1e79c8afdbd064b465",
        "urls": [
          "bzz-raw://06e396e8698b17225269b0c8c09e5d4ce867112e6a1fda92f9056eb53d3a1301",
          "dweb:/ipfs/QmPGm9oBbXosP1NZrc37uZ5DpEg6suLmJ5A9jH8y8iVXZv"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseStackName.sol": {
        "keccak256": "0x66dcbde3d68a30ce3813684ee6ba3f5cc9d28eba38460935d60144be6069a91e",
        "urls": [
          "bzz-raw://ecb40d8eb97d881755376794dd6f42a8dbd117601f07e2f3a980a13b3857d4cd",
          "dweb:/ipfs/QmQzPK6BuRfGFSFa6U3ivFHpH8s9NTFyAadWrN2RDCHuWu"
        ],
        "license": "CAL"
      },
      "src/lib/state/LibInterpreterStateDataContractNP.sol": {
        "keccak256": "0x8517de1fb60a1027a8b1d53d03c0282c654b16ef0ba6458e89588e423bd16231",
        "urls": [
          "bzz-raw://ec222a95a0839b4eb0b97784b993fe01288bfe51af285c9801892ff0b68486ce",
          "dweb:/ipfs/QmX7QGkpsbhAb7WdtKBr4McjTE97uQiCD2SpP1rgbgqRka"
        ],
        "license": "CAL"
      },
      "src/lib/state/LibInterpreterStateNP.sol": {
        "keccak256": "0x2058050c280e19928aff10a513c6684167b842e5d37c735ab21244be732564eb",
        "urls": [
          "bzz-raw://2f577b97f015fc7db843f33f5c25a97b8e4a1926fe8d5b1b3b50fe88d2f4cb64",
          "dweb:/ipfs/QmUKEqGnGDecgfCnZeEsQQD9gsPs4mAA7y7TbRcB8znkJo"
        ],
        "license": "CAL"
      },
      "src/lib/uniswap/LibUniswapV2.sol": {
        "keccak256": "0x58a413eabb96f4757f9c7d30b90536de357797dfcba8125dc13bacc60408fa6d",
        "urls": [
          "bzz-raw://70cbf2570733e11c87b96d538f9d4bea51110b44b60e826d50ea6a9d8ad434e6",
          "dweb:/ipfs/QmbjmMfMBzB7syAJfJQ5JpqqbJcbdvJaYtRYPF995fBzo6"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/RainterpreterExpressionDeployerNP.sol",
    "id": 55040,
    "exportedSymbols": {
      "ALL_STANDARD_OPS_LENGTH": [
        59245
      ],
      "AUTHORING_META_HASH": [
        54633
      ],
      "AuthoringMeta": [
        70815
      ],
      "AuthoringMetaHashMismatch": [
        56032
      ],
      "BASE_PREFIX": [
        51978
      ],
      "B_1": [
        53937
      ],
      "B_11": [
        53945
      ],
      "B_111": [
        53953
      ],
      "B_1111": [
        53961
      ],
      "B_11111": [
        53969
      ],
      "B_111111": [
        53977
      ],
      "B_1111111": [
        53985
      ],
      "B_11111111": [
        53993
      ],
      "B_111111111": [
        54001
      ],
      "B_1111111111": [
        54009
      ],
      "B_11111111111": [
        54017
      ],
      "B_111111111111": [
        54025
      ],
      "B_1111111111111": [
        54033
      ],
      "B_11111111111111": [
        54041
      ],
      "B_111111111111111": [
        54049
      ],
      "B_1111111111111111": [
        54057
      ],
      "BadDynamicLength": [
        59241
      ],
      "BadOpInputsLength": [
        57406
      ],
      "Casting": [
        51725
      ],
      "CastingErrors": [
        49938
      ],
      "Common": [
        50969
      ],
      "DEFAULT_STATE_NAMESPACE": [
        55870
      ],
      "DataContractMemoryContainer": [
        51984
      ],
      "E": [
        50251
      ],
      "ERC165": [
        43953
      ],
      "EXP2_MAX_INPUT": [
        50275
      ],
      "EXP_MAX_INPUT": [
        50262
      ],
      "EncodedDispatch": [
        55858
      ],
      "EnsureFailed": [
        61604
      ],
      "EntrypointMinOutputs": [
        57397
      ],
      "EntrypointMissing": [
        57381
      ],
      "EntrypointNonZeroInput": [
        57388
      ],
      "Errors": [
        50970
      ],
      "FIXED_POINT_DECIMALS": [
        136261
      ],
      "FIXED_POINT_ONE": [
        136265
      ],
      "FLAG_MAX_INT": [
        136281
      ],
      "FLAG_ROUND_UP": [
        136269
      ],
      "FLAG_SATURATE": [
        136275
      ],
      "FixedPointDecimalScale": [
        53178
      ],
      "FullyQualifiedNamespace": [
        55819
      ],
      "HALF_UNIT": [
        50286
      ],
      "Helpers": [
        51726
      ],
      "IDebugExpressionDeployerV2": [
        55947
      ],
      "IDebugInterpreterV2": [
        55981
      ],
      "IERC165": [
        43965
      ],
      "IERC1820Registry": [
        52181
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        55987
      ],
      "IERC1820_REGISTRY": [
        52191
      ],
      "IExpressionDeployerV2": [
        56022
      ],
      "IInterpreterStoreV1": [
        55851
      ],
      "IInterpreterV1": [
        55901
      ],
      "INTEGRITY_FUNCTION_POINTERS": [
        54612
      ],
      "INTERPRETER_BYTECODE_HASH": [
        54619
      ],
      "IParserV1": [
        56064
      ],
      "IUniswapV2Pair": [
        54363
      ],
      "IntegrityCheckStateNP": [
        57451
      ],
      "InterpreterStateNP": [
        72648
      ],
      "InvalidSourceIndex": [
        55218
      ],
      "LOG2_10": [
        50297
      ],
      "LOG2_E": [
        50308
      ],
      "LibAllStandardOpsNP": [
        59802
      ],
      "LibBytecode": [
        56346
      ],
      "LibBytes": [
        53369
      ],
      "LibCast": [
        52379
      ],
      "LibConvert": [
        52418
      ],
      "LibDataContract": [
        52091
      ],
      "LibEncodedDispatch": [
        56830
      ],
      "LibEvalNP": [
        57073
      ],
      "LibIntegrityCheckNP": [
        57769
      ],
      "LibInterpreterStateDataContractNP": [
        72616
      ],
      "LibInterpreterStateNP": [
        72693
      ],
      "LibMemCpy": [
        53401
      ],
      "LibMemory": [
        53412
      ],
      "LibMemoryKV": [
        52329
      ],
      "LibNamespace": [
        58768
      ],
      "LibOpAnyNP": [
        61406
      ],
      "LibOpBlockNumberNP": [
        60791
      ],
      "LibOpChainIdNP": [
        60870
      ],
      "LibOpConditionsNP": [
        61592
      ],
      "LibOpConstantNP": [
        58888
      ],
      "LibOpContextNP": [
        59981
      ],
      "LibOpDecimal18DivNP": [
        62699
      ],
      "LibOpDecimal18MulNP": [
        62920
      ],
      "LibOpDecimal18Scale18DynamicNP": [
        63031
      ],
      "LibOpDecimal18Scale18NP": [
        63148
      ],
      "LibOpDecimal18ScaleNNP": [
        63265
      ],
      "LibOpEnsureNP": [
        61759
      ],
      "LibOpEqualToNP": [
        61843
      ],
      "LibOpEveryNP": [
        61970
      ],
      "LibOpGetNP": [
        64807
      ],
      "LibOpGreaterThanNP": [
        62054
      ],
      "LibOpGreaterThanOrEqualToNP": [
        62138
      ],
      "LibOpHashNP": [
        60071
      ],
      "LibOpIfNP": [
        62224
      ],
      "LibOpIntAddNP": [
        63428
      ],
      "LibOpIntDivNP": [
        63591
      ],
      "LibOpIntExpNP": [
        63760
      ],
      "LibOpIntMaxNP": [
        63940
      ],
      "LibOpIntMinNP": [
        64120
      ],
      "LibOpIntModNP": [
        64283
      ],
      "LibOpIntMulNP": [
        64446
      ],
      "LibOpIntSubNP": [
        64609
      ],
      "LibOpIsZeroNP": [
        62306
      ],
      "LibOpLessThanNP": [
        62390
      ],
      "LibOpLessThanOrEqualToNP": [
        62474
      ],
      "LibOpMaxUint256NP": [
        60960
      ],
      "LibOpSetNP": [
        64930
      ],
      "LibOpStackNP": [
        58979
      ],
      "LibOpTimestampNP": [
        61039
      ],
      "LibOpUniswapV2AmountIn": [
        65137
      ],
      "LibOpUniswapV2AmountOut": [
        65344
      ],
      "LibParse": [
        67447
      ],
      "LibParseMeta": [
        71511
      ],
      "LibPointer": [
        53536
      ],
      "LibStackPointer": [
        53699
      ],
      "LibUint256Array": [
        53927
      ],
      "LibUniswapV2": [
        73259
      ],
      "MASK_10BIT": [
        54097
      ],
      "MASK_11BIT": [
        54101
      ],
      "MASK_12BIT": [
        54105
      ],
      "MASK_13BIT": [
        54109
      ],
      "MASK_14BIT": [
        54113
      ],
      "MASK_15BIT": [
        54117
      ],
      "MASK_16BIT": [
        54121
      ],
      "MASK_1BIT": [
        54061
      ],
      "MASK_2BIT": [
        54065
      ],
      "MASK_3BIT": [
        54069
      ],
      "MASK_4BIT": [
        54073
      ],
      "MASK_5BIT": [
        54077
      ],
      "MASK_6BIT": [
        54081
      ],
      "MASK_7BIT": [
        54085
      ],
      "MASK_8BIT": [
        54089
      ],
      "MASK_9BIT": [
        54093
      ],
      "MAX_UD60x18": [
        50319
      ],
      "MAX_UINT128": [
        44972
      ],
      "MAX_UINT40": [
        44980
      ],
      "MAX_WHOLE_UD60x18": [
        50330
      ],
      "Math": [
        51727
      ],
      "MemoryKV": [
        52242
      ],
      "MemoryKVKey": [
        52244
      ],
      "MemoryKVVal": [
        52246
      ],
      "NO_STORE": [
        55828
      ],
      "NegativeStackLength": [
        55212
      ],
      "NoConditionsMet": [
        61416
      ],
      "OPCODE_FUNCTION_POINTERS": [
        55222
      ],
      "OPERAND_PARSER_OFFSET_8_M1_M1": [
        71532
      ],
      "OPERAND_PARSER_OFFSET_DISALLOWED": [
        71520
      ],
      "OPERAND_PARSER_OFFSET_DOUBLE_PERBYTE_NO_DEFAULT": [
        71526
      ],
      "OPERAND_PARSER_OFFSET_M1_M1": [
        71529
      ],
      "OPERAND_PARSER_OFFSET_SINGLE_FULL": [
        71523
      ],
      "OVERFLOW_RESCALE_OOMS": [
        136285
      ],
      "OZMath": [
        44831
      ],
      "Operand": [
        55862
      ],
      "OutOfBoundsConstantRead": [
        58781
      ],
      "OutOfBoundsStackRead": [
        58902
      ],
      "OutOfBoundsTruncate": [
        53709
      ],
      "PARSE_META": [
        54636
      ],
      "PI": [
        50338
      ],
      "PRBMath_UD60x18_Ceil_Overflow": [
        50437
      ],
      "PRBMath_UD60x18_Convert_Overflow": [
        50442
      ],
      "PRBMath_UD60x18_Exp2_InputTooBig": [
        50454
      ],
      "PRBMath_UD60x18_Exp_InputTooBig": [
        50448
      ],
      "PRBMath_UD60x18_Gm_Overflow": [
        50463
      ],
      "PRBMath_UD60x18_IntoSD1x18_Overflow": [
        50469
      ],
      "PRBMath_UD60x18_IntoSD59x18_Overflow": [
        50475
      ],
      "PRBMath_UD60x18_IntoUD2x18_Overflow": [
        50481
      ],
      "PRBMath_UD60x18_IntoUint128_Overflow": [
        50487
      ],
      "PRBMath_UD60x18_IntoUint40_Overflow": [
        50493
      ],
      "PRBMath_UD60x18_Log_InputTooSmall": [
        50499
      ],
      "PRBMath_UD60x18_Sqrt_Overflow": [
        50505
      ],
      "PREFIX_BYTES_LENGTH": [
        51982
      ],
      "Pointer": [
        53416
      ],
      "RainterpreterExpressionDeployerConstructionConfig": [
        54643
      ],
      "RainterpreterExpressionDeployerNP": [
        55039
      ],
      "RainterpreterNP": [
        55523
      ],
      "ReadError": [
        51974
      ],
      "SD1x18": [
        47069
      ],
      "SD59x18": [
        49554
      ],
      "STORE_BYTECODE_HASH": [
        54626
      ],
      "SourceIndex": [
        55856
      ],
      "SourceOffsetOutOfBounds": [
        56077
      ],
      "StackAllocationMismatch": [
        57431
      ],
      "StackOutputsMismatch": [
        57438
      ],
      "StackUnderflow": [
        57415
      ],
      "StackUnderflowHighwater": [
        57424
      ],
      "StateNamespace": [
        55860
      ],
      "TruncateError": [
        53301
      ],
      "UD2x18": [
        49925
      ],
      "UD60x18": [
        51729
      ],
      "UNIT": [
        50349
      ],
      "UNIT_SQUARED": [
        50360
      ],
      "UnalignedStackPointer": [
        53547
      ],
      "UnexpectedInterpreterBytecodeHash": [
        54598
      ],
      "UnexpectedOpMetaHash": [
        54608
      ],
      "UnexpectedPointers": [
        54593
      ],
      "UnexpectedStoreBytecodeHash": [
        54603
      ],
      "WillOverflow": [
        52666
      ],
      "WriteError": [
        51971
      ],
      "ZERO": [
        50368
      ],
      "add": [
        50537
      ],
      "and": [
        50560
      ],
      "and2": [
        50586
      ],
      "avg": [
        51030
      ],
      "ceil": [
        51059
      ],
      "convert": [
        50396,
        50427
      ],
      "div": [
        51088
      ],
      "eq": [
        50609
      ],
      "exp": [
        51133
      ],
      "exp2": [
        51179
      ],
      "floor": [
        51191
      ],
      "frac": [
        51203
      ],
      "gm": [
        51270
      ],
      "gt": [
        50632
      ],
      "gte": [
        50655
      ],
      "intoSD1x18": [
        50003
      ],
      "intoSD59x18": [
        50084
      ],
      "intoUD2x18": [
        50042
      ],
      "intoUint128": [
        50136
      ],
      "intoUint256": [
        50101
      ],
      "intoUint40": [
        50171
      ],
      "inv": [
        51292
      ],
      "isZero": [
        50673
      ],
      "ln": [
        51318
      ],
      "log10": [
        51369
      ],
      "log2": [
        51473
      ],
      "lshift": [
        50696
      ],
      "lt": [
        50719
      ],
      "lte": [
        50742
      ],
      "mod": [
        50768
      ],
      "mul": [
        51501
      ],
      "neq": [
        50791
      ],
      "not": [
        50811
      ],
      "or": [
        50837
      ],
      "pow": [
        51608
      ],
      "powu": [
        51680
      ],
      "rshift": [
        50860
      ],
      "sqrt": [
        51722
      ],
      "sub": [
        50886
      ],
      "uEXP2_MAX_INPUT": [
        50268
      ],
      "uEXP_MAX_INPUT": [
        50255
      ],
      "uHALF_UNIT": [
        50279
      ],
      "uLOG2_10": [
        50290
      ],
      "uLOG2_E": [
        50301
      ],
      "uMAX_SD1x18": [
        46986
      ],
      "uMAX_SD59x18": [
        47549
      ],
      "uMAX_UD2x18": [
        49878
      ],
      "uMAX_UD60x18": [
        50312
      ],
      "uMAX_WHOLE_UD60x18": [
        50323
      ],
      "uUNIT": [
        50342
      ],
      "uUNIT_SQUARED": [
        50353
      ],
      "ud": [
        50188
      ],
      "ud60x18": [
        50205
      ],
      "uncheckedAdd": [
        50913
      ],
      "uncheckedSub": [
        50940
      ],
      "unwrap": [
        50222
      ],
      "wrap": [
        50239
      ],
      "xor": [
        50966
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11009:77",
    "nodes": [
      {
        "id": 54571,
        "nodeType": "PragmaDirective",
        "src": "32:24:77",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 54572,
        "nodeType": "ImportDirective",
        "src": "58:73:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "file": "openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 43954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54573,
        "nodeType": "ImportDirective",
        "src": "133:40:77",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibPointer.sol",
        "file": "rain.solmem/lib/LibPointer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 53537,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54574,
        "nodeType": "ImportDirective",
        "src": "174:45:77",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibStackPointer.sol",
        "file": "rain.solmem/lib/LibStackPointer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 53700,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54575,
        "nodeType": "ImportDirective",
        "src": "220:51:77",
        "nodes": [],
        "absolutePath": "lib/rain.datacontract/src/lib/LibDataContract.sol",
        "file": "rain.datacontract/lib/LibDataContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 52092,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54576,
        "nodeType": "ImportDirective",
        "src": "272:42:77",
        "nodes": [],
        "absolutePath": "lib/rain.erc1820/src/lib/LibIERC1820.sol",
        "file": "rain.erc1820/lib/LibIERC1820.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 52192,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54577,
        "nodeType": "ImportDirective",
        "src": "316:57:77",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IExpressionDeployerV2.sol",
        "file": "../interface/unstable/IExpressionDeployerV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 56023,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54578,
        "nodeType": "ImportDirective",
        "src": "374:62:77",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IDebugExpressionDeployerV2.sol",
        "file": "../interface/unstable/IDebugExpressionDeployerV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 55948,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54579,
        "nodeType": "ImportDirective",
        "src": "437:55:77",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IDebugInterpreterV2.sol",
        "file": "../interface/unstable/IDebugInterpreterV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 55982,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54580,
        "nodeType": "ImportDirective",
        "src": "493:45:77",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IParserV1.sol",
        "file": "../interface/unstable/IParserV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 56065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54581,
        "nodeType": "ImportDirective",
        "src": "540:50:77",
        "nodes": [],
        "absolutePath": "src/lib/integrity/LibIntegrityCheckNP.sol",
        "file": "../lib/integrity/LibIntegrityCheckNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 57770,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54582,
        "nodeType": "ImportDirective",
        "src": "591:60:77",
        "nodes": [],
        "absolutePath": "src/lib/state/LibInterpreterStateDataContractNP.sol",
        "file": "../lib/state/LibInterpreterStateDataContractNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 72617,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54583,
        "nodeType": "ImportDirective",
        "src": "652:43:77",
        "nodes": [],
        "absolutePath": "src/lib/op/LibAllStandardOpsNP.sol",
        "file": "../lib/op/LibAllStandardOpsNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 59803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54587,
        "nodeType": "ImportDirective",
        "src": "696:80:77",
        "nodes": [],
        "absolutePath": "src/lib/parse/LibParse.sol",
        "file": "../lib/parse/LibParse.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 67448,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54584,
              "name": "LibParse",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67447,
              "src": "704:8:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 54585,
              "name": "LibParseMeta",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71511,
              "src": "714:12:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 54586,
              "name": "AuthoringMeta",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70815,
              "src": "728:13:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54588,
        "nodeType": "ImportDirective",
        "src": "778:31:77",
        "nodes": [],
        "absolutePath": "src/concrete/RainterpreterNP.sol",
        "file": "./RainterpreterNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55040,
        "sourceUnit": 55524,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54593,
        "nodeType": "ErrorDefinition",
        "src": "1112:47:77",
        "nodes": [],
        "documentation": {
          "id": 54589,
          "nodeType": "StructuredDocumentation",
          "src": "811:301:77",
          "text": "@dev Thrown when the pointers known to the expression deployer DO NOT match\n the interpreter it is constructed for. This WILL cause undefined expression\n behaviour so MUST REVERT.\n @param actualPointers The actual function pointers found at the interpreter\n address upon construction."
        },
        "errorSelector": "9835e402",
        "name": "UnexpectedPointers",
        "nameLocation": "1118:18:77",
        "parameters": {
          "id": 54592,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 54591,
              "mutability": "mutable",
              "name": "actualPointers",
              "nameLocation": "1143:14:77",
              "nodeType": "VariableDeclaration",
              "scope": 54593,
              "src": "1137:20:77",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes"
              },
              "typeName": {
                "id": 54590,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1137:5:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "1136:22:77"
        }
      },
      {
        "id": 54598,
        "nodeType": "ErrorDefinition",
        "src": "1382:68:77",
        "nodes": [],
        "documentation": {
          "id": 54594,
          "nodeType": "StructuredDocumentation",
          "src": "1161:221:77",
          "text": "Thrown when the `RainterpreterExpressionDeployer` is constructed with unknown\n interpreter bytecode.\n @param actualBytecodeHash The bytecode hash that was found at the interpreter\n address upon construction."
        },
        "errorSelector": "1dd8527e",
        "name": "UnexpectedInterpreterBytecodeHash",
        "nameLocation": "1388:33:77",
        "parameters": {
          "id": 54597,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 54596,
              "mutability": "mutable",
              "name": "actualBytecodeHash",
              "nameLocation": "1430:18:77",
              "nodeType": "VariableDeclaration",
              "scope": 54598,
              "src": "1422:26:77",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 54595,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1422:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "1421:28:77"
        }
      },
      {
        "id": 54603,
        "nodeType": "ErrorDefinition",
        "src": "1639:62:77",
        "nodes": [],
        "documentation": {
          "id": 54599,
          "nodeType": "StructuredDocumentation",
          "src": "1452:187:77",
          "text": "Thrown when the `Rainterpreter` is constructed with unknown store bytecode.\n @param actualBytecodeHash The bytecode hash that was found at the store\n address upon construction."
        },
        "errorSelector": "cc0415fd",
        "name": "UnexpectedStoreBytecodeHash",
        "nameLocation": "1645:27:77",
        "parameters": {
          "id": 54602,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 54601,
              "mutability": "mutable",
              "name": "actualBytecodeHash",
              "nameLocation": "1681:18:77",
              "nodeType": "VariableDeclaration",
              "scope": 54603,
              "src": "1673:26:77",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 54600,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1673:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "1672:28:77"
        }
      },
      {
        "id": 54608,
        "nodeType": "ErrorDefinition",
        "src": "1775:49:77",
        "nodes": [],
        "documentation": {
          "id": 54604,
          "nodeType": "StructuredDocumentation",
          "src": "1703:72:77",
          "text": "Thrown when the `Rainterpreter` is constructed with unknown opMeta."
        },
        "errorSelector": "87a1fcae",
        "name": "UnexpectedOpMetaHash",
        "nameLocation": "1781:20:77",
        "parameters": {
          "id": 54607,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 54606,
              "mutability": "mutable",
              "name": "actualOpMeta",
              "nameLocation": "1810:12:77",
              "nodeType": "VariableDeclaration",
              "scope": 54608,
              "src": "1802:20:77",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 54605,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1802:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "1801:22:77"
        }
      },
      {
        "id": 54612,
        "nodeType": "VariableDeclaration",
        "src": "1886:218:77",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "INTEGRITY_FUNCTION_POINTERS",
        "nameLocation": "1901:27:77",
        "scope": 55040,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes_memory_ptr",
          "typeString": "bytes"
        },
        "typeName": {
          "id": 54610,
          "name": "bytes",
          "nodeType": "ElementaryTypeName",
          "src": "1886:5:77",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes_storage_ptr",
            "typeString": "bytes"
          }
        },
        "value": {
          "hexValue": "1b4a1bc41c2b1c351c2b1c2b1c2b1c2b1c2b1c3f1c611c8b1cad1c3f1cad1cad1cb71cc11cad1cad1cca1cca1cad1cc11cc11cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cc11ce11ceb1ceb",
          "id": 54611,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "hexString",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "1935:169:77",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_39ad0be677a7ea97efac87ea28efa6c860c2de773572bd264b2c73bb2e30ceba",
            "typeString": "literal_string hex\"1b4a1bc41c2b1c351c2b1c2b1c2b1c2b1c2b1c3f1c611c8b1cad1c3f1cad1cad1cb71cc11cad1cad1cca1cca1cad1cc11cc11cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cca1cc11ce11ceb1ceb\""
          }
        },
        "visibility": "internal"
      },
      {
        "id": 54619,
        "nodeType": "VariableDeclaration",
        "src": "2156:120:77",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "INTERPRETER_BYTECODE_HASH",
        "nameLocation": "2173:25:77",
        "scope": 55040,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 54614,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "2156:7:77",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307834616438616362353837333138616132643562643435386361326531343464366131323164643536313438663339326231393931663765303661623437393266",
              "id": 54617,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2209:66:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33853981755513378071717089006860460554167373687472853626726664389592087820591_by_1",
                "typeString": "int_const 3385...(69 digits omitted)...0591"
              },
              "value": "0x4ad8acb587318aa2d5bd458ca2e144d6a121dd56148f392b1991f7e06ab4792f"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_33853981755513378071717089006860460554167373687472853626726664389592087820591_by_1",
                "typeString": "int_const 3385...(69 digits omitted)...0591"
              }
            ],
            "id": 54616,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "2201:7:77",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 54615,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2201:7:77",
              "typeDescriptions": {}
            }
          },
          "id": 54618,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "2201:75:77",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 54626,
        "nodeType": "VariableDeclaration",
        "src": "2322:114:77",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "STORE_BYTECODE_HASH",
        "nameLocation": "2339:19:77",
        "scope": 55040,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 54621,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "2322:7:77",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307864363133303136383235306433393537616533346638303236633262646264376532316433356262323032653835343061396233616263626332333264646236",
              "id": 54624,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2369:66:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_96828529400532591415779603569521449715482679285854575164354358232716072377782_by_1",
                "typeString": "int_const 9682...(69 digits omitted)...7782"
              },
              "value": "0xd6130168250d3957ae34f8026c2bdbd7e21d35bb202e8540a9b3abcbc232ddb6"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_96828529400532591415779603569521449715482679285854575164354358232716072377782_by_1",
                "typeString": "int_const 9682...(69 digits omitted)...7782"
              }
            ],
            "id": 54623,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "2361:7:77",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 54622,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2361:7:77",
              "typeDescriptions": {}
            }
          },
          "id": 54625,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "2361:75:77",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 54633,
        "nodeType": "VariableDeclaration",
        "src": "2482:114:77",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "AUTHORING_META_HASH",
        "nameLocation": "2499:19:77",
        "scope": 55040,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 54628,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "2482:7:77",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307861346435353864653363616230353665666661373930343939656133313366663364393632643935353133363436363134613961323930373366343461656231",
              "id": 54631,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2529:66:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_74556258937629252783860689474437880288159101062245074796335842249095000665777_by_1",
                "typeString": "int_const 7455...(69 digits omitted)...5777"
              },
              "value": "0xa4d558de3cab056effa790499ea313ff3d962d95513646614a9a29073f44aeb1"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_74556258937629252783860689474437880288159101062245074796335842249095000665777_by_1",
                "typeString": "int_const 7455...(69 digits omitted)...5777"
              }
            ],
            "id": 54630,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "2521:7:77",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 54629,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2521:7:77",
              "typeDescriptions": {}
            }
          },
          "id": 54632,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "2521:75:77",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 54636,
        "nodeType": "VariableDeclaration",
        "src": "2599:515:77",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "PARSE_META",
        "nameLocation": "2614:10:77",
        "scope": 55040,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes_memory_ptr",
          "typeString": "bytes"
        },
        "typeName": {
          "id": 54634,
          "name": "bytes",
          "nodeType": "ElementaryTypeName",
          "src": "2599:5:77",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes_storage_ptr",
            "typeString": "bytes"
          }
        },
        "value": {
          "hexValue": "010f00c20804b001180500014014144080040101008082020092020040a100148024163082aae700108f616d2200e3c6181b0025fdfc2100a1cef21c00e7762b2500229a7e0b103e260a0600ce656d0220f12be70c0035f0270900da2bcc14001874cb0700319e1e2300c17cd61100d0684c05007c4b951f000859681e00ce62340d0021f48512009046c219008710c503002c340815002eaa701740b3357a1a00e6d3420800f0dfe2040080a95b0e004e5b480a107012321840438b4b24008a3266281043e2f6011056328a1d00ec53cd0f006e69fa1000ac8cde2600f2c1681300b8577627103fa0c82000c6ff51",
          "id": 54635,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "hexString",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "2631:483:77",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_4ad238e5af1bb631fe317fd072788f212e18660a468dbe38a1fee483610dae1c",
            "typeString": "literal_string hex\"010f00c20804b001180500014014144080040101008082020092020040a100148024163082aae700108f616d2200e3c6181b0025fdfc2100a1cef21c00e7762b2500229a7e0b103e260a0600ce656d0220f12be70c0035f0270900da2bcc14001874cb0700319e1e2300c17cd61100d0684c05007c4b951f000859681e00ce62340d0021f48512009046c219008710c503002c340815002eaa701740b3357a1a00e6d3420800f0dfe2040080a95b0e004e5b480a107012321840438b4b24008a3266281043e2f6011056328a1d00ec53cd0f006e69fa1000ac8cde2600f2c1681300b8577627103fa0c82000c6ff51\""
          }
        },
        "visibility": "internal"
      },
      {
        "id": 54643,
        "nodeType": "StructDefinition",
        "src": "3406:129:77",
        "nodes": [],
        "canonicalName": "RainterpreterExpressionDeployerConstructionConfig",
        "members": [
          {
            "constant": false,
            "id": 54638,
            "mutability": "mutable",
            "name": "interpreter",
            "nameLocation": "3477:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 54643,
            "src": "3469:19:77",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54637,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3469:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54640,
            "mutability": "mutable",
            "name": "store",
            "nameLocation": "3502:5:77",
            "nodeType": "VariableDeclaration",
            "scope": 54643,
            "src": "3494:13:77",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54639,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3494:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54642,
            "mutability": "mutable",
            "name": "authoringMeta",
            "nameLocation": "3519:13:77",
            "nodeType": "VariableDeclaration",
            "scope": 54643,
            "src": "3513:19:77",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 54641,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "3513:5:77",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "RainterpreterExpressionDeployerConstructionConfig",
        "nameLocation": "3413:49:77",
        "scope": 55040,
        "visibility": "public"
      },
      {
        "id": 55039,
        "nodeType": "ContractDefinition",
        "src": "3758:7282:77",
        "nodes": [
          {
            "id": 54656,
            "nodeType": "UsingForDirective",
            "src": "3879:29:77",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54653,
              "name": "LibPointer",
              "nameLocations": [
                "3885:10:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53536,
              "src": "3885:10:77"
            },
            "typeName": {
              "id": 54655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54654,
                "name": "Pointer",
                "nameLocations": [
                  "3900:7:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53416,
                "src": "3900:7:77"
              },
              "referencedDeclaration": 53416,
              "src": "3900:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 54660,
            "nodeType": "UsingForDirective",
            "src": "3913:34:77",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54657,
              "name": "LibStackPointer",
              "nameLocations": [
                "3919:15:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53699,
              "src": "3919:15:77"
            },
            "typeName": {
              "id": 54659,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54658,
                "name": "Pointer",
                "nameLocations": [
                  "3939:7:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53416,
                "src": "3939:7:77"
              },
              "referencedDeclaration": 53416,
              "src": "3939:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 54664,
            "nodeType": "UsingForDirective",
            "src": "3952:36:77",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 54661,
              "name": "LibUint256Array",
              "nameLocations": [
                "3958:15:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53927,
              "src": "3958:15:77"
            },
            "typeName": {
              "baseType": {
                "id": 54662,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3978:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 54663,
              "nodeType": "ArrayTypeName",
              "src": "3978:9:77",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 54677,
            "nodeType": "EventDefinition",
            "src": "4371:95:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 54665,
              "nodeType": "StructuredDocumentation",
              "src": "3994:372:77",
              "text": "The config of the deployed expression including uncompiled sources. Will\n only be emitted after the config passes the integrity check.\n @param sender The caller of `deployExpression`.\n @param bytecode As per `IExpressionDeployerV2`.\n @param constants As per `IExpressionDeployerV2`.\n @param minOutputs As per `IExpressionDeployerV2`."
            },
            "eventSelector": "4a48f556905d90b4a58742999556994182322843167010b59bf8149724db51cf",
            "name": "NewExpression",
            "nameLocation": "4377:13:77",
            "parameters": {
              "id": 54676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54667,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4399:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54677,
                  "src": "4391:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54669,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "4413:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54677,
                  "src": "4407:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54668,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4407:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54672,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constants",
                  "nameLocation": "4433:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54677,
                  "src": "4423:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54670,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4423:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54671,
                    "nodeType": "ArrayTypeName",
                    "src": "4423:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54675,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minOutputs",
                  "nameLocation": "4454:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54677,
                  "src": "4444:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54673,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4444:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54674,
                    "nodeType": "ArrayTypeName",
                    "src": "4444:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4390:75:77"
            }
          },
          {
            "id": 54684,
            "nodeType": "EventDefinition",
            "src": "4767:60:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 54678,
              "nodeType": "StructuredDocumentation",
              "src": "4472:290:77",
              "text": "The address of the deployed expression. Will only be emitted once the\n expression can be loaded and deserialized into an evaluable interpreter\n state.\n @param sender The caller of `deployExpression`.\n @param expression The address of the deployed expression."
            },
            "eventSelector": "ce6e4a4a7b561c65155990775d2faf8a581292f97859ce67e366fd53686b31f1",
            "name": "ExpressionAddress",
            "nameLocation": "4773:17:77",
            "parameters": {
              "id": 54683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4799:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54684,
                  "src": "4791:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4791:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54682,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "expression",
                  "nameLocation": "4815:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54684,
                  "src": "4807:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4807:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4790:36:77"
            }
          },
          {
            "id": 54688,
            "nodeType": "VariableDeclaration",
            "src": "4924:44:77",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 54685,
              "nodeType": "StructuredDocumentation",
              "src": "4833:86:77",
              "text": "The interpreter with known bytecode that this deployer is constructed\n for."
            },
            "functionSelector": "f0cfdd37",
            "mutability": "immutable",
            "name": "iInterpreter",
            "nameLocation": "4956:12:77",
            "scope": 55039,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
              "typeString": "contract IInterpreterV1"
            },
            "typeName": {
              "id": 54687,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54686,
                "name": "IInterpreterV1",
                "nameLocations": [
                  "4924:14:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55901,
                "src": "4924:14:77"
              },
              "referencedDeclaration": 55901,
              "src": "4924:14:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                "typeString": "contract IInterpreterV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54692,
            "nodeType": "VariableDeclaration",
            "src": "5051:43:77",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 54689,
              "nodeType": "StructuredDocumentation",
              "src": "4974:72:77",
              "text": "The store with known bytecode that this deployer is constructed for."
            },
            "functionSelector": "c19423bc",
            "mutability": "immutable",
            "name": "iStore",
            "nameLocation": "5088:6:77",
            "scope": 55039,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
              "typeString": "contract IInterpreterStoreV1"
            },
            "typeName": {
              "id": 54691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54690,
                "name": "IInterpreterStoreV1",
                "nameLocations": [
                  "5051:19:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55851,
                "src": "5051:19:77"
              },
              "referencedDeclaration": 55851,
              "src": "5051:19:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                "typeString": "contract IInterpreterStoreV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54821,
            "nodeType": "FunctionDefinition",
            "src": "5101:2271:77",
            "nodes": [],
            "body": {
              "id": 54820,
              "nodeType": "Block",
              "src": "5178:2194:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54700,
                      "mutability": "mutable",
                      "name": "interpreter",
                      "nameLocation": "5234:11:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "5219:26:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                        "typeString": "contract IInterpreterV1"
                      },
                      "typeName": {
                        "id": 54699,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54698,
                          "name": "IInterpreterV1",
                          "nameLocations": [
                            "5219:14:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55901,
                          "src": "5219:14:77"
                        },
                        "referencedDeclaration": 55901,
                        "src": "5219:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                          "typeString": "contract IInterpreterV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54705,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54702,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54695,
                          "src": "5263:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerConstructionConfig memory"
                          }
                        },
                        "id": 54703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5270:11:77",
                        "memberName": "interpreter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54638,
                        "src": "5263:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54701,
                      "name": "IInterpreterV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55901,
                      "src": "5248:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IInterpreterV1_$55901_$",
                        "typeString": "type(contract IInterpreterV1)"
                      }
                    },
                    "id": 54704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5248:34:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                      "typeString": "contract IInterpreterV1"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5219:63:77"
                },
                {
                  "assignments": [
                    54708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54708,
                      "mutability": "mutable",
                      "name": "store",
                      "nameLocation": "5312:5:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "5292:25:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                        "typeString": "contract IInterpreterStoreV1"
                      },
                      "typeName": {
                        "id": 54707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54706,
                          "name": "IInterpreterStoreV1",
                          "nameLocations": [
                            "5292:19:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55851,
                          "src": "5292:19:77"
                        },
                        "referencedDeclaration": 55851,
                        "src": "5292:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54713,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54710,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54695,
                          "src": "5340:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerConstructionConfig memory"
                          }
                        },
                        "id": 54711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5347:5:77",
                        "memberName": "store",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54640,
                        "src": "5340:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54709,
                      "name": "IInterpreterStoreV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55851,
                      "src": "5320:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IInterpreterStoreV1_$55851_$",
                        "typeString": "type(contract IInterpreterStoreV1)"
                      }
                    },
                    "id": 54712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5320:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5292:61:77"
                },
                {
                  "expression": {
                    "id": 54716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54714,
                      "name": "iInterpreter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54688,
                      "src": "5363:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                        "typeString": "contract IInterpreterV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54715,
                      "name": "interpreter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54700,
                      "src": "5378:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                        "typeString": "contract IInterpreterV1"
                      }
                    },
                    "src": "5363:26:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                      "typeString": "contract IInterpreterV1"
                    }
                  },
                  "id": 54717,
                  "nodeType": "ExpressionStatement",
                  "src": "5363:26:77"
                },
                {
                  "expression": {
                    "id": 54720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54718,
                      "name": "iStore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54692,
                      "src": "5399:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                        "typeString": "contract IInterpreterStoreV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54719,
                      "name": "store",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54708,
                      "src": "5408:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                        "typeString": "contract IInterpreterStoreV1"
                      }
                    },
                    "src": "5399:14:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "id": 54721,
                  "nodeType": "ExpressionStatement",
                  "src": "5399:14:77"
                },
                {
                  "assignments": [
                    54723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54723,
                      "mutability": "mutable",
                      "name": "functionPointers",
                      "nameLocation": "5583:16:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "5570:29:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54722,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5570:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54727,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 54724,
                        "name": "interpreter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54700,
                        "src": "5602:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                          "typeString": "contract IInterpreterV1"
                        }
                      },
                      "id": 54725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5614:16:77",
                      "memberName": "functionPointers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55877,
                      "src": "5602:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view external returns (bytes memory)"
                      }
                    },
                    "id": 54726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5602:30:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5570:62:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 54729,
                          "name": "functionPointers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54723,
                          "src": "5656:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 54728,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5646:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5646:27:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 54732,
                          "name": "OPCODE_FUNCTION_POINTERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55222,
                          "src": "5687:24:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 54731,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "5677:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 54733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5677:35:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5646:66:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54740,
                  "nodeType": "IfStatement",
                  "src": "5642:140:77",
                  "trueBody": {
                    "id": 54739,
                    "nodeType": "Block",
                    "src": "5714:68:77",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54736,
                              "name": "functionPointers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54723,
                              "src": "5754:16:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 54735,
                            "name": "UnexpectedPointers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54593,
                            "src": "5735:18:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) pure"
                            }
                          },
                          "id": 54737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5735:36:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54738,
                        "nodeType": "RevertStatement",
                        "src": "5728:43:77"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54742,
                      "mutability": "mutable",
                      "name": "interpreterHash",
                      "nameLocation": "5862:15:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "5854:23:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54741,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5854:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54743,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5854:23:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5912:67:77",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5926:43:77",
                        "value": {
                          "arguments": [
                            {
                              "name": "interpreter",
                              "nodeType": "YulIdentifier",
                              "src": "5957:11:77"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "5945:11:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5945:24:77"
                        },
                        "variableNames": [
                          {
                            "name": "interpreterHash",
                            "nodeType": "YulIdentifier",
                            "src": "5926:15:77"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 54700,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5957:11:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 54742,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5926:15:77",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 54744,
                  "nodeType": "InlineAssembly",
                  "src": "5887:92:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54745,
                      "name": "interpreterHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54742,
                      "src": "5992:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54746,
                      "name": "INTERPRETER_BYTECODE_HASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54619,
                      "src": "6011:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5992:44:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54753,
                  "nodeType": "IfStatement",
                  "src": "5988:247:77",
                  "trueBody": {
                    "id": 54752,
                    "nodeType": "Block",
                    "src": "6038:197:77",
                    "statements": [
                      {
                        "documentation": "THIS IS NOT A SECURITY CHECK. IT IS AN INTEGRITY CHECK TO PREVENT\n HONEST MISTAKES.",
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54749,
                              "name": "interpreterHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54742,
                              "src": "6208:15:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 54748,
                            "name": "UnexpectedInterpreterBytecodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54598,
                            "src": "6174:33:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 54750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6174:50:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54751,
                        "nodeType": "RevertStatement",
                        "src": "6167:57:77"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54755,
                      "mutability": "mutable",
                      "name": "storeHash",
                      "nameLocation": "6310:9:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "6302:17:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54754,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6302:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54756,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6302:17:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6354:55:77",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6368:31:77",
                        "value": {
                          "arguments": [
                            {
                              "name": "store",
                              "nodeType": "YulIdentifier",
                              "src": "6393:5:77"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "6381:11:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6381:18:77"
                        },
                        "variableNames": [
                          {
                            "name": "storeHash",
                            "nodeType": "YulIdentifier",
                            "src": "6368:9:77"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 54708,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6393:5:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 54755,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6368:9:77",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 54757,
                  "nodeType": "InlineAssembly",
                  "src": "6329:80:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54758,
                      "name": "storeHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54755,
                      "src": "6422:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54759,
                      "name": "STORE_BYTECODE_HASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54626,
                      "src": "6435:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6422:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54766,
                  "nodeType": "IfStatement",
                  "src": "6418:223:77",
                  "trueBody": {
                    "id": 54765,
                    "nodeType": "Block",
                    "src": "6456:185:77",
                    "statements": [
                      {
                        "documentation": "THIS IS NOT A SECURITY CHECK. IT IS AN INTEGRITY CHECK TO PREVENT\n HONEST MISTAKES.",
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54762,
                              "name": "storeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54755,
                              "src": "6620:9:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 54761,
                            "name": "UnexpectedStoreBytecodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54603,
                            "src": "6592:27:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 54763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6592:38:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54764,
                        "nodeType": "RevertStatement",
                        "src": "6585:45:77"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54769,
                      "mutability": "mutable",
                      "name": "configAuthoringMetaHash",
                      "nameLocation": "6884:23:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54820,
                      "src": "6876:31:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54768,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6876:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "This IS a security check. This prevents someone making an exact\n bytecode copy of the interpreter and shipping different meta for\n the copy to lie about what each op does in the interpreter.",
                  "id": 54774,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54771,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54695,
                          "src": "6920:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerConstructionConfig memory"
                          }
                        },
                        "id": 54772,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6927:13:77",
                        "memberName": "authoringMeta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54642,
                        "src": "6920:20:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54770,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6910:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 54773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6910:31:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6876:65:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54775,
                      "name": "configAuthoringMetaHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54769,
                      "src": "6955:23:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54776,
                      "name": "AUTHORING_META_HASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54633,
                      "src": "6982:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6955:46:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54783,
                  "nodeType": "IfStatement",
                  "src": "6951:129:77",
                  "trueBody": {
                    "id": 54782,
                    "nodeType": "Block",
                    "src": "7003:77:77",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54779,
                              "name": "configAuthoringMetaHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54769,
                              "src": "7045:23:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 54778,
                            "name": "UnexpectedOpMetaHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54608,
                            "src": "7024:20:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 54780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7024:45:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54781,
                        "nodeType": "RevertStatement",
                        "src": "7017:52:77"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54785,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7103:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7107:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7103:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54789,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7123:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          ],
                          "id": 54788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7115:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7115:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7115:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54793,
                            "name": "interpreter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54700,
                            "src": "7138:11:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                              "typeString": "contract IInterpreterV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                              "typeString": "contract IInterpreterV1"
                            }
                          ],
                          "id": 54792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7130:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7130:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7130:20:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54797,
                            "name": "store",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54708,
                            "src": "7160:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                              "typeString": "contract IInterpreterStoreV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                              "typeString": "contract IInterpreterStoreV1"
                            }
                          ],
                          "id": 54796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7152:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7152:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7152:14:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 54799,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54695,
                          "src": "7168:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerConstructionConfig memory"
                          }
                        },
                        "id": 54800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7175:13:77",
                        "memberName": "authoringMeta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54642,
                        "src": "7168:20:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54784,
                      "name": "DISpair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56001,
                      "src": "7095:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,bytes memory)"
                      }
                    },
                    "id": 54801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7095:94:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54802,
                  "nodeType": "EmitStatement",
                  "src": "7090:99:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54808,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7263:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          ],
                          "id": 54807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7255:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54806,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7255:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7255:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54812,
                            "name": "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55987,
                            "src": "7302:37:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 54810,
                            "name": "IERC1820_REGISTRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52191,
                            "src": "7270:17:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1820Registry_$52181",
                              "typeString": "contract IERC1820Registry"
                            }
                          },
                          "id": 54811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7288:13:77",
                          "memberName": "interfaceHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52152,
                          "src": "7270:31:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure external returns (bytes32)"
                          }
                        },
                        "id": 54813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7270:70:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54816,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7350:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNP_$55039",
                              "typeString": "contract RainterpreterExpressionDeployerNP"
                            }
                          ],
                          "id": 54815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7342:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7342:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7342:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 54803,
                        "name": "IERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52191,
                        "src": "7200:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$52181",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 54805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7218:23:77",
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52134,
                      "src": "7200:41:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 54818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:165:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54819,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:165:77"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54695,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "5170:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54821,
                  "src": "5113:63:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_memory_ptr",
                    "typeString": "struct RainterpreterExpressionDeployerConstructionConfig"
                  },
                  "typeName": {
                    "id": 54694,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54693,
                      "name": "RainterpreterExpressionDeployerConstructionConfig",
                      "nameLocations": [
                        "5113:49:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54643,
                      "src": "5113:49:77"
                    },
                    "referencedDeclaration": 54643,
                    "src": "5113:49:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerConstructionConfig_$54643_storage_ptr",
                      "typeString": "struct RainterpreterExpressionDeployerConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5112:65:77"
            },
            "returnParameters": {
              "id": 54697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:77"
            },
            "scope": 55039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54844,
            "nodeType": "FunctionDefinition",
            "src": "7405:216:77",
            "nodes": [],
            "body": {
              "id": 54843,
              "nodeType": "Block",
              "src": "7497:124:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 54841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 54834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 54829,
                        "name": "interfaceId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54823,
                        "src": "7514:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54831,
                              "name": "IExpressionDeployerV2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56022,
                              "src": "7535:21:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IExpressionDeployerV2_$56022_$",
                                "typeString": "type(contract IExpressionDeployerV2)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IExpressionDeployerV2_$56022_$",
                                "typeString": "type(contract IExpressionDeployerV2)"
                              }
                            ],
                            "id": 54830,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7530:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7530:27:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IExpressionDeployerV2_$56022",
                            "typeString": "type(contract IExpressionDeployerV2)"
                          }
                        },
                        "id": 54833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7558:11:77",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "7530:39:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "7514:55:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 54840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 54835,
                        "name": "interfaceId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54823,
                        "src": "7573:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54837,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43965,
                              "src": "7594:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$43965_$",
                                "typeString": "type(contract IERC165)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$43965_$",
                                "typeString": "type(contract IERC165)"
                              }
                            ],
                            "id": 54836,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7589:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7589:13:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$43965",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 54839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7603:11:77",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "7589:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "7573:41:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7514:100:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 54828,
                  "id": 54842,
                  "nodeType": "Return",
                  "src": "7507:107:77"
                }
              ]
            },
            "baseFunctions": [
              43952
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "7414:17:77",
            "overrides": {
              "id": 54825,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7473:8:77"
            },
            "parameters": {
              "id": 54824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54823,
                  "mutability": "mutable",
                  "name": "interfaceId_",
                  "nameLocation": "7439:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54844,
                  "src": "7432:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 54822,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7432:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7431:21:77"
            },
            "returnParameters": {
              "id": 54828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54844,
                  "src": "7491:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54826,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7490:6:77"
            },
            "scope": 55039,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 54854,
            "nodeType": "FunctionDefinition",
            "src": "7657:121:77",
            "nodes": [],
            "body": {
              "id": 54853,
              "nodeType": "Block",
              "src": "7735:43:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54851,
                    "name": "AUTHORING_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54633,
                    "src": "7752:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 54850,
                  "id": 54852,
                  "nodeType": "Return",
                  "src": "7745:26:77"
                }
              ]
            },
            "baseFunctions": [
              56038
            ],
            "documentation": {
              "id": 54845,
              "nodeType": "StructuredDocumentation",
              "src": "7627:25:77",
              "text": "@inheritdoc IParserV1"
            },
            "functionSelector": "b6c7175a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authoringMetaHash",
            "nameLocation": "7666:17:77",
            "overrides": {
              "id": 54847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7708:8:77"
            },
            "parameters": {
              "id": 54846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7683:2:77"
            },
            "returnParameters": {
              "id": 54850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54854,
                  "src": "7726:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7726:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7725:9:77"
            },
            "scope": 55039,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 54899,
            "nodeType": "FunctionDefinition",
            "src": "7814:481:77",
            "nodes": [],
            "body": {
              "id": 54898,
              "nodeType": "Block",
              "src": "7920:375:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54864,
                      "mutability": "mutable",
                      "name": "inputAuthoringMetaHash",
                      "nameLocation": "7938:22:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54898,
                      "src": "7930:30:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54863,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7930:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54868,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54866,
                        "name": "authoringMeta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54857,
                        "src": "7973:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 54865,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7963:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 54867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7963:24:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7930:57:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 54871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54869,
                      "name": "inputAuthoringMetaHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54864,
                      "src": "8001:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 54870,
                      "name": "AUTHORING_META_HASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54633,
                      "src": "8027:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8001:45:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54878,
                  "nodeType": "IfStatement",
                  "src": "7997:153:77",
                  "trueBody": {
                    "id": 54877,
                    "nodeType": "Block",
                    "src": "8048:102:77",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 54873,
                              "name": "AUTHORING_META_HASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54633,
                              "src": "8095:19:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 54874,
                              "name": "inputAuthoringMetaHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54864,
                              "src": "8116:22:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 54872,
                            "name": "AuthoringMetaHashMismatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56032,
                            "src": "8069:25:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) pure"
                            }
                          },
                          "id": 54875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8069:70:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54876,
                        "nodeType": "RevertStatement",
                        "src": "8062:77:77"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    54883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54883,
                      "mutability": "mutable",
                      "name": "words",
                      "nameLocation": "8182:5:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 54898,
                      "src": "8159:28:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AuthoringMeta[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54881,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 54880,
                            "name": "AuthoringMeta",
                            "nameLocations": [
                              "8159:13:77"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 70815,
                            "src": "8159:13:77"
                          },
                          "referencedDeclaration": 70815,
                          "src": "8159:13:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthoringMeta_$70815_storage_ptr",
                            "typeString": "struct AuthoringMeta"
                          }
                        },
                        "id": 54882,
                        "nodeType": "ArrayTypeName",
                        "src": "8159:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthoringMeta_$70815_storage_$dyn_storage_ptr",
                          "typeString": "struct AuthoringMeta[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54891,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54886,
                        "name": "authoringMeta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54857,
                        "src": "8201:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 54887,
                              "name": "AuthoringMeta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70815,
                              "src": "8217:13:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_AuthoringMeta_$70815_storage_ptr_$",
                                "typeString": "type(struct AuthoringMeta storage pointer)"
                              }
                            },
                            "id": 54888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8217:15:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct AuthoringMeta memory[] memory)"
                            }
                          }
                        ],
                        "id": 54889,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8216:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct AuthoringMeta memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct AuthoringMeta memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 54884,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8190:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8194:6:77",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "8190:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 54890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8190:44:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AuthoringMeta memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8159:75:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54894,
                        "name": "words",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54883,
                        "src": "8279:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthoringMeta memory[] memory"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 54895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8286:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthoringMeta memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 54892,
                        "name": "LibParseMeta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71511,
                        "src": "8251:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibParseMeta_$71511_$",
                          "typeString": "type(library LibParseMeta)"
                        }
                      },
                      "id": 54893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8264:14:77",
                      "memberName": "buildParseMeta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71341,
                      "src": "8251:27:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AuthoringMeta_$70815_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct AuthoringMeta memory[] memory,uint8) pure returns (bytes memory)"
                      }
                    },
                    "id": 54896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8251:37:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 54862,
                  "id": 54897,
                  "nodeType": "Return",
                  "src": "8244:44:77"
                }
              ]
            },
            "baseFunctions": [
              56046
            ],
            "documentation": {
              "id": 54855,
              "nodeType": "StructuredDocumentation",
              "src": "7784:25:77",
              "text": "@inheritdoc IParserV1"
            },
            "functionSelector": "a600bd0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buildParseMeta",
            "nameLocation": "7823:14:77",
            "overrides": {
              "id": 54859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7888:8:77"
            },
            "parameters": {
              "id": 54858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54857,
                  "mutability": "mutable",
                  "name": "authoringMeta",
                  "nameLocation": "7851:13:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "7838:26:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7838:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7837:28:77"
            },
            "returnParameters": {
              "id": 54862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54861,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54899,
                  "src": "7906:12:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7906:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7905:14:77"
            },
            "scope": 55039,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 54909,
            "nodeType": "FunctionDefinition",
            "src": "8331:107:77",
            "nodes": [],
            "body": {
              "id": 54908,
              "nodeType": "Block",
              "src": "8404:34:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54906,
                    "name": "PARSE_META",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54636,
                    "src": "8421:10:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 54905,
                  "id": 54907,
                  "nodeType": "Return",
                  "src": "8414:17:77"
                }
              ]
            },
            "baseFunctions": [
              56052
            ],
            "documentation": {
              "id": 54900,
              "nodeType": "StructuredDocumentation",
              "src": "8301:25:77",
              "text": "@inheritdoc IParserV1"
            },
            "functionSelector": "ffc25704",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseMeta",
            "nameLocation": "8340:9:77",
            "overrides": {
              "id": 54902,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8372:8:77"
            },
            "parameters": {
              "id": 54901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8349:2:77"
            },
            "returnParameters": {
              "id": 54905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54909,
                  "src": "8390:12:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54903,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8390:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8389:14:77"
            },
            "scope": 55039,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 54929,
            "nodeType": "FunctionDefinition",
            "src": "8474:289:77",
            "nodes": [],
            "body": {
              "id": 54928,
              "nodeType": "Block",
              "src": "8580:183:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54923,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54912,
                        "src": "8738:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 54924,
                          "name": "parseMeta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54909,
                          "src": "8744:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 54925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8744:11:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 54921,
                        "name": "LibParse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67447,
                        "src": "8723:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibParse_$67447_$",
                          "typeString": "type(library LibParse)"
                        }
                      },
                      "id": 54922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8732:5:77",
                      "memberName": "parse",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67446,
                      "src": "8723:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory) pure returns (bytes memory,uint256[] memory)"
                      }
                    },
                    "id": 54926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8723:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 54920,
                  "id": 54927,
                  "nodeType": "Return",
                  "src": "8716:40:77"
                }
              ]
            },
            "baseFunctions": [
              56063
            ],
            "documentation": {
              "id": 54910,
              "nodeType": "StructuredDocumentation",
              "src": "8444:25:77",
              "text": "@inheritdoc IParserV1"
            },
            "functionSelector": "fab4087a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parse",
            "nameLocation": "8483:5:77",
            "overrides": {
              "id": 54914,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8530:8:77"
            },
            "parameters": {
              "id": 54913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54912,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8502:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54929,
                  "src": "8489:17:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54911,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8488:19:77"
            },
            "returnParameters": {
              "id": 54920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54929,
                  "src": "8548:12:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54915,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54929,
                  "src": "8562:16:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54917,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8562:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54918,
                    "nodeType": "ArrayTypeName",
                    "src": "8562:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8547:32:77"
            },
            "scope": 55039,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 55005,
            "nodeType": "FunctionDefinition",
            "src": "8811:1006:77",
            "nodes": [],
            "body": {
              "id": 55004,
              "nodeType": "Block",
              "src": "9001:816:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54950,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54932,
                        "src": "9026:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 54951,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54935,
                        "src": "9036:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 54952,
                        "name": "minOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54938,
                        "src": "9047:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 54949,
                      "name": "integrityCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55027,
                      "src": "9011:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,uint256[] memory,uint256[] memory) view"
                      }
                    },
                    "id": 54953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9011:47:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54954,
                  "nodeType": "ExpressionStatement",
                  "src": "9011:47:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54956,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9088:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9092:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9088:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54958,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54932,
                        "src": "9100:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 54959,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54935,
                        "src": "9110:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 54960,
                        "name": "minOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54938,
                        "src": "9121:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 54955,
                      "name": "NewExpression",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54677,
                      "src": "9074:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 54961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9074:58:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54962,
                  "nodeType": "EmitStatement",
                  "src": "9069:63:77"
                },
                {
                  "assignments": [
                    54965,
                    54968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54965,
                      "mutability": "mutable",
                      "name": "container",
                      "nameLocation": "9172:9:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 55004,
                      "src": "9144:37:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$51984",
                        "typeString": "DataContractMemoryContainer"
                      },
                      "typeName": {
                        "id": 54964,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54963,
                          "name": "DataContractMemoryContainer",
                          "nameLocations": [
                            "9144:27:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51984,
                          "src": "9144:27:77"
                        },
                        "referencedDeclaration": 51984,
                        "src": "9144:27:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$51984",
                          "typeString": "DataContractMemoryContainer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54968,
                      "mutability": "mutable",
                      "name": "pointer",
                      "nameLocation": "9191:7:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 55004,
                      "src": "9183:15:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 54967,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54966,
                          "name": "Pointer",
                          "nameLocations": [
                            "9183:7:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53416,
                          "src": "9183:7:77"
                        },
                        "referencedDeclaration": 53416,
                        "src": "9183:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54977,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54973,
                            "name": "bytecode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54932,
                            "src": "9293:8:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 54974,
                            "name": "constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54935,
                            "src": "9303:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 54971,
                            "name": "LibInterpreterStateDataContractNP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72616,
                            "src": "9243:33:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibInterpreterStateDataContractNP_$72616_$",
                              "typeString": "type(library LibInterpreterStateDataContractNP)"
                            }
                          },
                          "id": 54972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9277:15:77",
                          "memberName": "serializeSizeNP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72526,
                          "src": "9243:49:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory,uint256[] memory) pure returns (uint256)"
                          }
                        },
                        "id": 54975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9243:70:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54969,
                        "name": "LibDataContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52091,
                        "src": "9214:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDataContract_$52091_$",
                          "typeString": "type(library LibDataContract)"
                        }
                      },
                      "id": 54970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9230:12:77",
                      "memberName": "newContainer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52008,
                      "src": "9214:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_userDefinedValueType$_DataContractMemoryContainer_$51984_$_t_userDefinedValueType$_Pointer_$53416_$",
                        "typeString": "function (uint256) pure returns (DataContractMemoryContainer,Pointer)"
                      }
                    },
                    "id": 54976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9214:100:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_DataContractMemoryContainer_$51984_$_t_userDefinedValueType$_Pointer_$53416_$",
                      "typeString": "tuple(DataContractMemoryContainer,Pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9143:171:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54981,
                        "name": "pointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54968,
                        "src": "9488:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                          "typeString": "Pointer"
                        }
                      },
                      {
                        "id": 54982,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54932,
                        "src": "9497:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 54983,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54935,
                        "src": "9507:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53416",
                          "typeString": "Pointer"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 54978,
                        "name": "LibInterpreterStateDataContractNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72616,
                        "src": "9436:33:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibInterpreterStateDataContractNP_$72616_$",
                          "typeString": "type(library LibInterpreterStateDataContractNP)"
                        }
                      },
                      "id": 54980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9470:17:77",
                      "memberName": "unsafeSerializeNP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72553,
                      "src": "9436:51:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$53416_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (Pointer,bytes memory,uint256[] memory) pure"
                      }
                    },
                    "id": 54984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:81:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54985,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:81:77"
                },
                {
                  "assignments": [
                    54987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54987,
                      "mutability": "mutable",
                      "name": "expression",
                      "nameLocation": "9589:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 55004,
                      "src": "9581:18:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 54986,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9581:7:77",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54992,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54990,
                        "name": "container",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54965,
                        "src": "9624:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$51984",
                          "typeString": "DataContractMemoryContainer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$51984",
                          "typeString": "DataContractMemoryContainer"
                        }
                      ],
                      "expression": {
                        "id": 54988,
                        "name": "LibDataContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52091,
                        "src": "9602:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDataContract_$52091_$",
                          "typeString": "type(library LibDataContract)"
                        }
                      },
                      "id": 54989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9618:5:77",
                      "memberName": "write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52038,
                      "src": "9602:21:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_DataContractMemoryContainer_$51984_$returns$_t_address_$",
                        "typeString": "function (DataContractMemoryContainer) returns (address)"
                      }
                    },
                    "id": 54991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9602:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9581:53:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54994,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9735:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9739:6:77",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9735:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54996,
                        "name": "expression",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54987,
                        "src": "9747:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54993,
                      "name": "ExpressionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54684,
                      "src": "9717:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 54997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9717:41:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54998,
                  "nodeType": "EmitStatement",
                  "src": "9712:46:77"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 54999,
                        "name": "iInterpreter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54688,
                        "src": "9777:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                          "typeString": "contract IInterpreterV1"
                        }
                      },
                      {
                        "id": 55000,
                        "name": "iStore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54692,
                        "src": "9791:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      {
                        "id": 55001,
                        "name": "expression",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54987,
                        "src": "9799:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 55002,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9776:34:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IInterpreterV1_$55901_$_t_contract$_IInterpreterStoreV1_$55851_$_t_address_$",
                      "typeString": "tuple(contract IInterpreterV1,contract IInterpreterStoreV1,address)"
                    }
                  },
                  "functionReturnParameters": 54948,
                  "id": 55003,
                  "nodeType": "Return",
                  "src": "9769:41:77"
                }
              ]
            },
            "baseFunctions": [
              56021
            ],
            "documentation": {
              "id": 54930,
              "nodeType": "StructuredDocumentation",
              "src": "8769:37:77",
              "text": "@inheritdoc IExpressionDeployerV2"
            },
            "functionSelector": "31a66b65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployExpression",
            "nameLocation": "8820:16:77",
            "parameters": {
              "id": 54939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54932,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "8850:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8837:21:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54931,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54935,
                  "mutability": "mutable",
                  "name": "constants",
                  "nameLocation": "8877:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8860:26:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54933,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8860:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54934,
                    "nodeType": "ArrayTypeName",
                    "src": "8860:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54938,
                  "mutability": "mutable",
                  "name": "minOutputs",
                  "nameLocation": "8905:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8888:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 54936,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8888:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54937,
                    "nodeType": "ArrayTypeName",
                    "src": "8888:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8836:80:77"
            },
            "returnParameters": {
              "id": 54948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8951:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                    "typeString": "contract IInterpreterV1"
                  },
                  "typeName": {
                    "id": 54941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54940,
                      "name": "IInterpreterV1",
                      "nameLocations": [
                        "8951:14:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55901,
                      "src": "8951:14:77"
                    },
                    "referencedDeclaration": 55901,
                    "src": "8951:14:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV1_$55901",
                      "typeString": "contract IInterpreterV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54945,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8967:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                    "typeString": "contract IInterpreterStoreV1"
                  },
                  "typeName": {
                    "id": 54944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54943,
                      "name": "IInterpreterStoreV1",
                      "nameLocations": [
                        "8967:19:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55851,
                      "src": "8967:19:77"
                    },
                    "referencedDeclaration": 55851,
                    "src": "8967:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$55851",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55005,
                  "src": "8988:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8988:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8950:46:77"
            },
            "scope": 55039,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55027,
            "nodeType": "FunctionDefinition",
            "src": "9870:249:77",
            "nodes": [],
            "body": {
              "id": 55026,
              "nodeType": "Block",
              "src": "10006:113:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55020,
                        "name": "INTEGRITY_FUNCTION_POINTERS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54612,
                        "src": "10051:27:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55021,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55008,
                        "src": "10080:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55022,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55011,
                        "src": "10090:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 55023,
                        "name": "minOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55014,
                        "src": "10101:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 55017,
                        "name": "LibIntegrityCheckNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57769,
                        "src": "10016:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibIntegrityCheckNP_$57769_$",
                          "typeString": "type(library LibIntegrityCheckNP)"
                        }
                      },
                      "id": 55019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10036:14:77",
                      "memberName": "integrityCheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57768,
                      "src": "10016:34:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,uint256[] memory,uint256[] memory) view"
                      }
                    },
                    "id": 55024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10016:96:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55025,
                  "nodeType": "ExpressionStatement",
                  "src": "10016:96:77"
                }
              ]
            },
            "baseFunctions": [
              55946
            ],
            "documentation": {
              "id": 55006,
              "nodeType": "StructuredDocumentation",
              "src": "9823:42:77",
              "text": "@inheritdoc IDebugExpressionDeployerV2"
            },
            "functionSelector": "cbb7d173",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "integrityCheck",
            "nameLocation": "9879:14:77",
            "parameters": {
              "id": 55015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55008,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "9907:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "9894:21:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9894:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55011,
                  "mutability": "mutable",
                  "name": "constants",
                  "nameLocation": "9934:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "9917:26:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55009,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9917:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55010,
                    "nodeType": "ArrayTypeName",
                    "src": "9917:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55014,
                  "mutability": "mutable",
                  "name": "minOutputs",
                  "nameLocation": "9962:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 55027,
                  "src": "9945:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55012,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9945:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55013,
                    "nodeType": "ArrayTypeName",
                    "src": "9945:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9893:80:77"
            },
            "returnParameters": {
              "id": 55016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10006:0:77"
            },
            "scope": 55039,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55038,
            "nodeType": "FunctionDefinition",
            "src": "10885:153:77",
            "nodes": [],
            "body": {
              "id": 55037,
              "nodeType": "Block",
              "src": "10967:71:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55033,
                        "name": "LibAllStandardOpsNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59802,
                        "src": "10984:19:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibAllStandardOpsNP_$59802_$",
                          "typeString": "type(library LibAllStandardOpsNP)"
                        }
                      },
                      "id": 55034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11004:25:77",
                      "memberName": "integrityFunctionPointers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59642,
                      "src": "10984:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 55035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10984:47:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 55032,
                  "id": 55036,
                  "nodeType": "Return",
                  "src": "10977:54:77"
                }
              ]
            },
            "documentation": {
              "id": 55028,
              "nodeType": "StructuredDocumentation",
              "src": "10125:755:77",
              "text": "Defines all the function pointers to integrity checks. This is the\n expression deployer's equivalent of the opcode function pointers and\n follows a near identical dispatch process. These are never compiled into\n source and are instead indexed into directly by the integrity check. The\n indexing into integrity pointers (which has an out of bounds check) is a\n proxy for enforcing that all opcode pointers exist at runtime, so the\n length of the integrity pointers MUST match the length of opcode function\n pointers. This function is `virtual` so that it can be overridden\n pairwise with overrides to `functionPointers` on `Rainterpreter`.\n @return The list of integrity function pointers."
            },
            "functionSelector": "8d614591",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "integrityFunctionPointers",
            "nameLocation": "10894:25:77",
            "parameters": {
              "id": 55029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10919:2:77"
            },
            "returnParameters": {
              "id": 55032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55038,
                  "src": "10953:12:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55030,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10953:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10952:14:77"
            },
            "scope": 55039,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54645,
              "name": "IExpressionDeployerV2",
              "nameLocations": [
                "3804:21:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56022,
              "src": "3804:21:77"
            },
            "id": 54646,
            "nodeType": "InheritanceSpecifier",
            "src": "3804:21:77"
          },
          {
            "baseName": {
              "id": 54647,
              "name": "IDebugExpressionDeployerV2",
              "nameLocations": [
                "3827:26:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55947,
              "src": "3827:26:77"
            },
            "id": 54648,
            "nodeType": "InheritanceSpecifier",
            "src": "3827:26:77"
          },
          {
            "baseName": {
              "id": 54649,
              "name": "IParserV1",
              "nameLocations": [
                "3855:9:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56064,
              "src": "3855:9:77"
            },
            "id": 54650,
            "nodeType": "InheritanceSpecifier",
            "src": "3855:9:77"
          },
          {
            "baseName": {
              "id": 54651,
              "name": "ERC165",
              "nameLocations": [
                "3866:6:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43953,
              "src": "3866:6:77"
            },
            "id": 54652,
            "nodeType": "InheritanceSpecifier",
            "src": "3866:6:77"
          }
        ],
        "canonicalName": "RainterpreterExpressionDeployerNP",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54644,
          "nodeType": "StructuredDocumentation",
          "src": "3537:221:77",
          "text": "@title RainterpreterExpressionDeployer\n @notice !!!EXPERIMENTAL!!! This is the deployer for the RainterpreterNP\n interpreter. Notably includes onchain parsing/compiling of expressions from\n Rainlang strings."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55039,
          43953,
          43965,
          56064,
          55947,
          56022
        ],
        "name": "RainterpreterExpressionDeployerNP",
        "nameLocation": "3767:33:77",
        "scope": 55040,
        "usedErrors": [
          51971,
          54593,
          54598,
          54603,
          54608,
          56032,
          56077,
          57381,
          57388,
          57397,
          57406,
          57415,
          57424,
          57431,
          57438,
          58781,
          58902,
          59241,
          65526,
          65531,
          65536,
          65541,
          65546,
          65551,
          65556,
          65561,
          65566,
          65571,
          65576,
          65581,
          65586,
          65591,
          65594,
          65597,
          65600,
          65603,
          65606,
          65609,
          70044,
          70049,
          70054,
          70059,
          70064,
          70069,
          70074,
          70079,
          70777,
          71536,
          71540,
          71544,
          71548
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 77
}