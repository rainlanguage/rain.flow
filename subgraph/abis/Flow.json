{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flowMinOutputs",
          "type": "uint256"
        }
      ],
      "name": "BadMinStackLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Sentinel",
          "name": "sentinel",
          "type": "uint256"
        }
      ],
      "name": "MissingSentinel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "unregisteredHash",
          "type": "bytes32"
        }
      ],
      "name": "UnregisteredFlow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC1155Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC20Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC721Flow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[][]",
          "name": "context",
          "type": "uint256[][]"
        }
      ],
      "name": "Context",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Evaluable",
          "name": "evaluable",
          "type": "tuple"
        }
      ],
      "name": "FlowInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "dummyConfig",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2[]",
              "name": "config",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct FlowConfigV2",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "internalType": "struct Evaluable",
          "name": "evaluable_",
          "type": "tuple"
        },
        {
          "internalType": "uint256[]",
          "name": "callerContext_",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "context",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedContextV1[]",
          "name": "signedContexts_",
          "type": "tuple[]"
        }
      ],
      "name": "flow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20Transfer[]",
              "name": "erc20",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC721Transfer[]",
              "name": "erc721",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC1155Transfer[]",
              "name": "erc1155",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct FlowTransferV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "internalType": "struct Evaluable",
          "name": "evaluable_",
          "type": "tuple"
        },
        {
          "internalType": "uint256[]",
          "name": "callerContext_",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "context",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedContextV1[]",
          "name": "signedContexts_",
          "type": "tuple[]"
        }
      ],
      "name": "previewFlow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20Transfer[]",
              "name": "erc20",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC721Transfer[]",
              "name": "erc721",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC1155Transfer[]",
              "name": "erc1155",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct FlowTransferV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200342d3803806200342d833981016040819052620000349162000383565b600160005560208101517f95de68a447a477b8fab10701f1265b3e85a98b24710b3e40e6a96aa6d76263bc9082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac913391309162000491565b60405180910390a18051620000c1906200011e565b50620000ce9050620001b5565b505050620005a7565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b620001198262000273565b505050565b60408051600080825260208201818152828401938490526331a66b6560e01b90935291829182916001600160a01b038616916331a66b65916200016691906044820162000500565b6060604051808303816000875af115801562000186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ac919062000537565b50505050505050565b600154610100900460ff16156200021f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff9081161462000271576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200027e81620002a3565b620002a05780604051630c89984b60e31b81526004016200010591906200058b565b50565b6000600882511015620002b857506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200030e576200030e620002d3565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200033f576200033f620002d3565b604052919050565b6001600160a01b0381168114620002a057600080fd5b60005b838110156200037a57818101518382015260200162000360565b50506000910152565b600060208083850312156200039757600080fd5b82516001600160401b0380821115620003af57600080fd5b9084019060408287031215620003c457600080fd5b620003ce620002e9565b8251620003db8162000347565b81528284015182811115620003ef57600080fd5b80840193505086601f8401126200040557600080fd5b8251828111156200041a576200041a620002d3565b6200042e601f8201601f1916860162000314565b925080835287858286010111156200044557600080fd5b62000456818685018787016200035d565b5092830152509392505050565b600081518084526200047d8160208601602086016200035d565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004ba606083018462000463565b95945050505050565b600081518084526020808501945080840160005b83811015620004f557815187529582019590820190600101620004d7565b509495945050505050565b6060815260006060820152608060208201526000620005236080830185620004c3565b8281036040840152620004ba8185620004c3565b6000806000606084860312156200054d57600080fd5b83516200055a8162000347565b60208501519093506200056d8162000347565b6040850151909250620005808162000347565b809150509250925092565b602081526000620005a0602083018462000463565b9392505050565b612e7680620005b76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac9650d81161005b578063ac9650d81461013a578063bc197c811461015a578063f23a6e6114610192578063f83d765a146101ca57600080fd5b806301ffc9a71461008d578063150b7a02146100b5578063439fab91146100f957806390bcad691461011a575b600080fd5b6100a061009b366004611e7e565b6101dd565b60405190151581526020015b60405180910390f35b6100c86100c336600461203d565b610276565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ac565b61010c6101073660046120a9565b6102a0565b6040519081526020016100ac565b61012d6101283660046121aa565b6104ac565b6040516100ac91906123e2565b61014d610148366004612540565b610512565b6040516100ac9190612611565b6100c8610168366004612691565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6100c86101a036600461273f565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b61012d6101d83660046121aa565b610600565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061027057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b600154600090610100900460ff16158080156102c057506001805460ff16105b806102d95750303b1580156102d957506001805460ff16145b61036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168117905580156103c757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b60006103d58486018661282a565b90507fe6eab86ee2ac0cad9eb4981cf3758e39f69371d3e6dd135aaa668008c5acd3b933826040516104089291906129b4565b60405180910390a161041f816020015160036106b6565b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc392505080156104a557600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6104d060405180606001604052806060815260200160608152602001606081525090565b60006104f76104f18560408051600181526020810192909252818101905290565b846109d2565b905060006105058683610ce2565b50925050505b9392505050565b60608167ffffffffffffffff81111561052d5761052d611ee5565b60405190808252806020026020018201604052801561056057816020015b606081526020019060019003908161054b5790505b50905060005b828110156104a5576105d03085858481811061058457610584612a8f565b90506020028101906105969190612abe565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d3592505050565b8282815181106105e2576105e2612a8f565b602002602001018190525080806105f890612b23565b915050610566565b61062460405180606001604052806060815260200160608152602001606081525090565b61062c610d5a565b600061064d6104f18560408051600181526020810192909252818101905290565b90507f17a5c0f3785132a57703932032f6863e7920434150aa1dc940e567b440fdce1f3382604051610680929190612bd4565b60405180910390a16000806106958784610ce2565b915091506106a882886020015183610dcd565b5091505061050b6001600055565b600154610100900460ff1661074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610361565b610755610e7c565b61075d610e7c565b610765610e7c565b60038110156107a3576040517fb0682cf300000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b6107dd6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60408051606081018252600080825260208201819052918101829052905b84518110156109cb5784818151811061081657610816612a8f565b602002602001015192506000806000856000015173ffffffffffffffffffffffffffffffffffffffff166331a66b658760200151886040015161086b8b60408051600181526020810192909252818101905290565b6040518463ffffffff1660e01b815260040161088993929190612c03565b6060604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190612c3c565b92509250925060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152509450600160fc6000610942886060902090565b81526020808201929092526040908101600020929092558151338152875173ffffffffffffffffffffffffffffffffffffffff9081168284015291880151821681840152918701511660608201527fed510090abe2a95b97a621e3d2c947ea3c26eced1c87470474d17e353dcc53389060800160405180910390a15050508060010190506107fb565b5050505050565b60606000825167ffffffffffffffff8111156109f0576109f0611ee5565b604051908082528060200260200182016040528015610a19578160200160208202803683370190505b509050600080845111610a2d576000610a33565b83516001015b855160010101905060008167ffffffffffffffff811115610a5657610a56611ee5565b604051908082528060200260200182016040528015610a8957816020015b6060815260200190600190039081610a745790505b5090506000610aae604080516002815233602082015230818301526060810190915290565b828281518110610ac057610ac0612a8f565b602002602001018190525060005b8751811015610b1e578180600101925050878181518110610af157610af1612a8f565b6020026020010151838381518110610b0b57610b0b612a8f565b6020908102919091010152600101610ace565b50855115610cd857808060010191505083828281518110610b4157610b41612a8f565b602002602001018190525060005b8651811015610cd657610c00878281518110610b6d57610b6d612a8f565b602002602001015160000151610bdd610baa8a8581518110610b9157610b91612a8f565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110610bef57610bef612a8f565b602002602001015160400151610f15565b610c39576040517f52bf984800000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b868181518110610c4b57610c4b612a8f565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16858281518110610c7f57610c7f612a8f565b6020026020010181815250508180600101925050868181518110610ca557610ca5612a8f565b602002602001015160200151838381518110610cc357610cc3612a8f565b6020908102919091010152600101610b4f565b505b5095945050505050565b610d0660405180606001604052806060815260200160608152602001606081525090565b60606000806000610d178787610f90565b925092509250610d2783836110eb565b9450925050505b9250929050565b606061050b8383604051806060016040528060278152602001612e4f60279139611272565b600260005403610dc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610361565b6002600055565b805115610e5c576040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc690610e29906000908590600401612c89565b600060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050505b610e65836112ed565b610e6e83611446565b610e77836115d7565b505050565b600154610100900460ff16610f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610361565b565b6000806000610f248585611787565b90925090506000816004811115610f3d57610f3d612ca2565b148015610f7557508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610f865750610f868686866117c9565b9695505050505050565b60008060606000610fa2866060902090565b600081815260fc6020526040902054909150610fed576040517f7a80ba4d00000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b5084516020808701516040880151600093849373ffffffffffffffffffffffffffffffffffffffff90911692636715f8259290918591901b77ffffffffffffffffffffffffffffffffffffffff000000001661ffff178a6040518563ffffffff1660e01b81526004016110639493929190612cd1565b600060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110c69190810190612d67565b915091506110d48260200190565b825190986020918202909301019650945092505050565b61110f60405180606001604052806060815260200160608152602001606081525090565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000060209091015260608080600061117787877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6004611926565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000060209091015290965093508390506111e187877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6004611926565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152909650925082905061124b87877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6005611926565b60408051606081018252968752602087019590955293850193909352509195945050505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161129c9190612dcb565b600060405180830381855af49150503d80600081146112d7576040519150601f19603f3d011682016040523d82523d6000602084013e6112dc565b606091505b5091509150610f86868383876119d2565b6040805160808101825260008082526020820181905291810182905260608101829052905b825151811015610e7757825180518290811061133057611330612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16036113a7576040820151606083015183516113a29273ffffffffffffffffffffffffffffffffffffffff90911691339190611a72565b61143e565b3073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff160361140c576040820151606083015183516113a29273ffffffffffffffffffffffffffffffffffffffff90911691611b54565b6040517fa521c60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101611312565b6040805160808101825260008082526020820181905291810182905260608101829052905b826020015151811015610e77578260200151818151811061148e5761148e612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16141580156114f25750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b15611529576040517f3a5befc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516020830151604080850151606086015191517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b1580156115b357600080fd5b505af11580156115c7573d6000803e3d6000fd5b50506001909201915061146b9050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b826040015151811015610e77578260400151818151811061162657611626612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415801561168a5750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b156116c1576040517fc6a91ecc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040808501516060860151608087015192517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff948516600482015291841660248301526044820152606481019190915260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561176357600080fd5b505af1158015611777573d6000803e3d6000fd5b5050600190920191506116039050565b60008082516041036117bd5760208301516040840151606085015160001a6117b187828585611baa565b94509450505050610d2e565b50600090506002610d2e565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611800929190612de7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516118899190612dcb565b600060405180830381855afa9150503d80600081146118c4576040519150601f19603f3d011682016040523d82523d6000602084013e6118c9565b606091505b50915091508180156118dd57506020815110155b8015610f86575080517f1626ba7e000000000000000000000000000000000000000000000000000000009061191b9083016020908101908401612e00565b149695505050505050565b60008060208302855b8781111561195357602081038681510361194a579350611953565b5081900361192f565b5082600003611991576040517fd457746f00000000000000000000000000000000000000000000000000000000815260048101869052602401610361565b604051915060208201602084015b878110156119b757808252602090910190820161199f565b50806040526001602084830304038352505094509492505050565b60608315611a68578251600003611a615773ffffffffffffffffffffffffffffffffffffffff85163b611a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610361565b5081610298565b6102988383611c99565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611b4e9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611cdd565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e779084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611acc565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611be15750600090506003611c90565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611c35573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611c8957600060019250925050611c90565b9150600090505b94509492505050565b815115611ca95781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103619190612e19565b6000611d3f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611dec9092919063ffffffff16565b9050805160001480611d60575080806020019051810190611d609190612e2c565b610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610361565b60606102988484600085856000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e209190612dcb565b60006040518083038185875af1925050503d8060008114611e5d576040519150601f19603f3d011682016040523d82523d6000602084013e611e62565b606091505b5091509150611e73878383876119d2565b979650505050505050565b600060208284031215611e9057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461050b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611ee257600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f3757611f37611ee5565b60405290565b6040805190810167ffffffffffffffff81118282101715611f3757611f37611ee5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fa757611fa7611ee5565b604052919050565b600082601f830112611fc057600080fd5b813567ffffffffffffffff811115611fda57611fda611ee5565b61200b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611f60565b81815284602083860101111561202057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561205357600080fd5b843561205e81611ec0565b9350602085013561206e81611ec0565b925060408501359150606085013567ffffffffffffffff81111561209157600080fd5b61209d87828801611faf565b91505092959194509250565b600080602083850312156120bc57600080fd5b823567ffffffffffffffff808211156120d457600080fd5b818501915085601f8301126120e857600080fd5b8135818111156120f757600080fd5b86602082850101111561210957600080fd5b60209290920196919550909350505050565b600067ffffffffffffffff82111561213557612135611ee5565b5060051b60200190565b600082601f83011261215057600080fd5b813560206121656121608361211b565b611f60565b82815260059290921b8401810191818101908684111561218457600080fd5b8286015b8481101561219f5780358352918301918301612188565b509695505050505050565b600080600083850360a08112156121c057600080fd5b60608112156121ce57600080fd5b506121d7611f14565b84356121e281611ec0565b81526020858101356121f381611ec0565b82820152604086013561220581611ec0565b604083015290935060608501359067ffffffffffffffff8083111561222957600080fd5b6122358884890161213f565b9450608087013592508083111561224b57600080fd5b828701925087601f84011261225f57600080fd5b823561226d6121608261211b565b81815260059190911b8401830190838101908a83111561228c57600080fd5b8486015b8381101561234f578035858111156122a85760008081fd5b87016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156122dd5760008081fd5b6122e5611f14565b878201356122f281611ec0565b81526040820135878111156123075760008081fd5b6123158f8a8386010161213f565b898301525060608201358781111561232d5760008081fd5b61233b8f8a83860101611faf565b604083015250845250918501918501612290565b508096505050505050509250925092565b600081518084526020808501945080840160005b838110156123d7578151805173ffffffffffffffffffffffffffffffffffffffff9081168952848201518116858a015260408083015190911690890152606080820151908901526080908101519088015260a09096019590820190600101612374565b509495945050505050565b600060208083526080808401855160608487015281815180845260a0880191508583019350600092505b808310156124705761245c82855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b92850192600192909201919084019061240c565b50848801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0888303810160408a01528151808452918701945092506000918601905b808310156125175761250382865173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b9386019360019290920191908501906124b3565b5060408901519550828882030160608901526125338187612360565b9998505050505050505050565b6000806020838503121561255357600080fd5b823567ffffffffffffffff8082111561256b57600080fd5b818501915085601f83011261257f57600080fd5b81358181111561258e57600080fd5b8660208260051b850101111561210957600080fd5b60005b838110156125be5781810151838201526020016125a6565b50506000910152565b600081518084526125df8160208601602086016125a3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612684577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526126728583516125c7565b94509285019290850190600101612638565b5092979650505050505050565b600080600080600060a086880312156126a957600080fd5b85356126b481611ec0565b945060208601356126c481611ec0565b9350604086013567ffffffffffffffff808211156126e157600080fd5b6126ed89838a0161213f565b9450606088013591508082111561270357600080fd5b61270f89838a0161213f565b9350608088013591508082111561272557600080fd5b5061273288828901611faf565b9150509295509295909350565b600080600080600060a0868803121561275757600080fd5b853561276281611ec0565b9450602086013561277281611ec0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561279c57600080fd5b61273288828901611faf565b6000606082840312156127ba57600080fd5b6127c2611f14565b905081356127cf81611ec0565b8152602082013567ffffffffffffffff808211156127ec57600080fd5b6127f885838601611faf565b6020840152604084013591508082111561281157600080fd5b5061281e8482850161213f565b60408301525092915050565b6000602080838503121561283d57600080fd5b823567ffffffffffffffff8082111561285557600080fd5b908401906040828703121561286957600080fd5b612871611f3d565b82358281111561288057600080fd5b61288c888286016127a8565b82525083830135828111156128a057600080fd5b80840193505086601f8401126128b557600080fd5b82356128c36121608261211b565b81815260059190911b840185019085810190898311156128e257600080fd5b8686015b8381101561291a578035868111156128fe5760008081fd5b61290c8c8a838b01016127a8565b8452509187019187016128e6565b5095830195909552509695505050505050565b600081518084526020808501945080840160005b838110156123d757815187529582019590820190600101612941565b73ffffffffffffffffffffffffffffffffffffffff8151168252600060208201516060602085015261299260608501826125c7565b9050604083015184820360408601526129ab828261292d565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526000602060408184015283516040808501526129ec608085018261295d565b858301518582037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0016060870152805180835291925083019083830190600581901b8401850160005b82811015612a81577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868303018452612a6f82865161295d565b94870194938701939150600101612a35565b509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612af357600080fd5b83018035915067ffffffffffffffff821115612b0e57600080fd5b602001915036819003821315610d2e57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000815180845260208085019450848260051b860182860160005b85811015612bc7578383038952612bb583835161292d565b98850198925090840190600101612b9d565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006102986040830184612b82565b606081526000612c1660608301866125c7565b8281036020840152612c28818661292d565b90508281036040840152610f86818561292d565b600080600060608486031215612c5157600080fd5b8351612c5c81611ec0565b6020850151909350612c6d81611ec0565b6040850151909250612c7e81611ec0565b809150509250925092565b828152604060208201526000610298604083018461292d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000610f866080830184612b82565b600082601f830112612d1d57600080fd5b81516020612d2d6121608361211b565b82815260059290921b84018101918181019086841115612d4c57600080fd5b8286015b8481101561219f5780518352918301918301612d50565b60008060408385031215612d7a57600080fd5b825167ffffffffffffffff80821115612d9257600080fd5b612d9e86838701612d0c565b93506020850151915080821115612db457600080fd5b50612dc185828601612d0c565b9150509250929050565b60008251612ddd8184602087016125a3565b9190910192915050565b82815260406020820152600061029860408301846125c7565b600060208284031215612e1257600080fd5b5051919050565b60208152600061050b60208301846125c7565b600060208284031215612e3e57600080fd5b8151801515811461050b57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "487:1991:66:-:0;;;645:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:25;409:75:66;1821:22:25;1109:11:43;;;;417:66:66;;746:6;;417:66;;746:6;;1075:46:43;;417:66:66;;1075:23:43;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;6192:22:65::1;::::0;-1:-1:-1;6192:20:65::1;:22::i;:::-;6035:186:::0;;645:111:66;487:1991;;1424:292:42;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:42;;;;;3081:25:87;;;3122:18;;;3115:34;;;3054:18;;1619:46:42;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1308:309:52:-;1513:16;;;1371:26;1513:16;;;;;;1531;;;;;;;;;;-1:-1:-1;;;1460:88:52;;;1371:26;;;;;-1:-1:-1;;;;;1460:48:52;;;;;:88;;1513:16;1460:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;1308:309:52:o;5939:280:0:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:0;;5030:2:87;5998:66:0;;;5012:21:87;5069:2;5049:18;;;5042:30;5108:34;5088:18;;;5081:62;-1:-1:-1;;;5159:18:87;;;5152:37;5206:19;;5998:66:0;4828:403:87;5998:66:0;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:0;6140:15;6125:30;;;;;;6174:28;;5378:36:87;;;6174:28:0;;5366:2:87;5351:18;6174:28:0;;;;;;;6074:139;5939:280::o;1075:155:42:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:42;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:42;;550:376;-1:-1:-1;550:376:42:o;631:34::-;-1:-1:-1;846:1:42;835:13;829:20;-1:-1:-1;;;;;825:32:42;667:18:41;883:36:42;;550:376::o;14:127:87:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:87;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:87;508:40;;-1:-1:-1;;;;;563:34:87;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:87:o;687:131::-;-1:-1:-1;;;;;762:31:87;;752:42;;742:70;;808:1;805;798:12;823:250;908:1;918:113;932:6;929:1;926:13;918:113;;;1008:11;;;1002:18;989:11;;;982:39;954:2;947:10;918:113;;;-1:-1:-1;;1065:1:87;1047:16;;1040:27;823:250::o;1078:1159::-;1210:6;1241:2;1284;1272:9;1263:7;1259:23;1255:32;1252:52;;;1300:1;1297;1290:12;1252:52;1327:16;;-1:-1:-1;;;;;1392:14:87;;;1389:34;;;1419:1;1416;1409:12;1389:34;1442:22;;;;1498:4;1480:16;;;1476:27;1473:47;;;1516:1;1513;1506:12;1473:47;1542:21;;:::i;:::-;1593:2;1587:9;1605:33;1630:7;1605:33;:::i;:::-;1647:22;;1700:11;;;1694:18;1724:16;;;1721:36;;;1753:1;1750;1743:12;1721:36;1784:8;1780:2;1776:17;1766:27;;;1831:7;1824:4;1820:2;1816:13;1812:27;1802:55;;1853:1;1850;1843:12;1802:55;1882:2;1876:9;1904:2;1900;1897:10;1894:36;;;1910:18;;:::i;:::-;1952:53;1995:2;1976:13;;-1:-1:-1;;1972:27:87;1968:36;;1952:53;:::i;:::-;1939:66;;2028:2;2021:5;2014:17;2068:7;2063:2;2058;2054;2050:11;2046:20;2043:33;2040:53;;;2089:1;2086;2079:12;2040:53;2102:67;2166:2;2161;2154:5;2150:14;2145:2;2141;2137:11;2102:67;:::i;:::-;-1:-1:-1;2185:14:87;;;2178:29;-1:-1:-1;2189:5:87;1078:1159;-1:-1:-1;;;1078:1159:87:o;2242:270::-;2283:3;2321:5;2315:12;2348:6;2343:3;2336:19;2364:76;2433:6;2426:4;2421:3;2417:14;2410:4;2403:5;2399:16;2364:76;:::i;:::-;2494:2;2473:15;-1:-1:-1;;2469:29:87;2460:39;;;;2501:4;2456:50;;2242:270;-1:-1:-1;;2242:270:87:o;2517:385::-;2749:1;2745;2740:3;2736:11;2732:19;2724:6;2720:32;2709:9;2702:51;2789:6;2784:2;2773:9;2769:18;2762:34;2832:2;2827;2816:9;2812:18;2805:30;2683:4;2852:44;2892:2;2881:9;2877:18;2869:6;2852:44;:::i;:::-;2844:52;2517:385;-1:-1:-1;;;;;2517:385:87:o;3160:435::-;3213:3;3251:5;3245:12;3278:6;3273:3;3266:19;3304:4;3333:2;3328:3;3324:12;3317:19;;3370:2;3363:5;3359:14;3391:1;3401:169;3415:6;3412:1;3409:13;3401:169;;;3476:13;;3464:26;;3510:12;;;;3545:15;;;;3437:1;3430:9;3401:169;;;-1:-1:-1;3586:3:87;;3160:435;-1:-1:-1;;;;;3160:435:87:o;3600:646::-;3957:2;3946:9;3939:21;3996:1;3991:2;3980:9;3976:18;3969:29;4036:3;4029:4;4018:9;4014:20;4007:33;3920:4;4063:57;4115:3;4104:9;4100:19;4092:6;4063:57;:::i;:::-;4168:9;4160:6;4156:22;4151:2;4140:9;4136:18;4129:50;4196:44;4233:6;4225;4196:44;:::i;4251:572::-;4392:6;4400;4408;4461:2;4449:9;4440:7;4436:23;4432:32;4429:52;;;4477:1;4474;4467:12;4429:52;4509:9;4503:16;4528:31;4553:5;4528:31;:::i;:::-;4628:2;4613:18;;4607:25;4578:5;;-1:-1:-1;4641:33:87;4607:25;4641:33;:::i;:::-;4745:2;4730:18;;4724:25;4693:7;;-1:-1:-1;4758:33:87;4724:25;4758:33;:::i;:::-;4810:7;4800:17;;;4251:572;;;;;:::o;5425:217::-;5572:2;5561:9;5554:21;5535:4;5592:44;5632:2;5621:9;5617:18;5609:6;5592:44;:::i;:::-;5584:52;5425:217;-1:-1:-1;;;5425:217:87:o;:::-;487:1991:66;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac9650d81161005b578063ac9650d81461013a578063bc197c811461015a578063f23a6e6114610192578063f83d765a146101ca57600080fd5b806301ffc9a71461008d578063150b7a02146100b5578063439fab91146100f957806390bcad691461011a575b600080fd5b6100a061009b366004611e7e565b6101dd565b60405190151581526020015b60405180910390f35b6100c86100c336600461203d565b610276565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ac565b61010c6101073660046120a9565b6102a0565b6040519081526020016100ac565b61012d6101283660046121aa565b6104ac565b6040516100ac91906123e2565b61014d610148366004612540565b610512565b6040516100ac9190612611565b6100c8610168366004612691565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6100c86101a036600461273f565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b61012d6101d83660046121aa565b610600565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061027057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b600154600090610100900460ff16158080156102c057506001805460ff16105b806102d95750303b1580156102d957506001805460ff16145b61036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168117905580156103c757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b60006103d58486018661282a565b90507fe6eab86ee2ac0cad9eb4981cf3758e39f69371d3e6dd135aaa668008c5acd3b933826040516104089291906129b4565b60405180910390a161041f816020015160036106b6565b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc392505080156104a557600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6104d060405180606001604052806060815260200160608152602001606081525090565b60006104f76104f18560408051600181526020810192909252818101905290565b846109d2565b905060006105058683610ce2565b50925050505b9392505050565b60608167ffffffffffffffff81111561052d5761052d611ee5565b60405190808252806020026020018201604052801561056057816020015b606081526020019060019003908161054b5790505b50905060005b828110156104a5576105d03085858481811061058457610584612a8f565b90506020028101906105969190612abe565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d3592505050565b8282815181106105e2576105e2612a8f565b602002602001018190525080806105f890612b23565b915050610566565b61062460405180606001604052806060815260200160608152602001606081525090565b61062c610d5a565b600061064d6104f18560408051600181526020810192909252818101905290565b90507f17a5c0f3785132a57703932032f6863e7920434150aa1dc940e567b440fdce1f3382604051610680929190612bd4565b60405180910390a16000806106958784610ce2565b915091506106a882886020015183610dcd565b5091505061050b6001600055565b600154610100900460ff1661074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610361565b610755610e7c565b61075d610e7c565b610765610e7c565b60038110156107a3576040517fb0682cf300000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b6107dd6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60408051606081018252600080825260208201819052918101829052905b84518110156109cb5784818151811061081657610816612a8f565b602002602001015192506000806000856000015173ffffffffffffffffffffffffffffffffffffffff166331a66b658760200151886040015161086b8b60408051600181526020810192909252818101905290565b6040518463ffffffff1660e01b815260040161088993929190612c03565b6060604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190612c3c565b92509250925060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152509450600160fc6000610942886060902090565b81526020808201929092526040908101600020929092558151338152875173ffffffffffffffffffffffffffffffffffffffff9081168284015291880151821681840152918701511660608201527fed510090abe2a95b97a621e3d2c947ea3c26eced1c87470474d17e353dcc53389060800160405180910390a15050508060010190506107fb565b5050505050565b60606000825167ffffffffffffffff8111156109f0576109f0611ee5565b604051908082528060200260200182016040528015610a19578160200160208202803683370190505b509050600080845111610a2d576000610a33565b83516001015b855160010101905060008167ffffffffffffffff811115610a5657610a56611ee5565b604051908082528060200260200182016040528015610a8957816020015b6060815260200190600190039081610a745790505b5090506000610aae604080516002815233602082015230818301526060810190915290565b828281518110610ac057610ac0612a8f565b602002602001018190525060005b8751811015610b1e578180600101925050878181518110610af157610af1612a8f565b6020026020010151838381518110610b0b57610b0b612a8f565b6020908102919091010152600101610ace565b50855115610cd857808060010191505083828281518110610b4157610b41612a8f565b602002602001018190525060005b8651811015610cd657610c00878281518110610b6d57610b6d612a8f565b602002602001015160000151610bdd610baa8a8581518110610b9157610b91612a8f565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110610bef57610bef612a8f565b602002602001015160400151610f15565b610c39576040517f52bf984800000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b868181518110610c4b57610c4b612a8f565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16858281518110610c7f57610c7f612a8f565b6020026020010181815250508180600101925050868181518110610ca557610ca5612a8f565b602002602001015160200151838381518110610cc357610cc3612a8f565b6020908102919091010152600101610b4f565b505b5095945050505050565b610d0660405180606001604052806060815260200160608152602001606081525090565b60606000806000610d178787610f90565b925092509250610d2783836110eb565b9450925050505b9250929050565b606061050b8383604051806060016040528060278152602001612e4f60279139611272565b600260005403610dc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610361565b6002600055565b805115610e5c576040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc690610e29906000908590600401612c89565b600060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050505b610e65836112ed565b610e6e83611446565b610e77836115d7565b505050565b600154610100900460ff16610f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610361565b565b6000806000610f248585611787565b90925090506000816004811115610f3d57610f3d612ca2565b148015610f7557508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610f865750610f868686866117c9565b9695505050505050565b60008060606000610fa2866060902090565b600081815260fc6020526040902054909150610fed576040517f7a80ba4d00000000000000000000000000000000000000000000000000000000815260048101829052602401610361565b5084516020808701516040880151600093849373ffffffffffffffffffffffffffffffffffffffff90911692636715f8259290918591901b77ffffffffffffffffffffffffffffffffffffffff000000001661ffff178a6040518563ffffffff1660e01b81526004016110639493929190612cd1565b600060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110c69190810190612d67565b915091506110d48260200190565b825190986020918202909301019650945092505050565b61110f60405180606001604052806060815260200160608152602001606081525090565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000060209091015260608080600061117787877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6004611926565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000060209091015290965093508390506111e187877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6004611926565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152909650925082905061124b87877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f6005611926565b60408051606081018252968752602087019590955293850193909352509195945050505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161129c9190612dcb565b600060405180830381855af49150503d80600081146112d7576040519150601f19603f3d011682016040523d82523d6000602084013e6112dc565b606091505b5091509150610f86868383876119d2565b6040805160808101825260008082526020820181905291810182905260608101829052905b825151811015610e7757825180518290811061133057611330612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16036113a7576040820151606083015183516113a29273ffffffffffffffffffffffffffffffffffffffff90911691339190611a72565b61143e565b3073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff160361140c576040820151606083015183516113a29273ffffffffffffffffffffffffffffffffffffffff90911691611b54565b6040517fa521c60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101611312565b6040805160808101825260008082526020820181905291810182905260608101829052905b826020015151811015610e77578260200151818151811061148e5761148e612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16141580156114f25750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b15611529576040517f3a5befc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516020830151604080850151606086015191517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b1580156115b357600080fd5b505af11580156115c7573d6000803e3d6000fd5b50506001909201915061146b9050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b826040015151811015610e77578260400151818151811061162657611626612a8f565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415801561168a5750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b156116c1576040517fc6a91ecc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040808501516060860151608087015192517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff948516600482015291841660248301526044820152606481019190915260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561176357600080fd5b505af1158015611777573d6000803e3d6000fd5b5050600190920191506116039050565b60008082516041036117bd5760208301516040840151606085015160001a6117b187828585611baa565b94509450505050610d2e565b50600090506002610d2e565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611800929190612de7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516118899190612dcb565b600060405180830381855afa9150503d80600081146118c4576040519150601f19603f3d011682016040523d82523d6000602084013e6118c9565b606091505b50915091508180156118dd57506020815110155b8015610f86575080517f1626ba7e000000000000000000000000000000000000000000000000000000009061191b9083016020908101908401612e00565b149695505050505050565b60008060208302855b8781111561195357602081038681510361194a579350611953565b5081900361192f565b5082600003611991576040517fd457746f00000000000000000000000000000000000000000000000000000000815260048101869052602401610361565b604051915060208201602084015b878110156119b757808252602090910190820161199f565b50806040526001602084830304038352505094509492505050565b60608315611a68578251600003611a615773ffffffffffffffffffffffffffffffffffffffff85163b611a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610361565b5081610298565b6102988383611c99565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611b4e9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611cdd565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e779084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611acc565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611be15750600090506003611c90565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611c35573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611c8957600060019250925050611c90565b9150600090505b94509492505050565b815115611ca95781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103619190612e19565b6000611d3f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611dec9092919063ffffffff16565b9050805160001480611d60575080806020019051810190611d609190612e2c565b610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610361565b60606102988484600085856000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e209190612dcb565b60006040518083038185875af1925050503d8060008114611e5d576040519150601f19603f3d011682016040523d82523d6000602084013e611e62565b606091505b5091509150611e73878383876119d2565b979650505050505050565b600060208284031215611e9057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461050b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611ee257600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f3757611f37611ee5565b60405290565b6040805190810167ffffffffffffffff81118282101715611f3757611f37611ee5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fa757611fa7611ee5565b604052919050565b600082601f830112611fc057600080fd5b813567ffffffffffffffff811115611fda57611fda611ee5565b61200b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611f60565b81815284602083860101111561202057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561205357600080fd5b843561205e81611ec0565b9350602085013561206e81611ec0565b925060408501359150606085013567ffffffffffffffff81111561209157600080fd5b61209d87828801611faf565b91505092959194509250565b600080602083850312156120bc57600080fd5b823567ffffffffffffffff808211156120d457600080fd5b818501915085601f8301126120e857600080fd5b8135818111156120f757600080fd5b86602082850101111561210957600080fd5b60209290920196919550909350505050565b600067ffffffffffffffff82111561213557612135611ee5565b5060051b60200190565b600082601f83011261215057600080fd5b813560206121656121608361211b565b611f60565b82815260059290921b8401810191818101908684111561218457600080fd5b8286015b8481101561219f5780358352918301918301612188565b509695505050505050565b600080600083850360a08112156121c057600080fd5b60608112156121ce57600080fd5b506121d7611f14565b84356121e281611ec0565b81526020858101356121f381611ec0565b82820152604086013561220581611ec0565b604083015290935060608501359067ffffffffffffffff8083111561222957600080fd5b6122358884890161213f565b9450608087013592508083111561224b57600080fd5b828701925087601f84011261225f57600080fd5b823561226d6121608261211b565b81815260059190911b8401830190838101908a83111561228c57600080fd5b8486015b8381101561234f578035858111156122a85760008081fd5b87016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156122dd5760008081fd5b6122e5611f14565b878201356122f281611ec0565b81526040820135878111156123075760008081fd5b6123158f8a8386010161213f565b898301525060608201358781111561232d5760008081fd5b61233b8f8a83860101611faf565b604083015250845250918501918501612290565b508096505050505050509250925092565b600081518084526020808501945080840160005b838110156123d7578151805173ffffffffffffffffffffffffffffffffffffffff9081168952848201518116858a015260408083015190911690890152606080820151908901526080908101519088015260a09096019590820190600101612374565b509495945050505050565b600060208083526080808401855160608487015281815180845260a0880191508583019350600092505b808310156124705761245c82855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b92850192600192909201919084019061240c565b50848801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0888303810160408a01528151808452918701945092506000918601905b808310156125175761250382865173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b9386019360019290920191908501906124b3565b5060408901519550828882030160608901526125338187612360565b9998505050505050505050565b6000806020838503121561255357600080fd5b823567ffffffffffffffff8082111561256b57600080fd5b818501915085601f83011261257f57600080fd5b81358181111561258e57600080fd5b8660208260051b850101111561210957600080fd5b60005b838110156125be5781810151838201526020016125a6565b50506000910152565b600081518084526125df8160208601602086016125a3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612684577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526126728583516125c7565b94509285019290850190600101612638565b5092979650505050505050565b600080600080600060a086880312156126a957600080fd5b85356126b481611ec0565b945060208601356126c481611ec0565b9350604086013567ffffffffffffffff808211156126e157600080fd5b6126ed89838a0161213f565b9450606088013591508082111561270357600080fd5b61270f89838a0161213f565b9350608088013591508082111561272557600080fd5b5061273288828901611faf565b9150509295509295909350565b600080600080600060a0868803121561275757600080fd5b853561276281611ec0565b9450602086013561277281611ec0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561279c57600080fd5b61273288828901611faf565b6000606082840312156127ba57600080fd5b6127c2611f14565b905081356127cf81611ec0565b8152602082013567ffffffffffffffff808211156127ec57600080fd5b6127f885838601611faf565b6020840152604084013591508082111561281157600080fd5b5061281e8482850161213f565b60408301525092915050565b6000602080838503121561283d57600080fd5b823567ffffffffffffffff8082111561285557600080fd5b908401906040828703121561286957600080fd5b612871611f3d565b82358281111561288057600080fd5b61288c888286016127a8565b82525083830135828111156128a057600080fd5b80840193505086601f8401126128b557600080fd5b82356128c36121608261211b565b81815260059190911b840185019085810190898311156128e257600080fd5b8686015b8381101561291a578035868111156128fe5760008081fd5b61290c8c8a838b01016127a8565b8452509187019187016128e6565b5095830195909552509695505050505050565b600081518084526020808501945080840160005b838110156123d757815187529582019590820190600101612941565b73ffffffffffffffffffffffffffffffffffffffff8151168252600060208201516060602085015261299260608501826125c7565b9050604083015184820360408601526129ab828261292d565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526000602060408184015283516040808501526129ec608085018261295d565b858301518582037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0016060870152805180835291925083019083830190600581901b8401850160005b82811015612a81577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868303018452612a6f82865161295d565b94870194938701939150600101612a35565b509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612af357600080fd5b83018035915067ffffffffffffffff821115612b0e57600080fd5b602001915036819003821315610d2e57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000815180845260208085019450848260051b860182860160005b85811015612bc7578383038952612bb583835161292d565b98850198925090840190600101612b9d565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006102986040830184612b82565b606081526000612c1660608301866125c7565b8281036020840152612c28818661292d565b90508281036040840152610f86818561292d565b600080600060608486031215612c5157600080fd5b8351612c5c81611ec0565b6020850151909350612c6d81611ec0565b6040850151909250612c7e81611ec0565b809150509250925092565b828152604060208201526000610298604083018461292d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000610f866080830184612b82565b600082601f830112612d1d57600080fd5b81516020612d2d6121608361211b565b82815260059290921b84018101918181019086841115612d4c57600080fd5b8286015b8481101561219f5780518352918301918301612d50565b60008060408385031215612d7a57600080fd5b825167ffffffffffffffff80821115612d9257600080fd5b612d9e86838701612d0c565b93506020850151915080821115612db457600080fd5b50612dc185828601612d0c565b9150509250929050565b60008251612ddd8184602087016125a3565b9190910192915050565b82815260406020820152600061029860408301846125c7565b600060208284031215612e1257600080fd5b5051919050565b60208152600061050b60208301846125c7565b600060208284031215612e3e57600080fd5b8151801515811461050b57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "487:1991:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:254:7;;;;;;:::i;:::-;;:::i;:::-;;;516:14:87;;509:22;491:41;;479:2;464:18;661:254:7;;;;;;;;849:162:15;;;;;;:::i;:::-;;:::i;:::-;;;3188:66:87;3176:79;;;3158:98;;3146:2;3131:18;849:162:15;3014:248:87;795:313:66;;;;;;:::i;:::-;;:::i;:::-;;;4009:25:87;;;3997:2;3982:18;795:313:66;3863:177:87;1476:433:66;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;695:319:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;972:247:6:-;;;;;;:::i;:::-;1176:36;972:247;;;;;;;;747:219;;;;;;:::i;:::-;928:31;747:219;;;;;;;;1915:561:66;;;;;;:::i;:::-;;:::i;661:254:7:-;785:4;808:60;;;823:45;808:60;;:100;;-1:-1:-1;1183:36:20;1168:51;;;;872:36:7;801:107;661:254;-1:-1:-1;;661:254:7:o;849:162:15:-;974:30;849:162;;;;;;;:::o;795:313:66:-;3302:13:0;;866:7:66;;3302:13:0;;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:0;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:0;1713:19:16;:23;;;3387:66:0;;-1:-1:-1;3436:12:0;;;;;:17;3387:66;3325:201;;;;;;;14743:2:87;3325:201:0;;;14725:21:87;14782:2;14762:18;;;14755:30;14821:34;14801:18;;;14794:62;14892:16;14872:18;;;14865:44;14926:19;;3325:201:0;;;;;;;;;3551:1;3536:16;;;;;;;;3562:65;;;;3612:4;3596:20;;;;;;;;3562:65;885:30:66::1;918:32;::::0;;::::1;929:4:::0;918:32:::1;:::i;:::-;885:65;;965:34;976:10;988;965:34;;;;;;;:::i;:::-;;;;;;;;1010:53;1025:10;:17;;;1660:1:65;1010:14:66;:53::i;:::-;191:36:39;1073:28:66;;;3651:14:0::0;3647:99;;;3681:13;:21;;;;;;3721:14;;19662:36:87;;;3721:14:0;;19650:2:87;19635:18;3721:14:0;;;;;;;3647:99;3269:483;795:313:66;;;;:::o;1476:433::-;1662:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1662:21:66;1695:27;1725:62;1742:27;:14;2530:4:64;2524:11;;2563:1;2548:17;;2597:4;2585:17;;2578:28;;;;2632:17;;;2619:31;;2524:11;2375:291;1742:27:66;1771:15;1725:16;:62::i;:::-;1695:92;;1798:35;1838:34;1851:10;1863:8;1838:12;:34::i;:::-;-1:-1:-1;1797:75:66;-1:-1:-1;;;1476:433:66;;;;;;:::o;695:319:18:-;763:22;819:4;807:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:34;;846:9;841:143;861:15;;;841:143;;;910:63;958:4;965;;970:1;965:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;910:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;910:39:18;;-1:-1:-1;;;910:63:18:i;:::-;897:7;905:1;897:10;;;;;;;;:::i;:::-;;;;;;:76;;;;878:3;;;;;:::i;:::-;;;;841:143;;1915:561:66;2102:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2102:21:66;2261::25;:19;:21::i;:::-;2135:27:66::1;2165:62;2182:27;:14;2530:4:64::0;2524:11;;2563:1;2548:17;;2597:4;2585:17;;2578:28;;;;2632:17;;;2619:31;;2524:11;2375:291;2165:62:66::1;2135:92;;2242:29;2250:10;2262:8;2242:29;;;;;;;:::i;:::-;;;;;;;;2282:35;2319:21:::0;2344:34:::1;2357:10;2369:8;2344:12;:34::i;:::-;2281:97;;;;2388:51;2401:13;2416:10;:16;;;2434:4;2388:12;:51::i;:::-;-1:-1:-1::0;2456:13:66;-1:-1:-1;;2303:20:25;1716:1;2809:7;:22;2629:209;6741:2827:65;5374:13:0;;;;;;;5366:69;;;;;;;22079:2:87;5366:69:0;;;22061:21:87;22118:2;22098:18;;;22091:30;22157:34;22137:18;;;22130:62;22228:13;22208:18;;;22201:41;22259:19;;5366:69:0;21877:407:87;5366:69:0;6980:21:65::1;:19;:21::i;:::-;7015:22;:20;:22::i;:::-;7051:18;:16;:18::i;:::-;1660:1;7321:14;:35;7317:114;;;7383:33;::::0;::::1;::::0;;::::1;::::0;::::1;4009:25:87::0;;;3982:18;;7383:33:65::1;3863:177:87::0;7317:114:65::1;7445:31;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7445:31:65::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;7672:1880:65::1;7696:16;:23;7692:1;:27;7672:1880;;;7753:16;7770:1;7753:19;;;;;;;;:::i;:::-;;;;;;;7744:28;;8242:26;8270:25:::0;8297:18:::1;8319:6;:36;;;:74;;;8394:6;:15;;;8411:6;:16;;;8429:41;8455:14;2530:4:64::0;2524:11;;2563:1;2548:17;;2597:4;2585:17;;2578:28;;;;2632:17;;;2619:31;;2524:11;2375:291;8429:41:65::1;8319:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8241:230;;;;;;8501:41;;;;;;;;8511:11;8501:41;;;;;;8524:5;8501:41;;;;;;8531:10;8501:41;;;;::::0;8489:53:::1;;2230:1;9159:15;:33;9175:16;:9;2772:4:54::0;2751:26;;;2304:489;9175:16:65::1;9159:33:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;9159:33:65;:54;;;;9499:38;;9515:10:::1;23970:34:87::0;;24044:13;;23919:42;24040:22;;;24020:18;;;24013:50;24109:15;;;24103:22;24099:31;;24079:18;;;24072:59;24177:15;;;24171:22;24167:31;24162:2;24147:18;;24140:59;9499:38:65::1;::::0;23896:3:87;23881:19;9499:38:65::1;;;;;;;7726:1826;;;7721:3;;;;;7672:1880;;;;6890:2672;;6741:2827:::0;;:::o;7166:2290:51:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:51;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:63;3277:11;;3315:1;3301:16;;2288:10:51;3348:4:63;3337:16;;3330:27;2326:4:51;3377:16:63;;;3370:27;2211:16:51;3423::63;;3410:30;;;3277:11;2172:169:51;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:51;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:40;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:51;7389:34:33;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:51;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;4009:25:87;;;3982:18;;9164:19:51;3863:177:87;8196:1010:51;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:51;7166:2290;-1:-1:-1;;;;;7166:2290:51:o;1114:356:66:-;1241:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1241:21:66;1264:16;1297:20;1319:17;1338:21;1363:31;1373:10;1385:8;1363:9;:31::i;:::-;1296:98;;;;;;1412:44;1432:12;1446:9;1412:19;:44::i;:::-;1404:59;-1:-1:-1;1458:4:66;-1:-1:-1;;;1114:356:66;;;;;;:::o;6685:198:16:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;2336:287:25:-;1759:1;2468:7;;:19;2460:63;;;;;;;24412:2:87;2460:63:25;;;24394:21:87;24451:2;24431:18;;;24424:30;24490:33;24470:18;;;24463:61;24541:18;;2460:63:25;24210:355:87;2460:63:25;1759:1;2598:7;:18;2336:287::o;5071:356:86:-;5219:11;;:15;5215:98;;5250:52;;;;;:21;;;;;;:52;;1142:1:47;;5297:4:86;;5250:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5215:98;5322:25;:13;:23;:25::i;:::-;5357:26;:13;:24;:26::i;:::-;5393:27;:13;:25;:27::i;:::-;5071:356;;;:::o;558:64:15:-;5374:13:0;;;;;;;5366:69;;;;;;;22079:2:87;5366:69:0;;;22061:21:87;22118:2;22098:18;;;22091:30;22157:34;22137:18;;;22130:62;22228:13;22208:18;;;22201:41;22259:19;;5366:69:0;21877:407:87;5366:69:0;558:64:15:o;1014:366:34:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:34;-1:-1:-1;1256:26:34;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:34:o;10274:781:65:-;10396:7;10405;10414:16;10510:21;10534:16;:9;2772:4:54;2751:26;;;2304:489;10534:16:65;2333:1;10568:30;;;:15;:30;;;;;;10510:40;;-1:-1:-1;10564:133:65;;10651:31;;;;;;;;4009:25:87;;;3982:18;;10651:31:65;3863:177:87;10564:133:65;-1:-1:-1;10766:21:65;;10806:15;;;;;10898:20;;;;10718:22;;;;10766:26;;;;;;;10806:15;;10718:22;;1016:34:53;;;;2106:16:65;1015:100:53;10968:7:65;10766:219;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10717:268;;;;11003:19;:5;1316:4:63;1305:16;;1160:177;11003:19:65;1699:12:63;;10995:53:65;;1693:4:63;1689:23;;;1668:46;;;;;-1:-1:-1;11044:3:65;-1:-1:-1;10274:781:65;-1:-1:-1;;;10274:781:65:o;1864:1065:86:-;1949:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1949:21:86;1531:27;;;;;;;;;;;;;;;;;;2006:29;;;2141:22;2228:68;:12;2263:9;1521:59;2294:1;2228:34;:68::i;:::-;1531:27;;;;;;;;;;;;;;;;;;2198:98;;-1:-1:-1;2198:98:86;-1:-1:-1;2198:98:86;;-1:-1:-1;2456:68:86;:12;2198:98;1521:59;2522:1;2456:34;:68::i;:::-;1531:27;;;;;;;;;;;;;;;;;;2426:98;;-1:-1:-1;2426:98:86;-1:-1:-1;2426:98:86;;-1:-1:-1;2686:68:86;:12;2426:98;1521:59;2752:1;2686:34;:68::i;:::-;2871:41;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2871:41:86;;1864:1065;-1:-1:-1;;;;;1864:1065:86:o;7069:325:16:-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;2935:855:86:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3078:696:86;3104:19;;:26;3099:31;;3078:696;;;3168:19;;:23;;3188:2;;3168:23;;;;;;:::i;:::-;;;;;;;3156:35;;3231:10;3213:28;;:9;:14;;;:28;;;3209:551;;3318:12;;;;3332:16;;;;3272:15;;3265:84;;:40;;;;;3306:10;;3318:12;3265:40;:84::i;:::-;3209:551;;;3404:4;3378:31;;:9;:14;;;:31;;;3374:386;;3470:12;;;;3484:16;;;;3440:15;;3433:68;;:36;;;;;;:68::i;3374:386::-;3719:22;;;;;;;;;;;;;;3374:386;3132:4;;3078:696;;3796:551;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3941:390:86;3967:13;:20;;;:27;3962:2;:32;3941:390;;;4032:13;:20;;;4053:2;4032:24;;;;;;;;:::i;:::-;;;;;;;4020:36;;4096:10;4078:28;;:9;:14;;;:28;;;;:63;;;;-1:-1:-1;4110:14:86;;;;:31;;4136:4;4110:31;;4078:63;4074:140;;;4172:23;;;;;;;;;;;;;;4074:140;4239:15;;4273:14;;;;4289:12;;;;;4303;;;;4231:85;;;;;:41;27680:15:87;;;4231:85:86;;;27662:34:87;27732:15;;;27712:18;;;27705:43;27764:18;;;27757:34;;;;4231:41:86;;;;;27574:18:87;;4231:85:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3996:4:86;;;;;-1:-1:-1;3941:390:86;;-1:-1:-1;3941:390:86;4353:712;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:549:86;4526:13;:21;;;:28;4521:2;:33;4500:549;;;4592:13;:21;;;4614:2;4592:25;;;;;;;;:::i;:::-;;;;;;;4580:37;;4657:10;4639:28;;:9;:14;;;:28;;;;:63;;;;-1:-1:-1;4671:14:86;;;;:31;;4697:4;4671:31;;4639:63;4635:141;;;4733:24;;;;;;;;;;;;;;4635:141;4897:15;;4952:14;;;;4968:12;;;;;4982;;;;4996:16;;;;4888:146;;;;;:42;28176:15:87;;;4888:146:86;;;28158:34:87;28228:15;;;28208:18;;;28201:43;28260:18;;;28253:34;28303:18;;;28296:34;;;;28367:3;28346:19;;;28339:32;-1:-1:-1;28387:19:87;;;28380:30;4888:42:86;;;;;28427:19:87;;4888:146:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4556:4:86;;;;;-1:-1:-1;4500:549:86;;-1:-1:-1;4500:549:86;2145:730:33;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2802:56;;1786:473:34;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:34;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:34:o;5720:1757:62:-;5858:23;;6096:4;6089:12;;6206:5;6186:334;6225:5;6217:6;6214:17;6186:334;;;6326:4;6318:6;6314:17;6387:8;6360:24;6354:31;6351:45;6348:158;;6438:24;-1:-1:-1;6483:5:62;;6348:158;-1:-1:-1;6244:17:62;;;6186:334;;;6190:23;6611:15;6631:1;6596:36;6592:99;;6655:25;;;;;;;;4009::87;;;3982:18;;6655:25:62;3863:177:87;6592:99:62;6864:4;6858:11;6841:28;;6921:4;6906:13;6902:24;6980:4;6963:15;6959:26;6939:296;6999:5;6991:6;6988:17;6939:296;;;7193:28;;;7058:4;7040:23;;;;7090:17;;6939:296;;;6943:44;7325:12;7319:4;7312:26;7458:1;7451:4;7435:13;7421:12;7417:32;7413:43;7409:51;7394:13;7387:74;;6827:644;5720:1757;;;;;;;:::o;7682:628:16:-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;29353:2:87;8124:60:16;;;29335:21:87;29392:2;29372:18;;;29365:30;29431:31;29411:18;;;29404:59;29480:18;;8124:60:16;29151:353:87;8124:60:16;-1:-1:-1;8219:10:16;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;1355:203:29:-;1482:68;;27611:42:87;27680:15;;;1482:68:29;;;27662:34:87;27732:15;;27712:18;;;27705:43;27764:18;;;27757:34;;;1455:96:29;;1475:5;;1505:27;;27574:18:87;;1482:68:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;941:175::-;1050:58;;29713:42:87;29701:55;;1050:58:29;;;29683:74:87;29773:18;;;29766:34;;;1023:86:29;;1043:5;;1073:23;;29656:18:87;;1050:58:29;29509:297:87;5009:1456:33;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;30038:25:87;;;30111:4;30099:17;;30079:18;;;30072:45;;;;30133:18;;;30126:34;;;30176:18;;;30169:34;;;6276:24:33;;30010:19:87;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;;;;;-1:-1:-1;;6314:20:33;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;8832:540:16:-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;5173:642:29:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;;;;30922:2:87;5697:111:29;;;30904:21:87;30961:2;30941:18;;;30934:30;31000:34;30980:18;;;30973:62;31071:12;31051:18;;;31044:40;31101:19;;5697:111:29;30720:406:87;4108:223:31;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:31:o;14:332:87:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;598:93;543:154;:::o;702:184::-;754:77;751:1;744:88;851:4;848:1;841:15;875:4;872:1;865:15;891:253;963:2;957:9;1005:4;993:17;;1040:18;1025:34;;1061:22;;;1022:62;1019:88;;;1087:18;;:::i;:::-;1123:2;1116:22;891:253;:::o;1149:257::-;1221:4;1215:11;;;1253:17;;1300:18;1285:34;;1321:22;;;1282:62;1279:88;;;1347:18;;:::i;1411:334::-;1482:2;1476:9;1538:2;1528:13;;1543:66;1524:86;1512:99;;1641:18;1626:34;;1662:22;;;1623:62;1620:88;;;1688:18;;:::i;:::-;1724:2;1717:22;1411:334;;-1:-1:-1;1411:334:87:o;1750:589::-;1792:5;1845:3;1838:4;1830:6;1826:17;1822:27;1812:55;;1863:1;1860;1853:12;1812:55;1899:6;1886:20;1925:18;1921:2;1918:26;1915:52;;;1947:18;;:::i;:::-;1991:114;2099:4;2030:66;2023:4;2019:2;2015:13;2011:86;2007:97;1991:114;:::i;:::-;2130:2;2121:7;2114:19;2176:3;2169:4;2164:2;2156:6;2152:15;2148:26;2145:35;2142:55;;;2193:1;2190;2183:12;2142:55;2258:2;2251:4;2243:6;2239:17;2232:4;2223:7;2219:18;2206:55;2306:1;2281:16;;;2299:4;2277:27;2270:38;;;;2285:7;1750:589;-1:-1:-1;;;1750:589:87:o;2344:665::-;2439:6;2447;2455;2463;2516:3;2504:9;2495:7;2491:23;2487:33;2484:53;;;2533:1;2530;2523:12;2484:53;2572:9;2559:23;2591:31;2616:5;2591:31;:::i;:::-;2641:5;-1:-1:-1;2698:2:87;2683:18;;2670:32;2711:33;2670:32;2711:33;:::i;:::-;2763:7;-1:-1:-1;2817:2:87;2802:18;;2789:32;;-1:-1:-1;2872:2:87;2857:18;;2844:32;2899:18;2888:30;;2885:50;;;2931:1;2928;2921:12;2885:50;2954:49;2995:7;2986:6;2975:9;2971:22;2954:49;:::i;:::-;2944:59;;;2344:665;;;;;;;:::o;3267:591::-;3337:6;3345;3398:2;3386:9;3377:7;3373:23;3369:32;3366:52;;;3414:1;3411;3404:12;3366:52;3454:9;3441:23;3483:18;3524:2;3516:6;3513:14;3510:34;;;3540:1;3537;3530:12;3510:34;3578:6;3567:9;3563:22;3553:32;;3623:7;3616:4;3612:2;3608:13;3604:27;3594:55;;3645:1;3642;3635:12;3594:55;3685:2;3672:16;3711:2;3703:6;3700:14;3697:34;;;3727:1;3724;3717:12;3697:34;3772:7;3767:2;3758:6;3754:2;3750:15;3746:24;3743:37;3740:57;;;3793:1;3790;3783:12;3740:57;3824:2;3816:11;;;;;3846:6;;-1:-1:-1;3267:591:87;;-1:-1:-1;;;;3267:591:87:o;4045:183::-;4105:4;4138:18;4130:6;4127:30;4124:56;;;4160:18;;:::i;:::-;-1:-1:-1;4205:1:87;4201:14;4217:4;4197:25;;4045:183::o;4233:662::-;4287:5;4340:3;4333:4;4325:6;4321:17;4317:27;4307:55;;4358:1;4355;4348:12;4307:55;4394:6;4381:20;4420:4;4444:60;4460:43;4500:2;4460:43;:::i;:::-;4444:60;:::i;:::-;4538:15;;;4624:1;4620:10;;;;4608:23;;4604:32;;;4569:12;;;;4648:15;;;4645:35;;;4676:1;4673;4666:12;4645:35;4712:2;4704:6;4700:15;4724:142;4740:6;4735:3;4732:15;4724:142;;;4806:17;;4794:30;;4844:12;;;;4757;;4724:142;;;-1:-1:-1;4884:5:87;4233:662;-1:-1:-1;;;;;;4233:662:87:o;4900:2897::-;5089:6;5097;5105;5149:9;5140:7;5136:23;5179:3;5175:2;5171:12;5168:32;;;5196:1;5193;5186:12;5168:32;5220:4;5216:2;5212:13;5209:33;;;5238:1;5235;5228:12;5209:33;;5264:22;;:::i;:::-;5323:9;5310:23;5342:33;5367:7;5342:33;:::i;:::-;5384:22;;5425:2;5464:18;;;5451:32;5492:33;5451:32;5492:33;:::i;:::-;5541:14;;;5534:31;5617:2;5602:18;;5589:32;5630:33;5589:32;5630:33;:::i;:::-;5690:2;5679:14;;5672:31;5683:5;;-1:-1:-1;5778:4:87;5763:20;;5750:34;;5803:18;5833:14;;;5830:34;;;5860:1;5857;5850:12;5830:34;5883:61;5936:7;5927:6;5916:9;5912:22;5883:61;:::i;:::-;5873:71;;5997:3;5986:9;5982:19;5969:33;5953:49;;6027:2;6017:8;6014:16;6011:36;;;6043:1;6040;6033:12;6011:36;6081:8;6070:9;6066:24;6056:34;;6128:7;6121:4;6117:2;6113:13;6109:27;6099:55;;6150:1;6147;6140:12;6099:55;6186:2;6173:16;6209:60;6225:43;6265:2;6225:43;:::i;6209:60::-;6303:15;;;6385:1;6381:10;;;;6373:19;;6369:28;;;6334:12;;;;6409:19;;;6406:39;;;6441:1;6438;6431:12;6406:39;6473:2;6469;6465:11;6485:1282;6501:6;6496:3;6493:15;6485:1282;;;6587:3;6574:17;6623:2;6610:11;6607:19;6604:109;;;6667:1;6696:2;6692;6685:14;6604:109;6736:20;;6867:4;6780:16;;;6798:66;6776:89;6772:100;6769:190;;;6913:1;6942:2;6938;6931:14;6769:190;6987:22;;:::i;:::-;7058:2;7054;7050:11;7037:25;7075:33;7100:7;7075:33;:::i;:::-;7121:24;;7195:2;7187:11;;7174:25;7215:16;;;7212:106;;;7272:1;7301:2;7297;7290:14;7212:106;7356:65;7413:7;7408:2;7397:8;7393:2;7389:17;7385:26;7356:65;:::i;:::-;7351:2;7342:7;7338:16;7331:91;;7472:4;7468:2;7464:13;7451:27;7507:2;7497:8;7494:16;7491:109;;;7552:1;7582:3;7577;7570:16;7491:109;7638:53;7683:7;7678:2;7667:8;7663:2;7659:17;7655:26;7638:53;:::i;:::-;7633:2;7620:16;;7613:79;-1:-1:-1;7705:20:87;;-1:-1:-1;7745:12:87;;;;6518;;6485:1282;;;6489:3;7786:5;7776:15;;;;;;;;4900:2897;;;;;:::o;8161:869::-;8229:3;8267:5;8261:12;8294:6;8289:3;8282:19;8320:4;8349:2;8344:3;8340:12;8333:19;;8386:2;8379:5;8375:14;8407:1;8417:588;8431:6;8428:1;8425:13;8417:588;;;8490:13;;8597:9;;8526:42;8593:18;;;8581:31;;8656:11;;;8650:18;8646:27;;8632:12;;;8625:49;8697:4;8745:11;;;8739:18;8735:27;;;8721:12;;;8714:49;8786:4;8830:11;;;8824:18;8810:12;;;8803:40;8866:4;8910:11;;;8904:18;8890:12;;;8883:40;8952:4;8943:14;;;;8980:15;;;;8453:1;8446:9;8417:588;;;-1:-1:-1;9021:3:87;;8161:869;-1:-1:-1;;;;;8161:869:87:o;9035:1602::-;9193:4;9222:2;9251;9240:9;9233:21;9273:3;9314:2;9303:9;9299:18;9352:6;9346:13;9395:4;9390:2;9379:9;9375:18;9368:32;9420:6;9455:12;9449:19;9492:6;9484;9477:22;9530:3;9519:9;9515:19;9508:26;;9575:2;9561:12;9557:21;9543:35;;9596:1;9587:10;;9606:194;9620:6;9617:1;9614:13;9606:194;;;9669:51;9716:3;9707:6;9701:13;7879:42;7960:2;7952:5;7946:12;7942:21;7937:3;7930:34;8025:2;8017:4;8010:5;8006:16;8000:23;7996:32;7989:4;7984:3;7980:14;7973:56;8090:2;8082:4;8075:5;8071:16;8065:23;8061:32;8054:4;8049:3;8045:14;8038:56;;8143:4;8136:5;8132:16;8126:23;8119:4;8114:3;8110:14;8103:47;7802:354;;;9669:51;9775:15;;;;9642:1;9635:9;;;;;9740:12;;;;9606:194;;;-1:-1:-1;9837:15:87;;;9831:22;9872:66;9978:19;;;9974:28;;9969:2;9954:18;;9947:56;10053:21;;10083;;;10159:23;;;;-1:-1:-1;9872:66:87;-1:-1:-1;10202:1:87;;10122:12;;;10212:214;10228:8;10223:3;10220:17;10212:214;;;10283:55;10332:5;10321:8;10315:15;7879:42;7960:2;7952:5;7946:12;7942:21;7937:3;7930:34;8025:2;8017:4;8010:5;8006:16;8000:23;7996:32;7989:4;7984:3;7980:14;7973:56;8090:2;8082:4;8075:5;8071:16;8065:23;8061:32;8054:4;8049:3;8045:14;8038:56;;8143:4;8136:5;8132:16;8126:23;8119:4;8114:3;8110:14;8103:47;7802:354;;;10283:55;10399:17;;;;10256:1;10247:11;;;;;10360:14;;;;10212:214;;;10216:3;10475:2;10467:6;10463:15;10457:22;10435:44;;10544:2;10532:9;10525:5;10521:21;10517:30;10510:4;10499:9;10495:20;10488:60;10565:66;10625:5;10609:14;10565:66;:::i;:::-;10557:74;9035:1602;-1:-1:-1;;;;;;;;;9035:1602:87:o;10642:626::-;10739:6;10747;10800:2;10788:9;10779:7;10775:23;10771:32;10768:52;;;10816:1;10813;10806:12;10768:52;10856:9;10843:23;10885:18;10926:2;10918:6;10915:14;10912:34;;;10942:1;10939;10932:12;10912:34;10980:6;10969:9;10965:22;10955:32;;11025:7;11018:4;11014:2;11010:13;11006:27;10996:55;;11047:1;11044;11037:12;10996:55;11087:2;11074:16;11113:2;11105:6;11102:14;11099:34;;;11129:1;11126;11119:12;11099:34;11182:7;11177:2;11167:6;11164:1;11160:14;11156:2;11152:23;11148:32;11145:45;11142:65;;;11203:1;11200;11193:12;11273:250;11358:1;11368:113;11382:6;11379:1;11376:13;11368:113;;;11458:11;;;11452:18;11439:11;;;11432:39;11404:2;11397:10;11368:113;;;-1:-1:-1;;11515:1:87;11497:16;;11490:27;11273:250::o;11528:329::-;11569:3;11607:5;11601:12;11634:6;11629:3;11622:19;11650:76;11719:6;11712:4;11707:3;11703:14;11696:4;11689:5;11685:16;11650:76;:::i;:::-;11771:2;11759:15;11776:66;11755:88;11746:98;;;;11846:4;11742:109;;11528:329;-1:-1:-1;;11528:329:87:o;11862:859::-;12022:4;12051:2;12091;12080:9;12076:18;12121:2;12110:9;12103:21;12144:6;12179;12173:13;12210:6;12202;12195:22;12248:2;12237:9;12233:18;12226:25;;12310:2;12300:6;12297:1;12293:14;12282:9;12278:30;12274:39;12260:53;;12348:2;12340:6;12336:15;12369:1;12379:313;12393:6;12390:1;12387:13;12379:313;;;12482:66;12470:9;12462:6;12458:22;12454:95;12449:3;12442:108;12573:39;12605:6;12596;12590:13;12573:39;:::i;:::-;12563:49;-1:-1:-1;12670:12:87;;;;12635:15;;;;12415:1;12408:9;12379:313;;;-1:-1:-1;12709:6:87;;11862:859;-1:-1:-1;;;;;;;11862:859:87:o;12726:1071::-;12880:6;12888;12896;12904;12912;12965:3;12953:9;12944:7;12940:23;12936:33;12933:53;;;12982:1;12979;12972:12;12933:53;13021:9;13008:23;13040:31;13065:5;13040:31;:::i;:::-;13090:5;-1:-1:-1;13147:2:87;13132:18;;13119:32;13160:33;13119:32;13160:33;:::i;:::-;13212:7;-1:-1:-1;13270:2:87;13255:18;;13242:32;13293:18;13323:14;;;13320:34;;;13350:1;13347;13340:12;13320:34;13373:61;13426:7;13417:6;13406:9;13402:22;13373:61;:::i;:::-;13363:71;;13487:2;13476:9;13472:18;13459:32;13443:48;;13516:2;13506:8;13503:16;13500:36;;;13532:1;13529;13522:12;13500:36;13555:63;13610:7;13599:8;13588:9;13584:24;13555:63;:::i;:::-;13545:73;;13671:3;13660:9;13656:19;13643:33;13627:49;;13701:2;13691:8;13688:16;13685:36;;;13717:1;13714;13707:12;13685:36;;13740:51;13783:7;13772:8;13761:9;13757:24;13740:51;:::i;:::-;13730:61;;;12726:1071;;;;;;;;:::o;13802:734::-;13906:6;13914;13922;13930;13938;13991:3;13979:9;13970:7;13966:23;13962:33;13959:53;;;14008:1;14005;13998:12;13959:53;14047:9;14034:23;14066:31;14091:5;14066:31;:::i;:::-;14116:5;-1:-1:-1;14173:2:87;14158:18;;14145:32;14186:33;14145:32;14186:33;:::i;:::-;14238:7;-1:-1:-1;14292:2:87;14277:18;;14264:32;;-1:-1:-1;14343:2:87;14328:18;;14315:32;;-1:-1:-1;14398:3:87;14383:19;;14370:33;14426:18;14415:30;;14412:50;;;14458:1;14455;14448:12;14412:50;14481:49;14522:7;14513:6;14502:9;14498:22;14481:49;:::i;14956:707::-;15020:5;15068:4;15056:9;15051:3;15047:19;15043:30;15040:50;;;15086:1;15083;15076:12;15040:50;15108:22;;:::i;:::-;15099:31;;15167:9;15154:23;15186:33;15211:7;15186:33;:::i;:::-;15228:22;;15301:2;15286:18;;15273:32;15324:18;15354:14;;;15351:34;;;15381:1;15378;15371:12;15351:34;15417:45;15458:3;15449:6;15438:9;15434:22;15417:45;:::i;:::-;15412:2;15405:5;15401:14;15394:69;15516:2;15505:9;15501:18;15488:32;15472:48;;15545:2;15535:8;15532:16;15529:36;;;15561:1;15558;15551:12;15529:36;;15597:59;15652:3;15641:8;15630:9;15626:24;15597:59;:::i;:::-;15592:2;15585:5;15581:14;15574:83;;14956:707;;;;:::o;15668:1589::-;15758:6;15789:2;15832;15820:9;15811:7;15807:23;15803:32;15800:52;;;15848:1;15845;15838:12;15800:52;15888:9;15875:23;15917:18;15958:2;15950:6;15947:14;15944:34;;;15974:1;15971;15964:12;15944:34;15997:22;;;;16053:4;16035:16;;;16031:27;16028:47;;;16071:1;16068;16061:12;16028:47;16097:22;;:::i;:::-;16157:2;16144:16;16185:2;16175:8;16172:16;16169:36;;;16201:1;16198;16191:12;16169:36;16228:63;16283:7;16272:8;16268:2;16264:17;16228:63;:::i;:::-;16221:5;16214:78;;16338:2;16334;16330:11;16317:25;16367:2;16357:8;16354:16;16351:36;;;16383:1;16380;16373:12;16351:36;16414:8;16410:2;16406:17;16396:27;;;16461:7;16454:4;16450:2;16446:13;16442:27;16432:55;;16483:1;16480;16473:12;16432:55;16519:2;16506:16;16542:60;16558:43;16598:2;16558:43;:::i;16542:60::-;16636:15;;;16718:1;16714:10;;;;16706:19;;16702:28;;;16667:12;;;;16742:19;;;16739:39;;;16774:1;16771;16764:12;16739:39;16806:2;16802;16798:11;16818:371;16834:6;16829:3;16826:15;16818:371;;;16920:3;16907:17;16956:2;16943:11;16940:19;16937:109;;;17000:1;17029:2;17025;17018:14;16937:109;17071:75;17138:7;17133:2;17119:11;17115:2;17111:20;17107:29;17071:75;:::i;:::-;17059:88;;-1:-1:-1;17167:12:87;;;;16851;;16818:371;;;-1:-1:-1;17205:14:87;;;17198:29;;;;-1:-1:-1;17209:5:87;15668:1589;-1:-1:-1;;;;;;15668:1589:87:o;17262:435::-;17315:3;17353:5;17347:12;17380:6;17375:3;17368:19;17406:4;17435:2;17430:3;17426:12;17419:19;;17472:2;17465:5;17461:14;17493:1;17503:169;17517:6;17514:1;17511:13;17503:169;;;17578:13;;17566:26;;17612:12;;;;17647:15;;;;17539:1;17532:9;17503:169;;17702:481;17810:42;17802:5;17796:12;17792:61;17787:3;17780:74;17762:3;17900:4;17893:5;17889:16;17883:23;17938:4;17931;17926:3;17922:14;17915:28;17964:46;18004:4;17999:3;17995:14;17981:12;17964:46;:::i;:::-;17952:58;;18058:4;18051:5;18047:16;18041:23;18106:3;18100:4;18096:14;18089:4;18084:3;18080:14;18073:38;18127:50;18172:4;18156:14;18127:50;:::i;:::-;18120:57;17702:481;-1:-1:-1;;;;;17702:481:87:o;18188:1317::-;18419:42;18411:6;18407:55;18396:9;18389:74;18370:4;18482:2;18520;18515;18504:9;18500:18;18493:30;18558:6;18552:13;18601:2;18596;18585:9;18581:18;18574:30;18627:70;18692:3;18681:9;18677:19;18663:12;18627:70;:::i;:::-;18734:15;;;18728:22;18790;;;18814:66;18786:95;18781:2;18766:18;;18759:123;18931:21;;18961:22;;;18613:84;;-1:-1:-1;19096:23:87;;;18999:15;;;;19057:1;19053:14;;;19041:27;;19037:36;;19137:1;19147:329;19161:6;19158:1;19155:13;19147:329;;;19247:66;19238:6;19230;19226:19;19222:92;19217:3;19210:105;19338:58;19389:6;19380;19374:13;19338:58;:::i;:::-;19419:15;;;;19454:12;;;;19328:68;-1:-1:-1;19183:1:87;19176:9;19147:329;;;-1:-1:-1;19493:6:87;18188:1317;-1:-1:-1;;;;;;;;;18188:1317:87:o;19709:184::-;19761:77;19758:1;19751:88;19858:4;19855:1;19848:15;19882:4;19879:1;19872:15;19898:580;19975:4;19981:6;20041:11;20028:25;20131:66;20120:8;20104:14;20100:29;20096:102;20076:18;20072:127;20062:155;;20213:1;20210;20203:12;20062:155;20240:33;;20292:20;;;-1:-1:-1;20335:18:87;20324:30;;20321:50;;;20367:1;20364;20357:12;20321:50;20400:4;20388:17;;-1:-1:-1;20431:14:87;20427:27;;;20417:38;;20414:58;;;20468:1;20465;20458:12;20483:349;20522:3;20553:66;20546:5;20543:77;20540:257;;20653:77;20650:1;20643:88;20754:4;20751:1;20744:15;20782:4;20779:1;20772:15;20540:257;-1:-1:-1;20824:1:87;20813:13;;20483:349::o;20837:589::-;20900:3;20938:5;20932:12;20965:6;20960:3;20953:19;20991:4;21020:2;21015:3;21011:12;21004:19;;21045:3;21085:6;21082:1;21078:14;21073:3;21069:24;21127:2;21120:5;21116:14;21148:1;21158:242;21172:6;21169:1;21166:13;21158:242;;;21243:5;21237:4;21233:16;21228:3;21221:29;21271:49;21315:4;21306:6;21300:13;21271:49;:::i;:::-;21378:12;;;;21263:57;-1:-1:-1;21343:15:87;;;;21194:1;21187:9;21158:242;;;-1:-1:-1;21416:4:87;;20837:589;-1:-1:-1;;;;;;;20837:589:87:o;21431:441::-;21700:42;21692:6;21688:55;21677:9;21670:74;21780:2;21775;21764:9;21760:18;21753:30;21651:4;21800:66;21862:2;21851:9;21847:18;21839:6;21800:66;:::i;22471:625::-;22774:2;22763:9;22756:21;22737:4;22800:44;22840:2;22829:9;22825:18;22817:6;22800:44;:::i;:::-;22892:9;22884:6;22880:22;22875:2;22864:9;22860:18;22853:50;22926:44;22963:6;22955;22926:44;:::i;:::-;22912:58;;23018:9;23010:6;23006:22;23001:2;22990:9;22986:18;22979:50;23046:44;23083:6;23075;23046:44;:::i;23101:572::-;23242:6;23250;23258;23311:2;23299:9;23290:7;23286:23;23282:32;23279:52;;;23327:1;23324;23317:12;23279:52;23359:9;23353:16;23378:31;23403:5;23378:31;:::i;:::-;23478:2;23463:18;;23457:25;23428:5;;-1:-1:-1;23491:33:87;23457:25;23491:33;:::i;:::-;23595:2;23580:18;;23574:25;23543:7;;-1:-1:-1;23608:33:87;23574:25;23608:33;:::i;:::-;23660:7;23650:17;;;23101:572;;;;;:::o;24570:368::-;24813:6;24802:9;24795:25;24856:2;24851;24840:9;24836:18;24829:30;24776:4;24876:56;24928:2;24917:9;24913:18;24905:6;24876:56;:::i;24943:184::-;24995:77;24992:1;24985:88;25092:4;25089:1;25082:15;25116:4;25113:1;25106:15;25132:687;25559:42;25551:6;25547:55;25536:9;25529:74;25639:6;25634:2;25623:9;25619:18;25612:34;25682:6;25677:2;25666:9;25662:18;25655:34;25725:3;25720:2;25709:9;25705:18;25698:31;25510:4;25746:67;25808:3;25797:9;25793:19;25785:6;25746:67;:::i;25824:659::-;25889:5;25942:3;25935:4;25927:6;25923:17;25919:27;25909:55;;25960:1;25957;25950:12;25909:55;25989:6;25983:13;26015:4;26039:60;26055:43;26095:2;26055:43;:::i;26039:60::-;26133:15;;;26219:1;26215:10;;;;26203:23;;26199:32;;;26164:12;;;;26243:15;;;26240:35;;;26271:1;26268;26261:12;26240:35;26307:2;26299:6;26295:15;26319:135;26335:6;26330:3;26327:15;26319:135;;;26401:10;;26389:23;;26432:12;;;;26352;;26319:135;;26488:614;26617:6;26625;26678:2;26666:9;26657:7;26653:23;26649:32;26646:52;;;26694:1;26691;26684:12;26646:52;26727:9;26721:16;26756:18;26797:2;26789:6;26786:14;26783:34;;;26813:1;26810;26803:12;26783:34;26836:72;26900:7;26891:6;26880:9;26876:22;26836:72;:::i;:::-;26826:82;;26954:2;26943:9;26939:18;26933:25;26917:41;;26983:2;26973:8;26970:16;26967:36;;;26999:1;26996;26989:12;26967:36;;27022:74;27088:7;27077:8;27066:9;27062:24;27022:74;:::i;:::-;27012:84;;;26488:614;;;;;:::o;27107:287::-;27236:3;27274:6;27268:13;27290:66;27349:6;27344:3;27337:4;27329:6;27325:17;27290:66;:::i;:::-;27372:16;;;;;27107:287;-1:-1:-1;;27107:287:87:o;28457:288::-;28632:6;28621:9;28614:25;28675:2;28670;28659:9;28655:18;28648:30;28595:4;28695:44;28735:2;28724:9;28720:18;28712:6;28695:44;:::i;28750:184::-;28820:6;28873:2;28861:9;28852:7;28848:23;28844:32;28841:52;;;28889:1;28886;28879:12;28841:52;-1:-1:-1;28912:16:87;;28750:184;-1:-1:-1;28750:184:87:o;30214:219::-;30363:2;30352:9;30345:21;30326:4;30383:44;30423:2;30412:9;30408:18;30400:6;30383:44;:::i;30438:277::-;30505:6;30558:2;30546:9;30537:7;30533:23;30529:32;30526:52;;;30574:1;30571;30564:12;30526:52;30606:9;30600:16;30659:5;30652:13;30645:21;30638:5;30635:32;30625:60;;30681:1;30678;30671:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "flow((address,address,address),uint256[],(address,uint256[],bytes)[])": "f83d765a",
    "initialize(bytes)": "439fab91",
    "multicall(bytes[])": "ac9650d8",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "previewFlow((address,address,address),uint256[],(address,uint256[],bytes)[])": "90bcad69",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowMinOutputs\",\"type\":\"uint256\"}],\"name\":\"BadMinStackLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Sentinel\",\"name\":\"sentinel\",\"type\":\"uint256\"}],\"name\":\"MissingSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unregisteredHash\",\"type\":\"bytes32\"}],\"name\":\"UnregisteredFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC1155Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC20Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC721Flow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[][]\",\"name\":\"context\",\"type\":\"uint256[][]\"}],\"name\":\"Context\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Evaluable\",\"name\":\"evaluable\",\"type\":\"tuple\"}],\"name\":\"FlowInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"dummyConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2[]\",\"name\":\"config\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct FlowConfigV2\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable_\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"callerContext_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContexts_\",\"type\":\"tuple[]\"}],\"name\":\"flow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable_\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"callerContext_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContexts_\",\"type\":\"tuple[]\"}],\"name\":\"previewFlow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"params\":{\"flowMinOutputs\":\"The min outputs for the flow.\"}}],\"MissingSentinel(uint256)\":[{\"params\":{\"sentinel\":\"The sentinel that was not found.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}],\"UnregisteredFlow(bytes32)\":[{\"params\":{\"unregisteredHash\":\"Hash of the unregistered flow.\"}}],\"UnsupportedERC1155Flow()\":[{\"details\":\"Thrown for unsupported erc1155 transfers.\"}],\"UnsupportedERC20Flow()\":[{\"details\":\"Thrown for unsupported erc20 transfers.\"}],\"UnsupportedERC721Flow()\":[{\"details\":\"Thrown for unsupported erc721 transfers.\"}]},\"events\":{\"Context(address,uint256[][])\":{\"params\":{\"context\":\"The context that was built.\",\"sender\":\"`msg.sender` building the context.\"}},\"FlowInitialized(address,(address,address,address))\":{\"params\":{\"evaluable\":\"The evaluable of the flow that was registered. The hash of this evaluable is used as the key in `registeredFlows` so users MUST provide the same evaluable when they evaluate the flow.\",\"sender\":\"The address that registered the flow.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"multicall(bytes[])\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"notice\":\"Thrown when the min outputs for a flow is fewer than the sentinels. This is always an implementation bug as the min outputs and sentinel count should both be compile time constants.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MissingSentinel(uint256)\":[{\"notice\":\"Thrown when the sentinel cannot be found. This can be because the sentinel was not in stack, but also if the upper pointer is below the lower, or the sentinel is in the stack but not aligned with the tuples size.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}],\"UnregisteredFlow(bytes32)\":[{\"notice\":\"Thrown when the flow being evaluated is unregistered.\"}]},\"events\":{\"Context(address,uint256[][])\":{\"notice\":\"Calling contracts SHOULD emit `Context` before calling `eval` if they are able. Notably `eval` MAY be called within a static call which means that events cannot be emitted, in which case this does not apply. It MAY NOT be useful to emit this multiple times for several eval calls if they all share a common context, in which case a single emit is sufficient.\"},\"FlowInitialized(address,(address,address,address))\":{\"notice\":\"This event is emitted when a flow is registered at initialization.\"},\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/basic/Flow.sol\":\"Flow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/rain.factory/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.interpreter/lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol\":{\"keccak256\":\"0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb\",\"dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a\",\"dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d\",\"dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d\",\"dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.interpreter/lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.interpreter/lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol\":{\"keccak256\":\"0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a\",\"dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA\"]},\"lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768\",\"dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f\",\"dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"lib/rain.interpreter/src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb\",\"dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c\",\"dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibMemory.sol\":{\"keccak256\":\"0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830\",\"dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibStackPointer.sol\":{\"keccak256\":\"0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8\",\"dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P\"]},\"lib/rain.solmem/src/lib/LibStackSentinel.sol\":{\"keccak256\":\"0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906\",\"dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.solmem/src/lib/LibUint256Matrix.sol\":{\"keccak256\":\"0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c\",\"dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89\"]},\"src/abstract/FlowCommon.sol\":{\"keccak256\":\"0x22de79fb3d0116f61d38e95e5d8ae142cae3ba75d35b155653bf0c3d7d0209a4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5fd89565a68c00b599afe30990e207f0b6cae62fec3be87bf1ec99516dc753d0\",\"dweb:/ipfs/QmUPzxvZCsuC3wpfDLcnZdc1B4Fv5J9eUswcptKzNM9scp\"]},\"src/concrete/basic/Flow.sol\":{\"keccak256\":\"0x1c399504914530024717ded962535a47bcd74cd80759e238b1b949528bcd8d5f\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b168ab45089ea4e6fadbca519aaf0c9825c133a7259402313e7dc9d8756bc189\",\"dweb:/ipfs/QmXmGwyiPtYH6sG57DS9K38Bk2FzkxDhcuSjyXK26yCGcW\"]},\"src/interface/IFlowV3.sol\":{\"keccak256\":\"0x6e488724d40e76d0078918983b5560315573120e779d57231302844862a61fe5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bfad5a8694506d9d0ed2f6a254b7fd2dc4555efc2511e48c0ccf8a17e52a3c9a\",\"dweb:/ipfs/QmU4Y97Exj6pwpE6uVTCzUSD3REGTJr6YDpLK47xLthxTT\"]},\"src/interface/unstable/IFlowV4.sol\":{\"keccak256\":\"0xc4da97e30663666f1d9351fa780bbbc409502e337294469957baf9f3445f354c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b327d8742609d31eb1a51dd7478dce4ea0847b56010f50bb96a3f7146fe0c7a4\",\"dweb:/ipfs/QmTCCvJGwk8D4eJcfSC3UcvUie5CrsSkuR29rtgB6e6pq7\"]},\"src/lib/LibFlow.sol\":{\"keccak256\":\"0x134b25ace1f12b97ec2c1006127e88d662bbc69ff4d8fb8f91cd414d814a7ce5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a323695a291496316b3dda017e9104500c155dc72bc5051ab220a688da555e1e\",\"dweb:/ipfs/QmZ3zfZoeYv2eGQNqxxS5hPKc6Pq91psLvCkj4ihhUW1N1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowMinOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadMinStackLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "Sentinel",
              "name": "sentinel",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingSentinel"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "unregisteredHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnregisteredFlow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC1155Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC20Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC721Flow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[][]",
              "name": "context",
              "type": "uint256[][]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Context",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct Evaluable",
              "name": "evaluable",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlowInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct FlowConfigV2",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "dummyConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "struct EvaluableConfigV2[]",
                  "name": "config",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct Evaluable",
              "name": "evaluable_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "callerContext_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SignedContextV1[]",
              "name": "signedContexts_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "context",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flow",
          "outputs": [
            {
              "internalType": "struct FlowTransferV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Evaluable",
              "name": "evaluable_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "callerContext_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SignedContextV1[]",
              "name": "signedContexts_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "context",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewFlow",
          "outputs": [
            {
              "internalType": "struct FlowTransferV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "multicall(bytes[])": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/rain.factory/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.interpreter/lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/basic/Flow.sol": "Flow"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol": {
        "keccak256": "0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4",
        "urls": [
          "bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb",
          "dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a",
        "urls": [
          "bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a",
          "dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
        "keccak256": "0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08",
        "urls": [
          "bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d",
          "dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a",
        "urls": [
          "bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d",
          "dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582",
        "urls": [
          "bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf",
          "dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol": {
        "keccak256": "0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db",
        "urls": [
          "bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a",
          "dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol": {
        "keccak256": "0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6",
        "urls": [
          "bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768",
          "dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e",
        "urls": [
          "bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f",
          "dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085",
        "urls": [
          "bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb",
          "dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364",
        "urls": [
          "bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c",
          "dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemory.sol": {
        "keccak256": "0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5",
        "urls": [
          "bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830",
          "dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackPointer.sol": {
        "keccak256": "0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad",
        "urls": [
          "bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8",
          "dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackSentinel.sol": {
        "keccak256": "0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3",
        "urls": [
          "bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906",
          "dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Matrix.sol": {
        "keccak256": "0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd",
        "urls": [
          "bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c",
          "dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89"
        ],
        "license": "CAL"
      },
      "src/abstract/FlowCommon.sol": {
        "keccak256": "0x22de79fb3d0116f61d38e95e5d8ae142cae3ba75d35b155653bf0c3d7d0209a4",
        "urls": [
          "bzz-raw://5fd89565a68c00b599afe30990e207f0b6cae62fec3be87bf1ec99516dc753d0",
          "dweb:/ipfs/QmUPzxvZCsuC3wpfDLcnZdc1B4Fv5J9eUswcptKzNM9scp"
        ],
        "license": "CAL"
      },
      "src/concrete/basic/Flow.sol": {
        "keccak256": "0x1c399504914530024717ded962535a47bcd74cd80759e238b1b949528bcd8d5f",
        "urls": [
          "bzz-raw://b168ab45089ea4e6fadbca519aaf0c9825c133a7259402313e7dc9d8756bc189",
          "dweb:/ipfs/QmXmGwyiPtYH6sG57DS9K38Bk2FzkxDhcuSjyXK26yCGcW"
        ],
        "license": "CAL"
      },
      "src/interface/IFlowV3.sol": {
        "keccak256": "0x6e488724d40e76d0078918983b5560315573120e779d57231302844862a61fe5",
        "urls": [
          "bzz-raw://bfad5a8694506d9d0ed2f6a254b7fd2dc4555efc2511e48c0ccf8a17e52a3c9a",
          "dweb:/ipfs/QmU4Y97Exj6pwpE6uVTCzUSD3REGTJr6YDpLK47xLthxTT"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IFlowV4.sol": {
        "keccak256": "0xc4da97e30663666f1d9351fa780bbbc409502e337294469957baf9f3445f354c",
        "urls": [
          "bzz-raw://b327d8742609d31eb1a51dd7478dce4ea0847b56010f50bb96a3f7146fe0c7a4",
          "dweb:/ipfs/QmTCCvJGwk8D4eJcfSC3UcvUie5CrsSkuR29rtgB6e6pq7"
        ],
        "license": "CAL"
      },
      "src/lib/LibFlow.sol": {
        "keccak256": "0x134b25ace1f12b97ec2c1006127e88d662bbc69ff4d8fb8f91cd414d814a7ce5",
        "urls": [
          "bzz-raw://a323695a291496316b3dda017e9104500c155dc72bc5051ab220a688da555e1e",
          "dweb:/ipfs/QmZ3zfZoeYv2eGQNqxxS5hPKc6Pq91psLvCkj4ihhUW1N1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/basic/Flow.sol",
    "id": 12391,
    "exportedSymbols": {
      "BadMinStackLength": [
        11919
      ],
      "CALLER_META_HASH": [
        12186
      ],
      "DEFAULT_STATE_NAMESPACE": [
        10097
      ],
      "DeployerDiscoverableMetaV2": [
        9969
      ],
      "DeployerDiscoverableMetaV2ConstructionConfig": [
        9924
      ],
      "ERC1155Holder": [
        1746
      ],
      "ERC1155Transfer": [
        14694
      ],
      "ERC20Transfer": [
        14674
      ],
      "ERC721Holder": [
        3675
      ],
      "ERC721Transfer": [
        14683
      ],
      "EncodedDispatch": [
        10085
      ],
      "Evaluable": [
        10999
      ],
      "EvaluableConfig": [
        10981
      ],
      "EvaluableConfigV2": [
        10990
      ],
      "FLOW_ENTRYPOINT": [
        11931
      ],
      "FLOW_IS_NOT_REGISTERED": [
        11947
      ],
      "FLOW_IS_REGISTERED": [
        11943
      ],
      "FLOW_MAX_OUTPUTS": [
        11939
      ],
      "Flow": [
        12390
      ],
      "FlowCommon": [
        12171
      ],
      "FlowConfigV2": [
        15619
      ],
      "FlowTransferV1": [
        14707
      ],
      "FullyQualifiedNamespace": [
        10046
      ],
      "ICLONEABLE_V2_SUCCESS": [
        9741
      ],
      "ICloneableV2": [
        9754
      ],
      "IERC1155": [
        5579
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V1": [
        9975
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        10164
      ],
      "IERC20": [
        5657
      ],
      "IERC721": [
        6185
      ],
      "IExpressionDeployerV1": [
        10011
      ],
      "IExpressionDeployerV2": [
        10199
      ],
      "IFlowV4": [
        15659
      ],
      "IInterpreterCallerV2": [
        10041
      ],
      "IInterpreterStoreV1": [
        10078
      ],
      "IInterpreterV1": [
        10128
      ],
      "IMetaV1": [
        9830
      ],
      "LibContext": [
        10780
      ],
      "LibDeployerDiscoverable": [
        10870
      ],
      "LibEncodedDispatch": [
        10965
      ],
      "LibEvaluable": [
        11012
      ],
      "LibFlow": [
        16066
      ],
      "LibMemCpy": [
        11203
      ],
      "LibMemory": [
        11214
      ],
      "LibMeta": [
        9914
      ],
      "LibPointer": [
        11338
      ],
      "LibStackPointer": [
        11501
      ],
      "LibStackSentinel": [
        11557
      ],
      "LibUint256Array": [
        11785
      ],
      "LibUint256Matrix": [
        11889
      ],
      "META_MAGIC_NUMBER_V1": [
        9819
      ],
      "MIN_FLOW_SENTINELS": [
        11923
      ],
      "MissingSentinel": [
        11510
      ],
      "Multicall": [
        4122
      ],
      "NO_STORE": [
        10055
      ],
      "NotRainMetaV1": [
        9815
      ],
      "Operand": [
        10089
      ],
      "OutOfBoundsTruncate": [
        11567
      ],
      "Pointer": [
        11218
      ],
      "RAIN_FLOW_SENTINEL": [
        15711
      ],
      "ReentrancyGuard": [
        5457
      ],
      "SENTINEL_HIGH_BITS": [
        15693
      ],
      "SIGNED_CONTEXT_CONTEXT_OFFSET": [
        10027
      ],
      "SIGNED_CONTEXT_SIGNATURE_OFFSET": [
        10030
      ],
      "SIGNED_CONTEXT_SIGNER_OFFSET": [
        10024
      ],
      "SafeCast": [
        9628
      ],
      "SafeERC20": [
        6069
      ],
      "Sentinel": [
        11512
      ],
      "SignedContextV1": [
        10021
      ],
      "SourceIndex": [
        10083
      ],
      "StateNamespace": [
        10087
      ],
      "UnalignedStackPointer": [
        11349
      ],
      "UnexpectedMetaHash": [
        9810
      ],
      "UnregisteredFlow": [
        11914
      ],
      "UnsupportedERC1155Flow": [
        15687
      ],
      "UnsupportedERC20Flow": [
        15681
      ],
      "UnsupportedERC721Flow": [
        15684
      ],
      "UnsupportedNativeFlow": [
        15678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2447:66",
    "nodes": [
      {
        "id": 12173,
        "nodeType": "PragmaDirective",
        "src": "32:24:66",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 12174,
        "nodeType": "ImportDirective",
        "src": "58:53:66",
        "nodes": [],
        "absolutePath": "lib/rain.factory/src/interface/ICloneableV2.sol",
        "file": "rain.factory/src/interface/ICloneableV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 9755,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12175,
        "nodeType": "ImportDirective",
        "src": "112:39:66",
        "nodes": [],
        "absolutePath": "src/abstract/FlowCommon.sol",
        "file": "../../abstract/FlowCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 12172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12176,
        "nodeType": "ImportDirective",
        "src": "152:31:66",
        "nodes": [],
        "absolutePath": "src/lib/LibFlow.sol",
        "file": "../../lib/LibFlow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 16067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12177,
        "nodeType": "ImportDirective",
        "src": "184:45:66",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Array.sol",
        "file": "rain.solmem/lib/LibUint256Array.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 11786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12178,
        "nodeType": "ImportDirective",
        "src": "230:46:66",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Matrix.sol",
        "file": "rain.solmem/lib/LibUint256Matrix.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 11890,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12180,
        "nodeType": "ImportDirective",
        "src": "277:94:66",
        "nodes": [],
        "absolutePath": "lib/rain.factory/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12391,
        "sourceUnit": 5458,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12179,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5457,
              "src": "285:15:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12186,
        "nodeType": "VariableDeclaration",
        "src": "373:111:66",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "390:16:66",
        "scope": 12391,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 12181,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "373:7:66",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307839356465363861343437613437376238666162313037303166313236356233653835613938623234373130623365343065366139366161366437363236336263",
              "id": 12184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "417:66:66",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_67787576697883643602210265305009088817220620447107760665869635623719092249532_by_1",
                "typeString": "int_const 6778...(69 digits omitted)...9532"
              },
              "value": "0x95de68a447a477b8fab10701f1265b3e85a98b24710b3e40e6a96aa6d76263bc"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_67787576697883643602210265305009088817220620447107760665869635623719092249532_by_1",
                "typeString": "int_const 6778...(69 digits omitted)...9532"
              }
            ],
            "id": 12183,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "409:7:66",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 12182,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "409:7:66",
              "typeDescriptions": {}
            }
          },
          "id": 12185,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "409:75:66",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 12390,
        "nodeType": "ContractDefinition",
        "src": "487:1991:66",
        "nodes": [
          {
            "id": 12198,
            "nodeType": "UsingForDirective",
            "src": "561:36:66",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12195,
              "name": "LibUint256Array",
              "nameLocations": [
                "567:15:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11785,
              "src": "567:15:66"
            },
            "typeName": {
              "baseType": {
                "id": 12196,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "587:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 12197,
              "nodeType": "ArrayTypeName",
              "src": "587:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 12202,
            "nodeType": "UsingForDirective",
            "src": "602:37:66",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12199,
              "name": "LibUint256Matrix",
              "nameLocations": [
                "608:16:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11889,
              "src": "608:16:66"
            },
            "typeName": {
              "baseType": {
                "id": 12200,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 12201,
              "nodeType": "ArrayTypeName",
              "src": "629:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 12213,
            "nodeType": "FunctionDefinition",
            "src": "645:111:66",
            "nodes": [],
            "body": {
              "id": 12212,
              "nodeType": "Block",
              "src": "754:2:66",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12208,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12186,
                    "src": "728:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 12209,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12205,
                    "src": "746:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig memory"
                    }
                  }
                ],
                "id": 12210,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12207,
                  "name": "FlowCommon",
                  "nameLocations": [
                    "717:10:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "717:10:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "717:36:66"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12205,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "709:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12213,
                  "src": "657:58:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 12204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12203,
                      "name": "DeployerDiscoverableMetaV2ConstructionConfig",
                      "nameLocations": [
                        "657:44:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9924,
                      "src": "657:44:66"
                    },
                    "referencedDeclaration": 9924,
                    "src": "657:44:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:60:66"
            },
            "returnParameters": {
              "id": 12211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "754:0:66"
            },
            "scope": 12390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12248,
            "nodeType": "FunctionDefinition",
            "src": "795:313:66",
            "nodes": [],
            "body": {
              "id": 12247,
              "nodeType": "Block",
              "src": "875:233:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12225,
                      "mutability": "mutable",
                      "name": "flowConfig",
                      "nameLocation": "905:10:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12247,
                      "src": "885:30:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowConfigV2_$15619_memory_ptr",
                        "typeString": "struct FlowConfigV2"
                      },
                      "typeName": {
                        "id": 12224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12223,
                          "name": "FlowConfigV2",
                          "nameLocations": [
                            "885:12:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15619,
                          "src": "885:12:66"
                        },
                        "referencedDeclaration": 15619,
                        "src": "885:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowConfigV2_$15619_storage_ptr",
                          "typeString": "struct FlowConfigV2"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12232,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12228,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12216,
                        "src": "929:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 12229,
                            "name": "FlowConfigV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15619,
                            "src": "936:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_FlowConfigV2_$15619_storage_ptr_$",
                              "typeString": "type(struct FlowConfigV2 storage pointer)"
                            }
                          }
                        ],
                        "id": 12230,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "935:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FlowConfigV2_$15619_storage_ptr_$",
                          "typeString": "type(struct FlowConfigV2 storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_FlowConfigV2_$15619_storage_ptr_$",
                          "typeString": "type(struct FlowConfigV2 storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 12226,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "918:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 12227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "922:6:66",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "918:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 12231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowConfigV2_$15619_memory_ptr",
                      "typeString": "struct FlowConfigV2 memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "885:65:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "976:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "980:6:66",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "976:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12236,
                        "name": "flowConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12225,
                        "src": "988:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowConfigV2_$15619_memory_ptr",
                          "typeString": "struct FlowConfigV2 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_FlowConfigV2_$15619_memory_ptr",
                          "typeString": "struct FlowConfigV2 memory"
                        }
                      ],
                      "id": 12233,
                      "name": "Initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15626,
                      "src": "965:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_FlowConfigV2_$15619_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct FlowConfigV2 memory)"
                      }
                    },
                    "id": 12237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "965:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12238,
                  "nodeType": "EmitStatement",
                  "src": "960:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12240,
                          "name": "flowConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12225,
                          "src": "1025:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowConfigV2_$15619_memory_ptr",
                            "typeString": "struct FlowConfigV2 memory"
                          }
                        },
                        "id": 12241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1036:6:66",
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15618,
                        "src": "1025:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV2 memory[] memory"
                        }
                      },
                      {
                        "id": 12242,
                        "name": "MIN_FLOW_SENTINELS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11923,
                        "src": "1044:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV2 memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12239,
                      "name": "flowCommonInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12098,
                      "src": "1010:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct EvaluableConfigV2 memory[] memory,uint256)"
                      }
                    },
                    "id": 12243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12244,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:53:66"
                },
                {
                  "expression": {
                    "id": 12245,
                    "name": "ICLONEABLE_V2_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9741,
                    "src": "1080:21:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 12222,
                  "id": 12246,
                  "nodeType": "Return",
                  "src": "1073:28:66"
                }
              ]
            },
            "baseFunctions": [
              9753
            ],
            "documentation": {
              "id": 12214,
              "nodeType": "StructuredDocumentation",
              "src": "762:28:66",
              "text": "@inheritdoc ICloneableV2"
            },
            "functionSelector": "439fab91",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12219,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12218,
                  "name": "initializer",
                  "nameLocations": [
                    "845:11:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "845:11:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "845:11:66"
              }
            ],
            "name": "initialize",
            "nameLocation": "804:10:66",
            "parameters": {
              "id": 12217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12216,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "830:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12248,
                  "src": "815:19:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12215,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:21:66"
            },
            "returnParameters": {
              "id": 12222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12248,
                  "src": "866:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "865:9:66"
            },
            "scope": 12390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12287,
            "nodeType": "FunctionDefinition",
            "src": "1114:356:66",
            "nodes": [],
            "body": {
              "id": 12286,
              "nodeType": "Block",
              "src": "1286:184:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12266,
                    12269,
                    12272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12266,
                      "mutability": "mutable",
                      "name": "stackBottom_",
                      "nameLocation": "1305:12:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12286,
                      "src": "1297:20:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 12265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12264,
                          "name": "Pointer",
                          "nameLocations": [
                            "1297:7:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11218,
                          "src": "1297:7:66"
                        },
                        "referencedDeclaration": 11218,
                        "src": "1297:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12269,
                      "mutability": "mutable",
                      "name": "stackTop_",
                      "nameLocation": "1327:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12286,
                      "src": "1319:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 12268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12267,
                          "name": "Pointer",
                          "nameLocations": [
                            "1319:7:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11218,
                          "src": "1319:7:66"
                        },
                        "referencedDeclaration": 11218,
                        "src": "1319:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12272,
                      "mutability": "mutable",
                      "name": "kvs_",
                      "nameLocation": "1355:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12286,
                      "src": "1338:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 12270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1338:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12271,
                        "nodeType": "ArrayTypeName",
                        "src": "1338:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12277,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12274,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12251,
                        "src": "1373:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 12275,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12255,
                        "src": "1385:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 12273,
                      "name": "flowStack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12170,
                      "src": "1363:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (Pointer,Pointer,uint256[] memory)"
                      }
                    },
                    "id": 12276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(Pointer,Pointer,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1296:98:66"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 12280,
                            "name": "stackBottom_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12266,
                            "src": "1432:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                              "typeString": "Pointer"
                            }
                          },
                          {
                            "id": 12281,
                            "name": "stackTop_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12269,
                            "src": "1446:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                              "typeString": "Pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                              "typeString": "Pointer"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                              "typeString": "Pointer"
                            }
                          ],
                          "expression": {
                            "id": 12278,
                            "name": "LibFlow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16066,
                            "src": "1412:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibFlow_$16066_$",
                              "typeString": "type(library LibFlow)"
                            }
                          },
                          "id": 12279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1420:11:66",
                          "memberName": "stackToFlow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15816,
                          "src": "1412:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$returns$_t_struct$_FlowTransferV1_$14707_memory_ptr_$",
                            "typeString": "function (Pointer,Pointer) pure returns (struct FlowTransferV1 memory)"
                          }
                        },
                        "id": 12282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:44:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                          "typeString": "struct FlowTransferV1 memory"
                        }
                      },
                      {
                        "id": 12283,
                        "name": "kvs_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12272,
                        "src": "1458:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 12284,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1411:52:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct FlowTransferV1 memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 12263,
                  "id": 12285,
                  "nodeType": "Return",
                  "src": "1404:59:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_previewFlow",
            "nameLocation": "1123:12:66",
            "parameters": {
              "id": 12256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12251,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "1153:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "1136:27:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 12250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12249,
                      "name": "Evaluable",
                      "nameLocations": [
                        "1136:9:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "1136:9:66"
                    },
                    "referencedDeclaration": 10999,
                    "src": "1136:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12255,
                  "mutability": "mutable",
                  "name": "context_",
                  "nameLocation": "1184:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "1165:27:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 12252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1165:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 12253,
                      "nodeType": "ArrayTypeName",
                      "src": "1165:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 12254,
                    "nodeType": "ArrayTypeName",
                    "src": "1165:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:58:66"
            },
            "returnParameters": {
              "id": 12263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "1241:21:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                    "typeString": "struct FlowTransferV1"
                  },
                  "typeName": {
                    "id": 12258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12257,
                      "name": "FlowTransferV1",
                      "nameLocations": [
                        "1241:14:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14707,
                      "src": "1241:14:66"
                    },
                    "referencedDeclaration": 14707,
                    "src": "1241:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$14707_storage_ptr",
                      "typeString": "struct FlowTransferV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "1264:16:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12260,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1264:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12261,
                    "nodeType": "ArrayTypeName",
                    "src": "1264:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:41:66"
            },
            "scope": 12390,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12328,
            "nodeType": "FunctionDefinition",
            "src": "1476:433:66",
            "nodes": [],
            "body": {
              "id": 12327,
              "nodeType": "Block",
              "src": "1685:224:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12308,
                      "mutability": "mutable",
                      "name": "context_",
                      "nameLocation": "1714:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12327,
                      "src": "1695:27:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 12305,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1695:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12306,
                          "nodeType": "ArrayTypeName",
                          "src": "1695:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 12307,
                        "nodeType": "ArrayTypeName",
                        "src": "1695:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12316,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12311,
                            "name": "callerContext_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12293,
                            "src": "1742:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 12312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1757:10:66",
                          "memberName": "matrixFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11853,
                          "src": "1742:25:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory) pure returns (uint256[] memory[] memory)"
                          }
                        },
                        "id": 12313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:27:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "id": 12314,
                        "name": "signedContexts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12297,
                        "src": "1771:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 12309,
                        "name": "LibContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10780,
                        "src": "1725:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibContext_$10780_$",
                          "typeString": "type(library LibContext)"
                        }
                      },
                      "id": 12310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1736:5:66",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10779,
                      "src": "1725:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[] memory[] memory,struct SignedContextV1 memory[] memory) view returns (uint256[] memory[] memory)"
                      }
                    },
                    "id": 12315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:62:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1695:92:66"
                },
                {
                  "assignments": [
                    12319,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12319,
                      "mutability": "mutable",
                      "name": "flowTransfer_",
                      "nameLocation": "1820:13:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12327,
                      "src": "1798:35:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                        "typeString": "struct FlowTransferV1"
                      },
                      "typeName": {
                        "id": 12318,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12317,
                          "name": "FlowTransferV1",
                          "nameLocations": [
                            "1798:14:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14707,
                          "src": "1798:14:66"
                        },
                        "referencedDeclaration": 14707,
                        "src": "1798:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$14707_storage_ptr",
                          "typeString": "struct FlowTransferV1"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 12324,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12321,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12290,
                        "src": "1851:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 12322,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12308,
                        "src": "1863:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 12320,
                      "name": "_previewFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12287,
                      "src": "1838:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (struct FlowTransferV1 memory,uint256[] memory)"
                      }
                    },
                    "id": 12323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct FlowTransferV1 memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1797:75:66"
                },
                {
                  "expression": {
                    "id": 12325,
                    "name": "flowTransfer_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12319,
                    "src": "1889:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                      "typeString": "struct FlowTransferV1 memory"
                    }
                  },
                  "functionReturnParameters": 12302,
                  "id": 12326,
                  "nodeType": "Return",
                  "src": "1882:20:66"
                }
              ]
            },
            "baseFunctions": [
              15642
            ],
            "functionSelector": "90bcad69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewFlow",
            "nameLocation": "1485:11:66",
            "parameters": {
              "id": 12298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12290,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "1523:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12328,
                  "src": "1506:27:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 12289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12288,
                      "name": "Evaluable",
                      "nameLocations": [
                        "1506:9:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "1506:9:66"
                    },
                    "referencedDeclaration": 10999,
                    "src": "1506:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12293,
                  "mutability": "mutable",
                  "name": "callerContext_",
                  "nameLocation": "1560:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12328,
                  "src": "1543:31:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12291,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1543:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12292,
                    "nodeType": "ArrayTypeName",
                    "src": "1543:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12297,
                  "mutability": "mutable",
                  "name": "signedContexts_",
                  "nameLocation": "1609:15:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12328,
                  "src": "1584:40:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12295,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12294,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "1584:15:66"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10021,
                        "src": "1584:15:66"
                      },
                      "referencedDeclaration": 10021,
                      "src": "1584:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 12296,
                    "nodeType": "ArrayTypeName",
                    "src": "1584:17:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:134:66"
            },
            "returnParameters": {
              "id": 12302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12328,
                  "src": "1662:21:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                    "typeString": "struct FlowTransferV1"
                  },
                  "typeName": {
                    "id": 12300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12299,
                      "name": "FlowTransferV1",
                      "nameLocations": [
                        "1662:14:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14707,
                      "src": "1662:14:66"
                    },
                    "referencedDeclaration": 14707,
                    "src": "1662:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$14707_storage_ptr",
                      "typeString": "struct FlowTransferV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:23:66"
            },
            "scope": 12390,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12389,
            "nodeType": "FunctionDefinition",
            "src": "1915:561:66",
            "nodes": [],
            "body": {
              "id": 12388,
              "nodeType": "Block",
              "src": "2125:351:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12351,
                      "mutability": "mutable",
                      "name": "context_",
                      "nameLocation": "2154:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12388,
                      "src": "2135:27:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 12348,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2135:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12349,
                          "nodeType": "ArrayTypeName",
                          "src": "2135:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 12350,
                        "nodeType": "ArrayTypeName",
                        "src": "2135:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12359,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12354,
                            "name": "callerContext_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12334,
                            "src": "2182:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 12355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2197:10:66",
                          "memberName": "matrixFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11853,
                          "src": "2182:25:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory) pure returns (uint256[] memory[] memory)"
                          }
                        },
                        "id": 12356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2182:27:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "id": 12357,
                        "name": "signedContexts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12338,
                        "src": "2211:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 12352,
                        "name": "LibContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10780,
                        "src": "2165:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibContext_$10780_$",
                          "typeString": "type(library LibContext)"
                        }
                      },
                      "id": 12353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2176:5:66",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10779,
                      "src": "2165:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[] memory[] memory,struct SignedContextV1 memory[] memory) view returns (uint256[] memory[] memory)"
                      }
                    },
                    "id": 12358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2165:62:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2135:92:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12361,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2250:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2254:6:66",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2250:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12363,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12351,
                        "src": "2262:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 12360,
                      "name": "Context",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10040,
                      "src": "2242:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory[] memory)"
                      }
                    },
                    "id": 12364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12365,
                  "nodeType": "EmitStatement",
                  "src": "2237:34:66"
                },
                {
                  "assignments": [
                    12368,
                    12371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12368,
                      "mutability": "mutable",
                      "name": "flowTransfer_",
                      "nameLocation": "2304:13:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12388,
                      "src": "2282:35:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                        "typeString": "struct FlowTransferV1"
                      },
                      "typeName": {
                        "id": 12367,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12366,
                          "name": "FlowTransferV1",
                          "nameLocations": [
                            "2282:14:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14707,
                          "src": "2282:14:66"
                        },
                        "referencedDeclaration": 14707,
                        "src": "2282:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$14707_storage_ptr",
                          "typeString": "struct FlowTransferV1"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12371,
                      "mutability": "mutable",
                      "name": "kvs_",
                      "nameLocation": "2336:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 12388,
                      "src": "2319:21:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 12369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12370,
                        "nodeType": "ArrayTypeName",
                        "src": "2319:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12373,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12331,
                        "src": "2357:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 12374,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12351,
                        "src": "2369:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 12372,
                      "name": "_previewFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12287,
                      "src": "2344:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (struct FlowTransferV1 memory,uint256[] memory)"
                      }
                    },
                    "id": 12375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct FlowTransferV1 memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:97:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12380,
                        "name": "flowTransfer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12368,
                        "src": "2401:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                          "typeString": "struct FlowTransferV1 memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 12381,
                          "name": "evaluable_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12331,
                          "src": "2416:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                            "typeString": "struct Evaluable memory"
                          }
                        },
                        "id": 12382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2427:5:66",
                        "memberName": "store",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10996,
                        "src": "2416:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      {
                        "id": 12383,
                        "name": "kvs_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12371,
                        "src": "2434:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                          "typeString": "struct FlowTransferV1 memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                          "typeString": "contract IInterpreterStoreV1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 12377,
                        "name": "LibFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16066,
                        "src": "2388:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibFlow_$16066_$",
                          "typeString": "type(library LibFlow)"
                        }
                      },
                      "id": 12379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2396:4:66",
                      "memberName": "flow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16065,
                      "src": "2388:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_contract$_IInterpreterStoreV1_$10078_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct FlowTransferV1 memory,contract IInterpreterStoreV1,uint256[] memory)"
                      }
                    },
                    "id": 12384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12385,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:51:66"
                },
                {
                  "expression": {
                    "id": 12386,
                    "name": "flowTransfer_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12368,
                    "src": "2456:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                      "typeString": "struct FlowTransferV1 memory"
                    }
                  },
                  "functionReturnParameters": 12345,
                  "id": 12387,
                  "nodeType": "Return",
                  "src": "2449:20:66"
                }
              ]
            },
            "baseFunctions": [
              15658
            ],
            "functionSelector": "f83d765a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12340,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2080:12:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5422,
                  "src": "2080:12:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "2080:12:66"
              }
            ],
            "name": "flow",
            "nameLocation": "1924:4:66",
            "parameters": {
              "id": 12339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12331,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "1955:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12389,
                  "src": "1938:27:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 12330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12329,
                      "name": "Evaluable",
                      "nameLocations": [
                        "1938:9:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "1938:9:66"
                    },
                    "referencedDeclaration": 10999,
                    "src": "1938:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12334,
                  "mutability": "mutable",
                  "name": "callerContext_",
                  "nameLocation": "1992:14:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12389,
                  "src": "1975:31:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12332,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1975:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12333,
                    "nodeType": "ArrayTypeName",
                    "src": "1975:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12338,
                  "mutability": "mutable",
                  "name": "signedContexts_",
                  "nameLocation": "2041:15:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 12389,
                  "src": "2016:40:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12336,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12335,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "2016:15:66"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10021,
                        "src": "2016:15:66"
                      },
                      "referencedDeclaration": 10021,
                      "src": "2016:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 12337,
                    "nodeType": "ArrayTypeName",
                    "src": "2016:17:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:134:66"
            },
            "returnParameters": {
              "id": 12345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12389,
                  "src": "2102:21:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                    "typeString": "struct FlowTransferV1"
                  },
                  "typeName": {
                    "id": 12343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12342,
                      "name": "FlowTransferV1",
                      "nameLocations": [
                        "2102:14:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14707,
                      "src": "2102:14:66"
                    },
                    "referencedDeclaration": 14707,
                    "src": "2102:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$14707_storage_ptr",
                      "typeString": "struct FlowTransferV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:23:66"
            },
            "scope": 12390,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12187,
              "name": "ICloneableV2",
              "nameLocations": [
                "504:12:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9754,
              "src": "504:12:66"
            },
            "id": 12188,
            "nodeType": "InheritanceSpecifier",
            "src": "504:12:66"
          },
          {
            "baseName": {
              "id": 12189,
              "name": "IFlowV4",
              "nameLocations": [
                "518:7:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15659,
              "src": "518:7:66"
            },
            "id": 12190,
            "nodeType": "InheritanceSpecifier",
            "src": "518:7:66"
          },
          {
            "baseName": {
              "id": 12191,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "527:15:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5457,
              "src": "527:15:66"
            },
            "id": 12192,
            "nodeType": "InheritanceSpecifier",
            "src": "527:15:66"
          },
          {
            "baseName": {
              "id": 12193,
              "name": "FlowCommon",
              "nameLocations": [
                "544:10:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12171,
              "src": "544:10:66"
            },
            "id": 12194,
            "nodeType": "InheritanceSpecifier",
            "src": "544:10:66"
          }
        ],
        "canonicalName": "Flow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12390,
          12171,
          9969,
          9830,
          10041,
          4122,
          1746,
          1800,
          1538,
          4395,
          4407,
          3675,
          3485,
          168,
          5457,
          15659,
          9754
        ],
        "name": "Flow",
        "nameLocation": "496:4:66",
        "scope": 12391,
        "usedErrors": [
          9745,
          9810,
          9815,
          10495,
          11510,
          11914,
          11919,
          15681,
          15684,
          15687
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 66
}