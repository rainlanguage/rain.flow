{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flowMinOutputs",
          "type": "uint256"
        }
      ],
      "name": "BadMinStackLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Sentinel",
          "name": "sentinel",
          "type": "uint256"
        }
      ],
      "name": "MissingSentinel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "sourceIndex",
          "type": "uint256"
        }
      ],
      "name": "SourceOffsetOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "unregisteredHash",
          "type": "bytes32"
        }
      ],
      "name": "UnregisteredFlow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC1155Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC20Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC721Flow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[][]",
          "name": "context",
          "type": "uint256[][]"
        }
      ],
      "name": "Context",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Evaluable",
          "name": "evaluable",
          "type": "tuple"
        }
      ],
      "name": "FlowInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2[]",
              "name": "flowConfig",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct FlowERC20ConfigV2",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "internalType": "struct Evaluable",
          "name": "evaluable_",
          "type": "tuple"
        },
        {
          "internalType": "uint256[]",
          "name": "callerContext_",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "context",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedContextV1[]",
          "name": "signedContexts_",
          "type": "tuple[]"
        }
      ],
      "name": "flow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20SupplyChange[]",
              "name": "mints",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20SupplyChange[]",
              "name": "burns",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct FlowTransferV1",
              "name": "flow",
              "type": "tuple"
            }
          ],
          "internalType": "struct FlowERC20IOV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "internalType": "struct Evaluable",
          "name": "evaluable_",
          "type": "tuple"
        },
        {
          "internalType": "uint256[]",
          "name": "callerContext_",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "context",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedContextV1[]",
          "name": "signedContexts_",
          "type": "tuple[]"
        }
      ],
      "name": "previewFlow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20SupplyChange[]",
              "name": "mints",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20SupplyChange[]",
              "name": "burns",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct FlowTransferV1",
              "name": "flow",
              "type": "tuple"
            }
          ],
          "internalType": "struct FlowERC20IOV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1377:5943:68:-:0;;;1849:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;974:66;966:75;;1950:6;6160:8:65;6170:6;1075:46:43;1099:8;1109:6;:11;;;1075:23;;;:46;;:::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;6192:22:65::1;::::0;-1:-1:-1;6192:20:65::1;:22::i;:::-;6035:186:::0;;1849:111:68;1377:5943;;1424:292:42;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:42;;;;;3081:25:87;;;3122:18;;;3115:34;;;3054:18;;1619:46:42;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1308:309:52:-;1513:16;;;1371:26;1513:16;;;;;;1531;;;;;;;;;;-1:-1:-1;;;1460:88:52;;;1371:26;;;;;-1:-1:-1;;;;;1460:48:52;;;;;:88;;1513:16;1460:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;1308:309:52:o;5939:280:0:-;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:0;;5030:2:87;5998:66:0;;;5012:21:87;5069:2;5049:18;;;5042:30;5108:34;5088:18;;;5081:62;-1:-1:-1;;;5159:18:87;;;5152:37;5206:19;;5998:66:0;4828:403:87;5998:66:0;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:0;6140:15;6125:30;;;;;;6174:28;;5378:36:87;;;6174:28:0;;5366:2:87;5351:18;6174:28:0;;;;;;;6074:139;5939:280::o;1075:155:42:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:42;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:42;;550:376;-1:-1:-1;550:376:42:o;631:34::-;-1:-1:-1;846:1:42;835:13;829:20;-1:-1:-1;;;;;825:32:42;667:18:41;883:36:42;;550:376::o;14:127:87:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:87;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:87;508:40;;-1:-1:-1;;;;;563:34:87;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:87:o;687:131::-;-1:-1:-1;;;;;762:31:87;;752:42;;742:70;;808:1;805;798:12;823:250;908:1;918:113;932:6;929:1;926:13;918:113;;;1008:11;;;1002:18;989:11;;;982:39;954:2;947:10;918:113;;;-1:-1:-1;;1065:1:87;1047:16;;1040:27;823:250::o;1078:1159::-;1210:6;1241:2;1284;1272:9;1263:7;1259:23;1255:32;1252:52;;;1300:1;1297;1290:12;1252:52;1327:16;;-1:-1:-1;;;;;1392:14:87;;;1389:34;;;1419:1;1416;1409:12;1389:34;1442:22;;;;1498:4;1480:16;;;1476:27;1473:47;;;1516:1;1513;1506:12;1473:47;1542:21;;:::i;:::-;1593:2;1587:9;1605:33;1630:7;1605:33;:::i;:::-;1647:22;;1700:11;;;1694:18;1724:16;;;1721:36;;;1753:1;1750;1743:12;1721:36;1784:8;1780:2;1776:17;1766:27;;;1831:7;1824:4;1820:2;1816:13;1812:27;1802:55;;1853:1;1850;1843:12;1802:55;1882:2;1876:9;1904:2;1900;1897:10;1894:36;;;1910:18;;:::i;:::-;1952:53;1995:2;1976:13;;-1:-1:-1;;1972:27:87;1968:36;;1952:53;:::i;:::-;1939:66;;2028:2;2021:5;2014:17;2068:7;2063:2;2058;2054;2050:11;2046:20;2043:33;2040:53;;;2089:1;2086;2079:12;2040:53;2102:67;2166:2;2161;2154:5;2150:14;2145:2;2141;2137:11;2102:67;:::i;:::-;-1:-1:-1;2185:14:87;;;2178:29;-1:-1:-1;2189:5:87;1078:1159;-1:-1:-1;;;1078:1159:87:o;2242:270::-;2283:3;2321:5;2315:12;2348:6;2343:3;2336:19;2364:76;2433:6;2426:4;2421:3;2417:14;2410:4;2403:5;2399:16;2364:76;:::i;:::-;2494:2;2473:15;-1:-1:-1;;2469:29:87;2460:39;;;;2501:4;2456:50;;2242:270;-1:-1:-1;;2242:270:87:o;2517:385::-;2749:1;2745;2740:3;2736:11;2732:19;2724:6;2720:32;2709:9;2702:51;2789:6;2784:2;2773:9;2769:18;2762:34;2832:2;2827;2816:9;2812:18;2805:30;2683:4;2852:44;2892:2;2881:9;2877:18;2869:6;2852:44;:::i;:::-;2844:52;2517:385;-1:-1:-1;;;;;2517:385:87:o;3160:435::-;3213:3;3251:5;3245:12;3278:6;3273:3;3266:19;3304:4;3333:2;3328:3;3324:12;3317:19;;3370:2;3363:5;3359:14;3391:1;3401:169;3415:6;3412:1;3409:13;3401:169;;;3476:13;;3464:26;;3510:12;;;;3545:15;;;;3437:1;3430:9;3401:169;;;-1:-1:-1;3586:3:87;;3160:435;-1:-1:-1;;;;;3160:435:87:o;3600:646::-;3957:2;3946:9;3939:21;3996:1;3991:2;3980:9;3976:18;3969:29;4036:3;4029:4;4018:9;4014:20;4007:33;3920:4;4063:57;4115:3;4104:9;4100:19;4092:6;4063:57;:::i;:::-;4168:9;4160:6;4156:22;4151:2;4140:9;4136:18;4129:50;4196:44;4233:6;4225;4196:44;:::i;4251:572::-;4392:6;4400;4408;4461:2;4449:9;4440:7;4436:23;4432:32;4429:52;;;4477:1;4474;4467:12;4429:52;4509:9;4503:16;4528:31;4553:5;4528:31;:::i;:::-;4628:2;4613:18;;4607:25;4578:5;;-1:-1:-1;4641:33:87;4607:25;4641:33;:::i;:::-;4745:2;4730:18;;4724:25;4693:7;;-1:-1:-1;4758:33:87;4724:25;4758:33;:::i;:::-;4810:7;4800:17;;;4251:572;;;;;:::o;5425:217::-;5572:2;5561:9;5554:21;5535:4;5592:44;5632:2;5621:9;5617:18;5609:6;5592:44;:::i;:::-;5584:52;5425:217;-1:-1:-1;;;5425:217:87:o;:::-;1377:5943:68;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063ac9650d811610081578063dd62ed3e11610066578063dd62ed3e14610322578063f23a6e6114610369578063f83d765a146103a157600080fd5b8063ac9650d8146102ca578063bc197c81146102ea57600080fd5b806395d89b41116100b257806395d89b411461029c578063a457c2d7146102a4578063a9059cbb146102b757600080fd5b806370a082311461024557806390bcad691461027c57600080fd5b806318160ddd11610124578063313ce56711610109578063313ce56714610210578063395093511461021f578063439fab911461023257600080fd5b806318160ddd146101ea57806323b872dd146101fd57600080fd5b806301ffc9a71461015657806306fdde031461017e578063095ea7b314610193578063150b7a02146101a6575b600080fd5b6101696101643660046133c5565b6103b4565b60405190151581526020015b60405180910390f35b61018661044d565b6040516101759190613475565b6101696101a13660046134ad565b6104e0565b6101b96101b4366004613631565b6104f8565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610175565b610162545b604051908152602001610175565b61016961020b36600461369d565b610522565b60405160128152602001610175565b61016961022d3660046134ad565b610548565b6101ef6102403660046136de565b610595565b6101ef610253366004613750565b73ffffffffffffffffffffffffffffffffffffffff166000908152610160602052604090205490565b61028f61028a3660046137f1565b61096a565b6040516101759190613a7a565b6101866109b2565b6101696102b23660046134ad565b6109c2565b6101696102c53660046134ad565b610a9f565b6102dd6102d8366004613c14565b610aad565b6040516101759190613c77565b6101b96102f8366004613cf7565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6101ef610330366004613da5565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526101616020908152604080832093909416825291909152205490565b6101b9610377366004613dde565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b61028f6103af3660046137f1565b610b9b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061044757507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060610163805461045d90613e47565b80601f016020809104026020016040519081016040528092919081815260200182805461048990613e47565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b6000336104ee818585610bae565b5060019392505050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b600033610530858285610d62565b61053b858585610e3a565b60019150505b9392505050565b3360008181526101616020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104ee9082908690610590908790613ec9565b610bae565b60008054610100900460ff16158080156105b65750600054600160ff909116105b806105d05750303b1580156105d0575060005460ff166001145b610661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156106bf57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b60006106cd84860186613fde565b90507f5bdf1e562baf903aabb70424ba720f0619e49b6ee17805dd38d74cd1b42cca54338260405161070092919061413e565b60405180910390a16107106110b8565b61072281600001518260200151611159565b606081015161073c9061073760036002613ec9565b6111fe565b600061074f82604001516020015161151b565b11801561077257506000610770826040015160200151600061ffff16611539565b115b156108dc5761019280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040808201518051602082015191909201516000928392839273ffffffffffffffffffffffffffffffffffffffff909216916331a66b6591906107f88560408051600181526020810192909252818101905290565b6040518463ffffffff1660e01b815260040161081693929190614256565b6060604051808303816000875af1158015610835573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610859919061428f565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff9485168082529385166020820181905292909416930183905261019380547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169093179055610194805483169091179055610195805490911690911790555050505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc3925050801561096357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b610972613383565b60006109996109938560408051600181526020810192909252818101905290565b84611552565b905060006109a78683611862565b509695505050505050565b6060610164805461045d90613e47565b3360008181526101616020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610a87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610658565b610a948286868403610bae565b506001949350505050565b6000336104ee818585610e3a565b60608167ffffffffffffffff811115610ac857610ac86134d9565b604051908082528060200260200182016040528015610afb57816020015b6060815260200190600190039081610ae65790505b50905060005b8281101561096357610b6b30858584818110610b1f57610b1f6142dc565b9050602002810190610b31919061430b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061199092505050565b828281518110610b7d57610b7d6142dc565b60200260200101819052508080610b9390614370565b915050610b01565b610ba3613383565b61051a8484846119b5565b73ffffffffffffffffffffffffffffffffffffffff8316610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff8216610cf3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152610161602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff838116600090815261016160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e345781811015610e27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610658565b610e348484848403610bae565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610edd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff8216610f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff83166000908152610160602052604090205481811015611037576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff8085166000818152610160602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110a59086815260200190565b60405180910390a3610e34848484611b1e565b600054610100900460ff1661114f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b611157611d7e565b565b600054610100900460ff166111f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b6111fa8282611e1b565b5050565b600054610100900460ff16611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b61129d611ecd565b6112a5611ecd565b6112ad611ecd565b60038110156112eb576040517fb0682cf300000000000000000000000000000000000000000000000000000000815260048101829052602401610658565b6113256040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60408051606081018252600080825260208201819052918101829052905b84518110156115145784818151811061135e5761135e6142dc565b602002602001015192506000806000856000015173ffffffffffffffffffffffffffffffffffffffff166331a66b65876020015188604001516113b38b60408051600181526020810192909252818101905290565b6040518463ffffffff1660e01b81526004016113d193929190614256565b6060604051808303816000875af11580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611414919061428f565b92509250925060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152509450600161012d600061148b886060902090565b81526020808201929092526040908101600020929092558151338152875173ffffffffffffffffffffffffffffffffffffffff9081168284015291880151821681840152918701511660608201527fed510090abe2a95b97a621e3d2c947ea3c26eced1c87470474d17e353dcc53389060800160405180910390a1505050806001019050611343565b5050505050565b6000815160000361152e57506000919050565b506020015160001a90565b6000806115468484611f64565b5160001a949350505050565b60606000825167ffffffffffffffff811115611570576115706134d9565b604051908082528060200260200182016040528015611599578160200160208202803683370190505b5090506000808451116115ad5760006115b3565b83516001015b855160010101905060008167ffffffffffffffff8111156115d6576115d66134d9565b60405190808252806020026020018201604052801561160957816020015b60608152602001906001900390816115f45790505b509050600061162e604080516002815233602082015230818301526060810190915290565b828281518110611640576116406142dc565b602002602001018190525060005b875181101561169e578180600101925050878181518110611671576116716142dc565b602002602001015183838151811061168b5761168b6142dc565b602090810291909101015260010161164e565b50855115611858578080600101915050838282815181106116c1576116c16142dc565b602002602001018190525060005b8651811015611856576117808782815181106116ed576116ed6142dc565b60200260200101516000015161175d61172a8a8581518110611711576117116142dc565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b89848151811061176f5761176f6142dc565b602002602001015160400151611f95565b6117b9576040517f52bf984800000000000000000000000000000000000000000000000000000000815260048101829052602401610658565b8681815181106117cb576117cb6142dc565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106117ff576117ff6142dc565b6020026020010181815250508180600101925050868181518110611825576118256142dc565b602002602001015160200151838381518110611843576118436142dc565b60209081029190910101526001016116cf565b505b5095945050505050565b61186a613383565b606080606060008060008061187f8a8a612010565b60408051808201909152601881527f5241494e5f464c4f575f45524332305f53454e54494e454c0000000000000000602090910152919450925090506118e883837ff339171dab445c29f9897dda2f42413426ee907dc7f8b52bd387bc7cf9384c6b600261216c565b60408051808201909152601881527f5241494e5f464c4f575f45524332305f53454e54494e454c00000000000000006020909101529650869450915061195183837ff339171dab445c29f9897dda2f42413426ee907dc7f8b52bd387bc7cf9384c6b600261216c565b8095508193505050839450604051806060016040528087815260200186815260200161197d8585612218565b90529750955050505050505b9250929050565b606061054183836040518060600160405280602781526020016147696027913961239f565b6119bd613383565b6119c561241a565b60006119e66109938560408051600181526020810192909252818101905290565b90507f17a5c0f3785132a57703932032f6863e7920434150aa1dc940e567b440fdce1f3382604051611a199291906143fd565b60405180910390a1600080611a2e8784611862565b9150915060005b825151811015611a9357611a8b83600001518281518110611a5857611a586142dc565b60200260200101516000015184600001518381518110611a7a57611a7a6142dc565b60200260200101516020015161248d565b600101611a35565b5060005b826020015151811015611af857611af083602001518281518110611abd57611abd6142dc565b60200260200101516000015184602001518381518110611adf57611adf6142dc565b60200260200101516020015161258c565b600101611a97565b50611b0c826040015188602001518361275c565b5091505061054160018055565b505050565b6101925460ff168015611b65575073ffffffffffffffffffffffffffffffffffffffff83161580611b63575073ffffffffffffffffffffffffffffffffffffffff8216155b155b15611b1957604080516060810182526101935473ffffffffffffffffffffffffffffffffffffffff9081168083526101945482166020840181905261019554909216938301849052919260009291636715f825918490611bc490612806565b604080516003815273ffffffffffffffffffffffffffffffffffffffff8c811660208301528b1681830152606081018a905260016080820190815260a08201829052600060c0830181815260e0909301909352611c7692909190611c70565b611c5d6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081611c235790505b50611552565b6040518563ffffffff1660e01b8152600401611c95949392919061442c565b600060405180830381865afa158015611cb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611cf891908101906144c2565b91505060008151111561151457816020015173ffffffffffffffffffffffffffffffffffffffff1663946aadc66000836040518363ffffffff1660e01b8152600401611d45929190614526565b600060405180830381600087803b158015611d5f57600080fd5b505af1158015611d73573d6000803e3d6000fd5b505050505050505050565b600054610100900460ff16611e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b60018055565b600054610100900460ff16611eb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b610163611ebf838261458d565b50610164611b19828261458d565b600054610100900460ff16611157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610658565b600080611f708461151b565b60020260010190506000611f84858561282c565b949091019093016020019392505050565b6000806000611fa485856128a4565b90925090506000816004811115611fbd57611fbd6146a7565b148015611ff557508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061200657506120068686866128e6565b9695505050505050565b60008060606000612022866060902090565b600081815261012d602052604090205490915061206e576040517f7a80ba4d00000000000000000000000000000000000000000000000000000000815260048101829052602401610658565b5084516020808701516040880151600093849373ffffffffffffffffffffffffffffffffffffffff90911692636715f8259290918591901b77ffffffffffffffffffffffffffffffffffffffff000000001661ffff178a6040518563ffffffff1660e01b81526004016120e4949392919061442c565b600060405180830381865afa158015612101573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261214791908101906144c2565b915091506121558260200190565b825190986020918202909301019650945092505050565b60008060208302855b87811115612199576020810386815103612190579350612199565b50819003612175565b50826000036121d7576040517fd457746f00000000000000000000000000000000000000000000000000000000815260048101869052602401610658565b604051915060208201602084015b878110156121fd5780825260209091019082016121e5565b50806040526001602084830304038352505094509492505050565b61223c60405180606001604052806060815260200160608152602001606081525090565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c00000000000000000000000000006020909101526060808060006122a487877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600461216c565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152909650935083905061230e87877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600461216c565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152909650925082905061237887877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600561216c565b60408051606081018252968752602087019590955293850193909352509195945050505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516123c991906146d6565b600060405180830381855af49150503d8060008114612404576040519150601f19603f3d011682016040523d82523d6000602084013e612409565b606091505b509150915061200686838387612a43565b600260015403612486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610658565b6002600155565b73ffffffffffffffffffffffffffffffffffffffff821661250a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610658565b80610162600082825461251d9190613ec9565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815261016060209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36111fa60008383611b1e565b73ffffffffffffffffffffffffffffffffffffffff821661262f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff821660009081526101606020526040902054818110156126e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610658565b73ffffffffffffffffffffffffffffffffffffffff8316600081815261016060209081526040808320868603905561016280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611b1983600084611b1e565b8051156127eb576040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc6906127b8906000908590600401614526565b600060405180830381600087803b1580156127d257600080fd5b505af11580156127e6573d6000803e3d6000fd5b505050505b6127f483612ae3565b6127fd83612c3c565b611b1983612dcd565b6000602082901b77ffffffffffffffffffffffffffffffffffffffff0000000016610447565b6002810282016003015161ffff1660006128458461151b565b8451909150600560028302840101908111806128615750818410155b1561289c5784846040517fd3fc97bd0000000000000000000000000000000000000000000000000000000081526004016106589291906146f2565b505092915050565b60008082516041036128da5760208301516040840151606085015160001a6128ce87828585612f7d565b94509450505050611989565b50600090506002611989565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b868660405160240161291d929190614714565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516129a691906146d6565b600060405180830381855afa9150503d80600081146129e1576040519150601f19603f3d011682016040523d82523d6000602084013e6129e6565b606091505b50915091508180156129fa57506020815110155b8015612006575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090612a38908301602090810190840161472d565b149695505050505050565b60608315612ad9578251600003612ad25773ffffffffffffffffffffffffffffffffffffffff85163b612ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610658565b508161051a565b61051a838361306c565b6040805160808101825260008082526020820181905291810182905260608101829052905b825151811015611b19578251805182908110612b2657612b266142dc565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1603612b9d57604082015160608301518351612b989273ffffffffffffffffffffffffffffffffffffffff909116913391906130b0565b612c34565b3073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1603612c0257604082015160608301518351612b989273ffffffffffffffffffffffffffffffffffffffff9091169161318c565b6040517fa521c60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101612b08565b6040805160808101825260008082526020820181905291810182905260608101829052905b826020015151811015611b195782602001518181518110612c8457612c846142dc565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1614158015612ce85750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b15612d1f576040517f3a5befc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516020830151604080850151606086015191517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b158015612da957600080fd5b505af1158015612dbd573d6000803e3d6000fd5b505060019092019150612c619050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b826040015151811015611b195782604001518181518110612e1c57612e1c6142dc565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1614158015612e805750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b15612eb7576040517fc6a91ecc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040808501516060860151608087015192517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff948516600482015291841660248301526044820152606481019190915260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b158015612f5957600080fd5b505af1158015612f6d573d6000803e3d6000fd5b505060019092019150612df99050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612fb45750600090506003613063565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613008573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661305c57600060019250925050613063565b9150600090505b94509492505050565b81511561307c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589190613475565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610e349085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526131e2565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052611b199084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161310a565b6000613244826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166132f19092919063ffffffff16565b90508051600014806132655750808060200190518101906132659190614746565b611b19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610658565b606061051a8484600085856000808673ffffffffffffffffffffffffffffffffffffffff16858760405161332591906146d6565b60006040518083038185875af1925050503d8060008114613362576040519150601f19603f3d011682016040523d82523d6000602084013e613367565b606091505b509150915061337887838387612a43565b979650505050505050565b604051806060016040528060608152602001606081526020016133c060405180606001604052806060815260200160608152602001606081525090565b905290565b6000602082840312156133d757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461054157600080fd5b60005b8381101561342257818101518382015260200161340a565b50506000910152565b60008151808452613443816020860160208601613407565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610541602083018461342b565b73ffffffffffffffffffffffffffffffffffffffff811681146134aa57600080fd5b50565b600080604083850312156134c057600080fd5b82356134cb81613488565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561352b5761352b6134d9565b60405290565b6040516080810167ffffffffffffffff8111828210171561352b5761352b6134d9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561359b5761359b6134d9565b604052919050565b600082601f8301126135b457600080fd5b813567ffffffffffffffff8111156135ce576135ce6134d9565b6135ff60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613554565b81815284602083860101111561361457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561364757600080fd5b843561365281613488565b9350602085013561366281613488565b925060408501359150606085013567ffffffffffffffff81111561368557600080fd5b613691878288016135a3565b91505092959194509250565b6000806000606084860312156136b257600080fd5b83356136bd81613488565b925060208401356136cd81613488565b929592945050506040919091013590565b600080602083850312156136f157600080fd5b823567ffffffffffffffff8082111561370957600080fd5b818501915085601f83011261371d57600080fd5b81358181111561372c57600080fd5b86602082850101111561373e57600080fd5b60209290920196919550909350505050565b60006020828403121561376257600080fd5b813561054181613488565b600067ffffffffffffffff821115613787576137876134d9565b5060051b60200190565b600082601f8301126137a257600080fd5b813560206137b76137b28361376d565b613554565b82815260059290921b840181019181810190868411156137d657600080fd5b8286015b848110156109a757803583529183019183016137da565b600080600083850360a081121561380757600080fd5b606081121561381557600080fd5b5061381e613508565b843561382981613488565b815260208581013561383a81613488565b82820152604086013561384c81613488565b604083015290935060608501359067ffffffffffffffff8083111561387057600080fd5b61387c88848901613791565b9450608087013592508083111561389257600080fd5b828701925087601f8401126138a657600080fd5b82356138b46137b28261376d565b81815260059190911b8401830190838101908a8311156138d357600080fd5b8486015b83811015613996578035858111156138ef5760008081fd5b87016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156139245760008081fd5b61392c613508565b8782013561393981613488565b815260408201358781111561394e5760008081fd5b61395c8f8a83860101613791565b89830152506060820135878111156139745760008081fd5b6139828f8a838601016135a3565b6040830152508452509185019185016138d7565b508096505050505050509250925092565b600081518084526020808501945080840160005b838110156139f8578151805173ffffffffffffffffffffffffffffffffffffffff16885283015183880152604090960195908201906001016139bb565b509495945050505050565b600081518084526020808501945080840160005b838110156139f8578151805173ffffffffffffffffffffffffffffffffffffffff9081168952848201518116858a015260408083015190911690890152606080820151908901526080908101519088015260a09096019590820190600101613a17565b6000602080835260808451606083860152613a97828601826139a7565b9050828601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080878403016040880152613ad283836139a7565b92506040880151915080878403016060880152506060820181516060845281815180845286860191508783019350600092505b80831015613b6957613b5582855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b928701926001929092019190860190613b05565b5083870151858203868901528051808352908801935090870191506000905b80821015613bec57613bd883855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b928701929186019160019190910190613b88565b5050604083015195508381036040850152613c078187613a03565b9998505050505050505050565b60008060208385031215613c2757600080fd5b823567ffffffffffffffff80821115613c3f57600080fd5b818501915085601f830112613c5357600080fd5b813581811115613c6257600080fd5b8660208260051b850101111561373e57600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613cea577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613cd885835161342b565b94509285019290850190600101613c9e565b5092979650505050505050565b600080600080600060a08688031215613d0f57600080fd5b8535613d1a81613488565b94506020860135613d2a81613488565b9350604086013567ffffffffffffffff80821115613d4757600080fd5b613d5389838a01613791565b94506060880135915080821115613d6957600080fd5b613d7589838a01613791565b93506080880135915080821115613d8b57600080fd5b50613d98888289016135a3565b9150509295509295909350565b60008060408385031215613db857600080fd5b8235613dc381613488565b91506020830135613dd381613488565b809150509250929050565b600080600080600060a08688031215613df657600080fd5b8535613e0181613488565b94506020860135613e1181613488565b93506040860135925060608601359150608086013567ffffffffffffffff811115613e3b57600080fd5b613d98888289016135a3565b600181811c90821680613e5b57607f821691505b602082108103613e94577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561044757610447613e9a565b600060608284031215613eee57600080fd5b613ef6613508565b90508135613f0381613488565b8152602082013567ffffffffffffffff80821115613f2057600080fd5b613f2c858386016135a3565b60208401526040840135915080821115613f4557600080fd5b50613f5284828501613791565b60408301525092915050565b600082601f830112613f6f57600080fd5b81356020613f7f6137b28361376d565b82815260059290921b84018101918181019086841115613f9e57600080fd5b8286015b848110156109a757803567ffffffffffffffff811115613fc25760008081fd5b613fd08986838b0101613edc565b845250918301918301613fa2565b600060208284031215613ff057600080fd5b813567ffffffffffffffff8082111561400857600080fd5b908301906080828603121561401c57600080fd5b614024613531565b82358281111561403357600080fd5b61403f878286016135a3565b82525060208301358281111561405457600080fd5b614060878286016135a3565b60208301525060408301358281111561407857600080fd5b61408487828601613edc565b60408301525060608301358281111561409c57600080fd5b6140a887828601613f5e565b60608301525095945050505050565b600081518084526020808501945080840160005b838110156139f8578151875295820195908201906001016140cb565b73ffffffffffffffffffffffffffffffffffffffff8151168252600060208201516060602085015261411c606085018261342b565b90506040830151848203604086015261413582826140b7565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526000602060408184015283516080604085015261417760c085018261342b565b9050818501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808684030160608701526141b2838361342b565b925060408701519150808684030160808701526141cf83836140e7565b606088015187820390920160a08801528151808252909350908401915083830190600581901b8401850160005b82811015614248577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08683030184526142368286516140e7565b948701949387019391506001016141fc565b509998505050505050505050565b606081526000614269606083018661342b565b828103602084015261427b81866140b7565b9050828103604084015261200681856140b7565b6000806000606084860312156142a457600080fd5b83516142af81613488565b60208501519093506142c081613488565b60408501519092506142d181613488565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261434057600080fd5b83018035915067ffffffffffffffff82111561435b57600080fd5b60200191503681900382131561198957600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143a1576143a1613e9a565b5060010190565b600081518084526020808501808196508360051b8101915082860160005b858110156143f05782840389526143de8483516140b7565b988501989350908401906001016143c6565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061051a60408301846143a8565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015282604082015260806060820152600061200660808301846143a8565b600082601f83011261447857600080fd5b815160206144886137b28361376d565b82815260059290921b840181019181810190868411156144a757600080fd5b8286015b848110156109a757805183529183019183016144ab565b600080604083850312156144d557600080fd5b825167ffffffffffffffff808211156144ed57600080fd5b6144f986838701614467565b9350602085015191508082111561450f57600080fd5b5061451c85828601614467565b9150509250929050565b82815260406020820152600061051a60408301846140b7565b601f821115611b1957600081815260208120601f850160051c810160208610156145665750805b601f850160051c820191505b8181101561458557828155600101614572565b505050505050565b815167ffffffffffffffff8111156145a7576145a76134d9565b6145bb816145b58454613e47565b8461453f565b602080601f83116001811461460e57600084156145d85750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555614585565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561465b5788860151825594840194600190910190840161463c565b508582101561469757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082516146e8818460208701613407565b9190910192915050565b604081526000614705604083018561342b565b90508260208301529392505050565b82815260406020820152600061051a604083018461342b565b60006020828403121561473f57600080fd5b5051919050565b60006020828403121561475857600080fd5b8151801515811461054157600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "1377:5943:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:254:7;;;;;;:::i;:::-;;:::i;:::-;;;516:14:87;;509:22;491:41;;479:2;464:18;661:254:7;;;;;;;;2495:98:8;;;:::i;:::-;;;;;;;:::i;4781:197::-;;;;;;:::i;:::-;;:::i;849:162:15:-;;;;;;:::i;:::-;;:::i;:::-;;;4319:66:87;4307:79;;;4289:98;;4277:2;4262:18;849:162:15;4145:248:87;3592:106:8;3679:12;;3592:106;;;4544:25:87;;;4532:2;4517:18;3592:106:8;4398:177:87;5540:256:8;;;;;;:::i;:::-;;:::i;3441:91::-;;;3523:2;5183:36:87;;5171:2;5156:18;3441:91:8;5041:184:87;6191:234:8;;;;;;:::i;:::-;;:::i;1999:1255:68:-;;;;;;:::i;:::-;;:::i;3756:125:8:-;;;;;;:::i;:::-;3856:18;;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;6613:429:68;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2706:102:8:-;;;:::i;6912:427::-;;;;;;:::i;:::-;;:::i;4077:189::-;;;;;;:::i;:::-;;:::i;695:319:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;972:247:6:-;;;;;;:::i;:::-;1176:36;972:247;;;;;;;;4324:149:8;;;;;;:::i;:::-;4439:18;;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;747:219:6;;;;;;:::i;:::-;928:31;747:219;;;;;;;;7048:270:68;;;;;;:::i;:::-;;:::i;661:254:7:-;785:4;808:60;;;823:45;808:60;;:100;;-1:-1:-1;1183:36:20;1168:51;;;;872:36:7;801:107;661:254;-1:-1:-1;;661:254:7:o;2495:98:8:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;929:10:17;4918:32:8;929:10:17;4934:7:8;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:8;;4781:197;-1:-1:-1;;;4781:197:8:o;849:162:15:-;974:30;849:162;;;;;;;:::o;5540:256:8:-;5637:4;929:10:17;5693:38:8;5709:4;929:10:17;5724:6:8;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;5785:4;5778:11;;;5540:256;;;;;;:::o;6191:234::-;929:10:17;6279:4:8;4439:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6279:4;;929:10:17;6333:64:8;;929:10:17;;4439:27:8;;6358:38;;6386:10;;6358:38;:::i;:::-;6333:8;:64::i;1999:1255:68:-;2070:7;3302:13:0;;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:0;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:0;1713:19:16;:23;;;3387:66:0;;-1:-1:-1;3436:12:0;;;;;:17;3387:66;3325:201;;;;;;;18617:2:87;3325:201:0;;;18599:21:87;18656:2;18636:18;;;18629:30;18695:34;18675:18;;;18668:62;18766:16;18746:18;;;18739:44;18800:19;;3325:201:0;;;;;;;;;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;2089:40:68::1;2132:37;::::0;;::::1;2143:4:::0;2132:37:::1;:::i;:::-;2089:80;;2184:39;2195:10;2207:15;2184:39;;;;;;;:::i;:::-;;;;;;;;2233:24;:22;:24::i;:::-;2267:58;2280:15;:20;;;2302:15;:22;;;2267:12;:58::i;:::-;2351:26;::::0;::::1;::::0;2336:66:::1;::::0;2379:22:::1;1660:1:65;2400::68;2379:22;:::i;:::-;2336:14;:66::i;:::-;2498:1;2430:65;2454:15;:31;;;:40;;;2430:23;:65::i;:::-;:69;:248;;;;;2677:1;2519:155;2568:15;:31;;;:40;;;1252:1;2519:155;;:27;:155::i;:::-;:159;2430:248;2413:796;;;2703:18;:25:::0;;;::::1;2724:4;2703:25;::::0;;2820:48:::1;::::0;;::::1;::::0;:74;;2946:40:::1;::::0;::::1;::::0;3004:41;;;::::1;::::0;2703:18:::1;::::0;;;;;2820:108:::1;::::0;;::::1;::::0;::::1;::::0;2946:40;3063:54:::1;2703:18:::0;2628:4:63;2622:11;;2660:1;2646:16;;2693:4;2682:16;;2675:27;;;;2728:16;;;2715:30;;2622:11;2487:274;3063:54:68::1;2820:311;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3157:41;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;3145:9:::1;:53:::0;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2413:796:68::1;191:36:39;3219:28:68;;;3651:14:0::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;5183:36:87;;3721:14:0;;5171:2:87;5156:18;3721:14:0;;;;;;;3647:99;3269:483;1999:1255:68;;;;:::o;6613:429::-;6799:20;;:::i;:::-;6831:27;6861:62;6878:27;:14;2628:4:63;2622:11;;2660:1;2646:16;;2693:4;2682:16;;2675:27;;;;2728:16;;;2715:30;;2622:11;2487:274;6878:27:68;6907:15;6861:16;:62::i;:::-;6831:92;;6934:33;6972:34;6985:10;6997:8;6972:12;:34::i;:::-;-1:-1:-1;6933:73:68;6613:429;-1:-1:-1;;;;;;6613:429:68:o;2706:102:8:-;2762:13;2794:7;2787:14;;;;;:::i;6912:427::-;929:10:17;7005:4:8;4439:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7005:4;;929:10:17;7149:15:8;7129:16;:35;;7121:85;;;;;;;25923:2:87;7121:85:8;;;25905:21:87;25962:2;25942:18;;;25935:30;26001:34;25981:18;;;25974:62;26072:7;26052:18;;;26045:35;26097:19;;7121:85:8;25721:401:87;7121:85:8;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:8;;6912:427;-1:-1:-1;;;;6912:427:8:o;4077:189::-;4156:4;929:10:17;4210:28:8;929:10:17;4227:2:8;4231:6;4210:9;:28::i;695:319:18:-;763:22;819:4;807:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:34;;846:9;841:143;861:15;;;841:143;;;910:63;958:4;965;;970:1;965:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;910:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;910:39:18;;-1:-1:-1;;;910:63:18:i;:::-;897:7;905:1;897:10;;;;;;;;:::i;:::-;;;;;;:76;;;;878:3;;;;;:::i;:::-;;;;841:143;;7048:270:68;7222:20;;:::i;:::-;7261:50;7267:10;7279:14;7295:15;7261:5;:50::i;10794:340:8:-;10895:19;;;10887:68;;;;;;;27303:2:87;10887:68:8;;;27285:21:87;27342:2;27322:18;;;27315:30;27381:34;27361:18;;;27354:62;27452:6;27432:18;;;27425:34;27476:19;;10887:68:8;27101:400:87;10887:68:8;10973:21;;;10965:68;;;;;;;27708:2:87;10965:68:8;;;27690:21:87;27747:2;27727:18;;;27720:30;27786:34;27766:18;;;27759:62;27857:4;27837:18;;;27830:32;27879:19;;10965:68:8;27506:398:87;10965:68:8;11044:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;4544:25:87;;;11095:32:8;;4517:18:87;11095:32:8;;;;;;;10794:340;;;:::o;11415:411::-;4439:18;;;;11515:24;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11601:17;11581:37;;11577:243;;11662:6;11642:16;:26;;11634:68;;;;;;;28111:2:87;11634:68:8;;;28093:21:87;28150:2;28130:18;;;28123:30;28189:31;28169:18;;;28162:59;28238:18;;11634:68:8;27909:353:87;11634:68:8;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;7889:18;;;7881:68;;;;;;;28469:2:87;7881:68:8;;;28451:21:87;28508:2;28488:18;;;28481:30;28547:34;28527:18;;;28520:62;28618:7;28598:18;;;28591:35;28643:19;;7881:68:8;28267:401:87;7881:68:8;7967:16;;;7959:64;;;;;;;28875:2:87;7959:64:8;;;28857:21:87;28914:2;28894:18;;;28887:30;28953:34;28933:18;;;28926:62;29024:5;29004:18;;;28997:33;29047:19;;7959:64:8;28673:399:87;7959:64:8;8105:15;;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;;;;29279:2:87;8130:72:8;;;29261:21:87;29318:2;29298:18;;;29291:30;29357:34;29337:18;;;29330:62;29428:8;29408:18;;;29401:36;29454:19;;8130:72:8;29077:402:87;8130:72:8;8236:15;;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;4544:25:87;;4532:2;4517:18;;4398:177;8500:26:8;;;;;;;;8537:37;8557:4;8563:2;8567:6;8537:19;:37::i;1868:111:1:-;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;5366:69:0;1938:34:1::1;:32;:34::i;:::-;1868:111::o:0;2118:147:8:-;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;5366:69:0;2220:38:8::1;2243:5;2250:7;2220:22;:38::i;:::-;2118:147:::0;;:::o;6741:2827:65:-;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;5366:69:0;6980:21:65::1;:19;:21::i;:::-;7015:22;:20;:22::i;:::-;7051:18;:16;:18::i;:::-;1660:1;7321:14;:35;7317:114;;;7383:33;::::0;::::1;::::0;;::::1;::::0;::::1;4544:25:87::0;;;4517:18;;7383:33:65::1;4398:177:87::0;7317:114:65::1;7445:31;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7445:31:65::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;7672:1880:65::1;7696:16;:23;7692:1;:27;7672:1880;;;7753:16;7770:1;7753:19;;;;;;;;:::i;:::-;;;;;;;7744:28;;8242:26;8270:25:::0;8297:18:::1;8319:6;:36;;;:74;;;8394:6;:15;;;8411:6;:16;;;8429:41;8455:14;2628:4:63::0;2622:11;;2660:1;2646:16;;2693:4;2682:16;;2675:27;;;;2728:16;;;2715:30;;2622:11;2487:274;8429:41:65::1;8319:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8241:230;;;;;;8501:41;;;;;;;;8511:11;8501:41;;;;;;8524:5;8501:41;;;;;;8531:10;8501:41;;;;::::0;8489:53:::1;;2230:1;9159:15;:33;9175:16;:9;2772:4:54::0;2751:26;;;2304:489;9175:16:65::1;9159:33:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;9159:33:65;:54;;;;9499:38;;9515:10:::1;30188:34:87::0;;30262:13;;30137:42;30258:22;;;30238:18;;;30231:50;30327:15;;;30321:22;30317:31;;30297:18;;;30290:59;30395:15;;;30389:22;30385:31;30380:2;30365:18;;30358:59;9499:38:65::1;::::0;30114:3:87;30099:19;9499:38:65::1;;;;;;;7726:1826;;;7721:3;;;;;7672:1880;;;;6890:2672;;6741:2827:::0;;:::o;476:349:50:-;543:13;572:8;:15;591:1;572:20;568:59;;-1:-1:-1;615:1:50;;476:349;-1:-1:-1;476:349:50:o;568:59::-;-1:-1:-1;802:4:50;788:19;782:26;779:1;774:35;;476:349::o;2368:316::-;2460:14;2510:15;2528:36;2542:8;2552:11;2528:13;:36::i;:::-;2639:14;2636:1;2631:23;;2368:316;-1:-1:-1;;;;2368:316:50:o;7166:2290:51:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:51;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:63;3277:11;;3315:1;3301:16;;2288:10:51;3348:4:63;3337:16;;3330:27;2326:4:51;3377:16:63;;;3370:27;2211:16:51;3423::63;;3410:30;;;3277:11;2172:169:51;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:51;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:40;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:51;7389:34:33;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:51;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;4544:25:87;;;4517:18;;9164:19:51;4398:177:87;8196:1010:51;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:51;7166:2290;-1:-1:-1;;;;;7166:2290:51:o;4741:947:68:-;4884:20;;:::i;:::-;4906:16;4938:33;4981;5024:22;5057:20;5079:17;5098:21;5123:31;5133:10;5145:8;5123:9;:31::i;:::-;1125:33;;;;;;;;;;;;;;;;;;5056:98;;-1:-1:-1;5056:98:68;-1:-1:-1;5056:98:68;-1:-1:-1;5211:74:68;5056:98;;1115:65;5283:1;5211:34;:74::i;:::-;1125:33;;;;;;;;;;;;;;;;;;5181:104;-1:-1:-1;5181:104:68;;-1:-1:-1;5181:104:68;-1:-1:-1;5424:74:68;:12;5181:104;1115:65;5496:1;5424:34;:74::i;:::-;5394:104;;;;;;;;5557:14;5547:24;;5599:75;;;;;;;;5613:6;5599:75;;;;5621:6;5599:75;;;;5629:44;5649:12;5663:9;5629:19;:44::i;:::-;5599:75;;5591:90;-1:-1:-1;5676:4:68;-1:-1:-1;;;;;;4741:947:68;;;;;;:::o;6685:198:16:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;5694:913:68:-;5882:20;;:::i;:::-;2505:21:1;:19;:21::i;:::-;5938:27:68::1;5968:62;5985:27;:14;2628:4:63::0;2622:11;;2660:1;2646:16;;2693:4;2682:16;;2675:27;;;;2728:16;;;2715:30;;2622:11;2487:274;5968:62:68::1;5938:92;;6049:29;6057:10;6069:8;6049:29;;;;;;;:::i;:::-;;;;;;;;6093:28;6123:21:::0;6148:34:::1;6161:10;6173:8;6148:12;:34::i;:::-;6092:90;;;;6201:10;6196:145;6222:13:::0;;:20;6217:25;::::1;6196:145;;;6268:58;6274:7;:13;;;6288:2;6274:17;;;;;;;;:::i;:::-;;;;;;;:25;;;6301:7;:13;;;6315:2;6301:17;;;;;;;;:::i;:::-;;;;;;;:24;;;6268:5;:58::i;:::-;6244:4;;6196:145;;;;6359:10;6354:145;6380:7;:13;;;:20;6375:2;:25;6354:145;;;6426:58;6432:7;:13;;;6446:2;6432:17;;;;;;;;:::i;:::-;;;;;;;:25;;;6459:7;:13;;;6473:2;6459:17;;;;;;;;:::i;:::-;;;;;;;:24;;;6426:5;:58::i;:::-;6402:4;;6354:145;;;;6512:50;6525:7;:12;;;6539:10;:16;;;6557:4;6512:12;:50::i;:::-;-1:-1:-1::0;6583:7:68;-1:-1:-1;;2547:20:1;1787:1:::1;2065:22:::0;;1985:109;12410:91:8;;;;:::o;3505:1230:68:-;3837:18;;;;:65;;;;-1:-1:-1;3861:19:68;;;;;:40;;-1:-1:-1;3884:17:68;;;;3861:40;3859:43;3837:65;3833:886;;;3922:39;;;;;;;;3952:9;3922:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;:39;4007:27;;3922;;4139:46;;:23;:46::i;:::-;4055:4:63;4049:11;;4087:1;4073:16;;4415:23:68;;;;4120:4:63;4109:16;;4102:27;4440:21:68;;4149:16:63;;;4142:27;3967:22;4189:16;;4182:27;;;2660:1;4246:4;4235:16;;2646;;;2682;;;2675:27;;;-1:-1:-1;2728:16:63;;;4510:24:68;;;;;;;;;;4207:349;;4235:16:63;;2728;4510:24:68;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;4510:24:68;;;;;;;;;;;;;;;;;4207:16;:349::i;:::-;4007:567;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3979:595;;;4610:1;4596:4;:11;:15;4592:113;;;4635:10;:16;;;:20;;;1142:1:47;4681:4:68;4635:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3904:815;;3505:1230;;;:::o;1985:109:1:-;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;5366:69:0;1787:1:1::1;2065:22:::0;;1985:109::o;2271:159:8:-;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;5366:69:0;2383:5:8::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:8::1;:17;2416:7:::0;2406;:17:::1;:::i;558:64:15:-:0;5374:13:0;;;;;;;5366:69;;;;;;;29686:2:87;5366:69:0;;;29668:21:87;29725:2;29705:18;;;29698:30;29764:34;29744:18;;;29737:62;29835:13;29815:18;;;29808:41;29866:19;;5366:69:0;29484:407:87;1950:412:50;2040:15;2091:26;2124:21;2136:8;2124:11;:21::i;:::-;2148:1;2124:25;2120:1;:29;2091:58;;2163:14;2180:43;2201:8;2211:11;2180:20;:43::i;:::-;2279:44;;;;2275:57;;;2297:4;2275:57;;1950:412;-1:-1:-1;;;1950:412:50:o;1014:366:34:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:34;-1:-1:-1;1256:26:34;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:34:o;10274:781:65:-;10396:7;10405;10414:16;10510:21;10534:16;:9;2772:4:54;2751:26;;;2304:489;10534:16:65;2333:1;10568:30;;;:15;:30;;;;;;10510:40;;-1:-1:-1;10564:133:65;;10651:31;;;;;;;;4544:25:87;;;4517:18;;10651:31:65;4398:177:87;10564:133:65;-1:-1:-1;10766:21:65;;10806:15;;;;;10898:20;;;;10718:22;;;;10766:26;;;;;;;10806:15;;10718:22;;1016:34:53;;;;2106:16:65;1015:100:53;10968:7:65;10766:219;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10717:268;;;;11003:19;:5;1316:4:63;1305:16;;1160:177;11003:19:65;1699:12:63;;10995:53:65;;1693:4:63;1689:23;;;1668:46;;;;;-1:-1:-1;11044:3:65;-1:-1:-1;10274:781:65;-1:-1:-1;;;10274:781:65:o;5720:1757:62:-;5858:23;;6096:4;6089:12;;6206:5;6186:334;6225:5;6217:6;6214:17;6186:334;;;6326:4;6318:6;6314:17;6387:8;6360:24;6354:31;6351:45;6348:158;;6438:24;-1:-1:-1;6483:5:62;;6348:158;-1:-1:-1;6244:17:62;;;6186:334;;;6190:23;6611:15;6631:1;6596:36;6592:99;;6655:25;;;;;;;;4544::87;;;4517:18;;6655:25:62;4398:177:87;6592:99:62;6864:4;6858:11;6841:28;;6921:4;6906:13;6902:24;6980:4;6963:15;6959:26;6939:296;6999:5;6991:6;6988:17;6939:296;;;7193:28;;;7058:4;7040:23;;;;7090:17;;6939:296;;;6943:44;7325:12;7319:4;7312:26;7458:1;7451:4;7435:13;7421:12;7417:32;7413:43;7409:51;7394:13;7387:74;;6827:644;5720:1757;;;;;;;:::o;1864:1065:86:-;1949:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1949:21:86;1531:27;;;;;;;;;;;;;;;;;;2006:29;;;2141:22;2228:68;:12;2263:9;1521:59;2294:1;2228:34;:68::i;:::-;1531:27;;;;;;;;;;;;;;;;;;2198:98;;-1:-1:-1;2198:98:86;-1:-1:-1;2198:98:86;;-1:-1:-1;2456:68:86;:12;2198:98;1521:59;2522:1;2456:34;:68::i;:::-;1531:27;;;;;;;;;;;;;;;;;;2426:98;;-1:-1:-1;2426:98:86;-1:-1:-1;2426:98:86;;-1:-1:-1;2686:68:86;:12;2426:98;1521:59;2752:1;2686:34;:68::i;:::-;2871:41;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2871:41:86;;1864:1065;-1:-1:-1;;;;;1864:1065:86:o;7069:325:16:-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;2580:287:1:-;1830:1;2712:7;;:19;2704:63;;;;;;;37143:2:87;2704:63:1;;;37125:21:87;37182:2;37162:18;;;37155:30;37221:33;37201:18;;;37194:61;37272:18;;2704:63:1;36941:355:87;2704:63:1;1830:1;2842:7;:18;2580:287::o;8857:535:8:-;8940:21;;;8932:65;;;;;;;37503:2:87;8932:65:8;;;37485:21:87;37542:2;37522:18;;;37515:30;37581:33;37561:18;;;37554:61;37632:18;;8932:65:8;37301:355:87;8932:65:8;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;9236:18:8;;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;4544:25:87;;;9289:37:8;;4517:18:87;9289:37:8;;;;;;;9337:48;9365:1;9369:7;9378:6;9337:19;:48::i;9712:659::-;9795:21;;;9787:67;;;;;;;37863:2:87;9787:67:8;;;37845:21:87;37902:2;37882:18;;;37875:30;37941:34;37921:18;;;37914:62;38012:3;37992:18;;;37985:31;38033:19;;9787:67:8;37661:397:87;9787:67:8;9950:18;;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;;;;38265:2:87;9978:71:8;;;38247:21:87;38304:2;38284:18;;;38277:30;38343:34;38323:18;;;38316:62;38414:4;38394:18;;;38387:32;38436:19;;9978:71:8;38063:398:87;9978:71:8;10083:18;;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;4544:25:87;;;10083:18:8;;;10268:37;;4517:18:87;10268:37:8;;;;;;;10316:48;10336:7;10353:1;10357:6;10316:19;:48::i;5071:356:86:-;5219:11;;:15;5215:98;;5250:52;;;;;:21;;;;;;:52;;1142:1:47;;5297:4:86;;5250:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5215:98;5322:25;:13;:23;:25::i;:::-;5357:26;:13;:24;:26::i;:::-;5393:27;:13;:25;:27::i;3260:213:68:-;3337:15;1048:2:53;1016:34;;;;;3371:95:68;816:316:53;831:1113:50;1163:1;1146:19;;1124:42;;1142:1;1124:42;1118:49;1169:6;1114:62;928:14;1582:21;1132:8;1582:11;:21::i;:::-;1782:15;;1566:37;;-1:-1:-1;1738:26:50;1750:1;1742:9;;1738:22;;:26;;1782:34;-1:-1:-1;1782:34:50;:58;;;1835:5;1820:11;:20;;1782:58;1778:150;;;1891:8;1901:11;1867:46;;;;;;;;;;;;:::i;1778:150::-;1542:396;;831:1113;;;;:::o;2145:730:33:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2802:56;;1786:473:34;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:34;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:34:o;7682:628:16:-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;39445:2:87;8124:60:16;;;39427:21:87;39484:2;39464:18;;;39457:30;39523:31;39503:18;;;39496:59;39572:18;;8124:60:16;39243:353:87;8124:60:16;-1:-1:-1;8219:10:16;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;2935:855:86:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3078:696:86;3104:19;;:26;3099:31;;3078:696;;;3168:19;;:23;;3188:2;;3168:23;;;;;;:::i;:::-;;;;;;;3156:35;;3231:10;3213:28;;:9;:14;;;:28;;;3209:551;;3318:12;;;;3332:16;;;;3272:15;;3265:84;;:40;;;;;3306:10;;3318:12;3265:40;:84::i;:::-;3209:551;;;3404:4;3378:31;;:9;:14;;;:31;;;3374:386;;3470:12;;;;3484:16;;;;3440:15;;3433:68;;:36;;;;;;:68::i;3374:386::-;3719:22;;;;;;;;;;;;;;3374:386;3132:4;;3078:696;;3796:551;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3941:390:86;3967:13;:20;;;:27;3962:2;:32;3941:390;;;4032:13;:20;;;4053:2;4032:24;;;;;;;;:::i;:::-;;;;;;;4020:36;;4096:10;4078:28;;:9;:14;;;:28;;;;:63;;;;-1:-1:-1;4110:14:86;;;;:31;;4136:4;4110:31;;4078:63;4074:140;;;4172:23;;;;;;;;;;;;;;4074:140;4239:15;;4273:14;;;;4289:12;;;;;4303;;;;4231:85;;;;;:41;39882:15:87;;;4231:85:86;;;39864:34:87;39934:15;;;39914:18;;;39907:43;39966:18;;;39959:34;;;;4231:41:86;;;;;39776:18:87;;4231:85:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3996:4:86;;;;;-1:-1:-1;3941:390:86;;-1:-1:-1;3941:390:86;4353:712;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:549:86;4526:13;:21;;;:28;4521:2;:33;4500:549;;;4592:13;:21;;;4614:2;4592:25;;;;;;;;:::i;:::-;;;;;;;4580:37;;4657:10;4639:28;;:9;:14;;;:28;;;;:63;;;;-1:-1:-1;4671:14:86;;;;:31;;4697:4;4671:31;;4639:63;4635:141;;;4733:24;;;;;;;;;;;;;;4635:141;4897:15;;4952:14;;;;4968:12;;;;;4982;;;;4996:16;;;;4888:146;;;;;:42;40378:15:87;;;4888:146:86;;;40360:34:87;40430:15;;;40410:18;;;40403:43;40462:18;;;40455:34;40505:18;;;40498:34;;;;40569:3;40548:19;;;40541:32;-1:-1:-1;40589:19:87;;;40582:30;4888:42:86;;;;;40629:19:87;;4888:146:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4556:4:86;;;;;-1:-1:-1;4500:549:86;;-1:-1:-1;4500:549:86;5009:1456:33;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;40886:25:87;;;40959:4;40947:17;;40927:18;;;40920:45;;;;40981:18;;;40974:34;;;41024:18;;;41017:34;;;6276:24:33;;40858:19:87;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;;;;;-1:-1:-1;;6314:20:33;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;8832:540:16:-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;1355:203:29:-;1482:68;;39813:42:87;39882:15;;;1482:68:29;;;39864:34:87;39934:15;;39914:18;;;39907:43;39966:18;;;39959:34;;;1455:96:29;;1475:5;;1505:27;;39776:18:87;;1482:68:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;41266:42:87;41254:55;;1050:58:29;;;41236:74:87;41326:18;;;41319:34;;;1023:86:29;;1043:5;;1073:23;;41209:18:87;;1050:58:29;41062:297:87;5173:642:29;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;;;;41848:2:87;5697:111:29;;;41830:21:87;41887:2;41867:18;;;41860:30;41926:34;41906:18;;;41899:62;41997:12;41977:18;;;41970:40;42027:19;;5697:111:29;41646:406:87;4108:223:31;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:31:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:332:87:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:250;628:1;638:113;652:6;649:1;646:13;638:113;;;728:11;;;722:18;709:11;;;702:39;674:2;667:10;638:113;;;-1:-1:-1;;785:1:87;767:16;;760:27;543:250::o;798:330::-;840:3;878:5;872:12;905:6;900:3;893:19;921:76;990:6;983:4;978:3;974:14;967:4;960:5;956:16;921:76;:::i;:::-;1042:2;1030:15;1047:66;1026:88;1017:98;;;;1117:4;1013:109;;798:330;-1:-1:-1;;798:330:87:o;1133:220::-;1282:2;1271:9;1264:21;1245:4;1302:45;1343:2;1332:9;1328:18;1320:6;1302:45;:::i;1358:154::-;1444:42;1437:5;1433:54;1426:5;1423:65;1413:93;;1502:1;1499;1492:12;1413:93;1358:154;:::o;1517:315::-;1585:6;1593;1646:2;1634:9;1625:7;1621:23;1617:32;1614:52;;;1662:1;1659;1652:12;1614:52;1701:9;1688:23;1720:31;1745:5;1720:31;:::i;:::-;1770:5;1822:2;1807:18;;;;1794:32;;-1:-1:-1;;;1517:315:87:o;1837:184::-;1889:77;1886:1;1879:88;1986:4;1983:1;1976:15;2010:4;2007:1;2000:15;2026:253;2098:2;2092:9;2140:4;2128:17;;2175:18;2160:34;;2196:22;;;2157:62;2154:88;;;2222:18;;:::i;:::-;2258:2;2251:22;2026:253;:::o;2284:::-;2356:2;2350:9;2398:4;2386:17;;2433:18;2418:34;;2454:22;;;2415:62;2412:88;;;2480:18;;:::i;2542:334::-;2613:2;2607:9;2669:2;2659:13;;2674:66;2655:86;2643:99;;2772:18;2757:34;;2793:22;;;2754:62;2751:88;;;2819:18;;:::i;:::-;2855:2;2848:22;2542:334;;-1:-1:-1;2542:334:87:o;2881:589::-;2923:5;2976:3;2969:4;2961:6;2957:17;2953:27;2943:55;;2994:1;2991;2984:12;2943:55;3030:6;3017:20;3056:18;3052:2;3049:26;3046:52;;;3078:18;;:::i;:::-;3122:114;3230:4;3161:66;3154:4;3150:2;3146:13;3142:86;3138:97;3122:114;:::i;:::-;3261:2;3252:7;3245:19;3307:3;3300:4;3295:2;3287:6;3283:15;3279:26;3276:35;3273:55;;;3324:1;3321;3314:12;3273:55;3389:2;3382:4;3374:6;3370:17;3363:4;3354:7;3350:18;3337:55;3437:1;3412:16;;;3430:4;3408:27;3401:38;;;;3416:7;2881:589;-1:-1:-1;;;2881:589:87:o;3475:665::-;3570:6;3578;3586;3594;3647:3;3635:9;3626:7;3622:23;3618:33;3615:53;;;3664:1;3661;3654:12;3615:53;3703:9;3690:23;3722:31;3747:5;3722:31;:::i;:::-;3772:5;-1:-1:-1;3829:2:87;3814:18;;3801:32;3842:33;3801:32;3842:33;:::i;:::-;3894:7;-1:-1:-1;3948:2:87;3933:18;;3920:32;;-1:-1:-1;4003:2:87;3988:18;;3975:32;4030:18;4019:30;;4016:50;;;4062:1;4059;4052:12;4016:50;4085:49;4126:7;4117:6;4106:9;4102:22;4085:49;:::i;:::-;4075:59;;;3475:665;;;;;;;:::o;4580:456::-;4657:6;4665;4673;4726:2;4714:9;4705:7;4701:23;4697:32;4694:52;;;4742:1;4739;4732:12;4694:52;4781:9;4768:23;4800:31;4825:5;4800:31;:::i;:::-;4850:5;-1:-1:-1;4907:2:87;4892:18;;4879:32;4920:33;4879:32;4920:33;:::i;:::-;4580:456;;4972:7;;-1:-1:-1;;;5026:2:87;5011:18;;;;4998:32;;4580:456::o;5230:591::-;5300:6;5308;5361:2;5349:9;5340:7;5336:23;5332:32;5329:52;;;5377:1;5374;5367:12;5329:52;5417:9;5404:23;5446:18;5487:2;5479:6;5476:14;5473:34;;;5503:1;5500;5493:12;5473:34;5541:6;5530:9;5526:22;5516:32;;5586:7;5579:4;5575:2;5571:13;5567:27;5557:55;;5608:1;5605;5598:12;5557:55;5648:2;5635:16;5674:2;5666:6;5663:14;5660:34;;;5690:1;5687;5680:12;5660:34;5735:7;5730:2;5721:6;5717:2;5713:15;5709:24;5706:37;5703:57;;;5756:1;5753;5746:12;5703:57;5787:2;5779:11;;;;;5809:6;;-1:-1:-1;5230:591:87;;-1:-1:-1;;;;5230:591:87:o;6008:247::-;6067:6;6120:2;6108:9;6099:7;6095:23;6091:32;6088:52;;;6136:1;6133;6126:12;6088:52;6175:9;6162:23;6194:31;6219:5;6194:31;:::i;6260:183::-;6320:4;6353:18;6345:6;6342:30;6339:56;;;6375:18;;:::i;:::-;-1:-1:-1;6420:1:87;6416:14;6432:4;6412:25;;6260:183::o;6448:662::-;6502:5;6555:3;6548:4;6540:6;6536:17;6532:27;6522:55;;6573:1;6570;6563:12;6522:55;6609:6;6596:20;6635:4;6659:60;6675:43;6715:2;6675:43;:::i;:::-;6659:60;:::i;:::-;6753:15;;;6839:1;6835:10;;;;6823:23;;6819:32;;;6784:12;;;;6863:15;;;6860:35;;;6891:1;6888;6881:12;6860:35;6927:2;6919:6;6915:15;6939:142;6955:6;6950:3;6947:15;6939:142;;;7021:17;;7009:30;;7059:12;;;;6972;;6939:142;;7115:2897;7304:6;7312;7320;7364:9;7355:7;7351:23;7394:3;7390:2;7386:12;7383:32;;;7411:1;7408;7401:12;7383:32;7435:4;7431:2;7427:13;7424:33;;;7453:1;7450;7443:12;7424:33;;7479:22;;:::i;:::-;7538:9;7525:23;7557:33;7582:7;7557:33;:::i;:::-;7599:22;;7640:2;7679:18;;;7666:32;7707:33;7666:32;7707:33;:::i;:::-;7756:14;;;7749:31;7832:2;7817:18;;7804:32;7845:33;7804:32;7845:33;:::i;:::-;7905:2;7894:14;;7887:31;7898:5;;-1:-1:-1;7993:4:87;7978:20;;7965:34;;8018:18;8048:14;;;8045:34;;;8075:1;8072;8065:12;8045:34;8098:61;8151:7;8142:6;8131:9;8127:22;8098:61;:::i;:::-;8088:71;;8212:3;8201:9;8197:19;8184:33;8168:49;;8242:2;8232:8;8229:16;8226:36;;;8258:1;8255;8248:12;8226:36;8296:8;8285:9;8281:24;8271:34;;8343:7;8336:4;8332:2;8328:13;8324:27;8314:55;;8365:1;8362;8355:12;8314:55;8401:2;8388:16;8424:60;8440:43;8480:2;8440:43;:::i;8424:60::-;8518:15;;;8600:1;8596:10;;;;8588:19;;8584:28;;;8549:12;;;;8624:19;;;8621:39;;;8656:1;8653;8646:12;8621:39;8688:2;8684;8680:11;8700:1282;8716:6;8711:3;8708:15;8700:1282;;;8802:3;8789:17;8838:2;8825:11;8822:19;8819:109;;;8882:1;8911:2;8907;8900:14;8819:109;8951:20;;9082:4;8995:16;;;9013:66;8991:89;8987:100;8984:190;;;9128:1;9157:2;9153;9146:14;8984:190;9202:22;;:::i;:::-;9273:2;9269;9265:11;9252:25;9290:33;9315:7;9290:33;:::i;:::-;9336:24;;9410:2;9402:11;;9389:25;9430:16;;;9427:106;;;9487:1;9516:2;9512;9505:14;9427:106;9571:65;9628:7;9623:2;9612:8;9608:2;9604:17;9600:26;9571:65;:::i;:::-;9566:2;9557:7;9553:16;9546:91;;9687:4;9683:2;9679:13;9666:27;9722:2;9712:8;9709:16;9706:109;;;9767:1;9797:3;9792;9785:16;9706:109;9853:53;9898:7;9893:2;9882:8;9878:2;9874:17;9870:26;9853:53;:::i;:::-;9848:2;9835:16;;9828:79;-1:-1:-1;9920:20:87;;-1:-1:-1;9960:12:87;;;;8733;;8700:1282;;;8704:3;10001:5;9991:15;;;;;;;;7115:2897;;;;;:::o;10017:588::-;10087:3;10125:5;10119:12;10152:6;10147:3;10140:19;10178:4;10207:2;10202:3;10198:12;10191:19;;10244:2;10237:5;10233:14;10265:1;10275:305;10289:6;10286:1;10283:13;10275:305;;;10348:13;;10390:9;;10401:42;10386:58;10374:71;;10485:11;;10479:18;10465:12;;;10458:40;10527:4;10518:14;;;;10555:15;;;;10311:1;10304:9;10275:305;;;-1:-1:-1;10596:3:87;;10017:588;-1:-1:-1;;;;;10017:588:87:o;10969:869::-;11037:3;11075:5;11069:12;11102:6;11097:3;11090:19;11128:4;11157:2;11152:3;11148:12;11141:19;;11194:2;11187:5;11183:14;11215:1;11225:588;11239:6;11236:1;11233:13;11225:588;;;11298:13;;11405:9;;11334:42;11401:18;;;11389:31;;11464:11;;;11458:18;11454:27;;11440:12;;;11433:49;11505:4;11553:11;;;11547:18;11543:27;;;11529:12;;;11522:49;11594:4;11638:11;;;11632:18;11618:12;;;11611:40;11674:4;11718:11;;;11712:18;11698:12;;;11691:40;11760:4;11751:14;;;;11788:15;;;;11261:1;11254:9;11225:588;;11843:2102;11999:4;12028:2;12057;12046:9;12039:21;12079:3;12117:6;12111:13;12160:4;12155:2;12144:9;12140:18;12133:32;12188:79;12263:2;12252:9;12248:18;12234:12;12188:79;:::i;:::-;12174:93;;12316:2;12308:6;12304:15;12298:22;12339:66;12469:2;12457:9;12449:6;12445:22;12441:31;12436:2;12425:9;12421:18;12414:59;12496:69;12558:6;12542:14;12496:69;:::i;:::-;12482:83;;12614:2;12606:6;12602:15;12596:22;12574:44;;12684:2;12672:9;12664:6;12660:22;12656:31;12649:4;12638:9;12634:20;12627:61;;12723:4;12715:6;12711:17;12765:14;12759:21;12804:4;12796:6;12789:20;12829:6;12864:14;12858:21;12903:6;12895;12888:22;12938:2;12930:6;12926:15;12919:22;;12984:2;12968:14;12964:23;12950:37;;13005:1;12996:10;;13015:194;13029:6;13026:1;13023:13;13015:194;;;13078:51;13125:3;13116:6;13110:13;10687:42;10768:2;10760:5;10754:12;10750:21;10745:3;10738:34;10833:2;10825:4;10818:5;10814:16;10808:23;10804:32;10797:4;10792:3;10788:14;10781:56;10898:2;10890:4;10883:5;10879:16;10873:23;10869:32;10862:4;10857:3;10853:14;10846:56;;10951:4;10944:5;10940:16;10934:23;10927:4;10922:3;10918:14;10911:47;10610:354;;;13078:51;13184:15;;;;13051:1;13044:9;;;;;13149:12;;;;13015:194;;;-1:-1:-1;13246:23:87;;;13240:30;13303:16;;;13286:15;;;13279:41;13370:21;;13400;;;13476:23;;;;-1:-1:-1;13439:12:87;;;;-1:-1:-1;13519:1:87;;13529:214;13545:8;13540:3;13537:17;13529:214;;;13600:55;13649:5;13638:8;13632:15;10687:42;10768:2;10760:5;10754:12;10750:21;10745:3;10738:34;10833:2;10825:4;10818:5;10814:16;10808:23;10804:32;10797:4;10792:3;10788:14;10781:56;10898:2;10890:4;10883:5;10879:16;10873:23;10869:32;10862:4;10857:3;10853:14;10846:56;;10951:4;10944:5;10940:16;10934:23;10927:4;10922:3;10918:14;10911:47;10610:354;;;13600:55;13716:17;;;;13677:14;;;;13573:1;13564:11;;;;;13529:214;;;13533:3;;13800:2;13784:14;13780:23;13774:30;13752:52;;13848:6;13841:5;13837:18;13832:2;13824:6;13820:15;13813:43;13873:66;13933:5;13917:14;13873:66;:::i;:::-;13865:74;11843:2102;-1:-1:-1;;;;;;;;;11843:2102:87:o;13950:626::-;14047:6;14055;14108:2;14096:9;14087:7;14083:23;14079:32;14076:52;;;14124:1;14121;14114:12;14076:52;14164:9;14151:23;14193:18;14234:2;14226:6;14223:14;14220:34;;;14250:1;14247;14240:12;14220:34;14288:6;14277:9;14273:22;14263:32;;14333:7;14326:4;14322:2;14318:13;14314:27;14304:55;;14355:1;14352;14345:12;14304:55;14395:2;14382:16;14421:2;14413:6;14410:14;14407:34;;;14437:1;14434;14427:12;14407:34;14490:7;14485:2;14475:6;14472:1;14468:14;14464:2;14460:23;14456:32;14453:45;14450:65;;;14511:1;14508;14501:12;14581:860;14741:4;14770:2;14810;14799:9;14795:18;14840:2;14829:9;14822:21;14863:6;14898;14892:13;14929:6;14921;14914:22;14967:2;14956:9;14952:18;14945:25;;15029:2;15019:6;15016:1;15012:14;15001:9;14997:30;14993:39;14979:53;;15067:2;15059:6;15055:15;15088:1;15098:314;15112:6;15109:1;15106:13;15098:314;;;15201:66;15189:9;15181:6;15177:22;15173:95;15168:3;15161:108;15292:40;15325:6;15316;15310:13;15292:40;:::i;:::-;15282:50;-1:-1:-1;15390:12:87;;;;15355:15;;;;15134:1;15127:9;15098:314;;;-1:-1:-1;15429:6:87;;14581:860;-1:-1:-1;;;;;;;14581:860:87:o;15446:1071::-;15600:6;15608;15616;15624;15632;15685:3;15673:9;15664:7;15660:23;15656:33;15653:53;;;15702:1;15699;15692:12;15653:53;15741:9;15728:23;15760:31;15785:5;15760:31;:::i;:::-;15810:5;-1:-1:-1;15867:2:87;15852:18;;15839:32;15880:33;15839:32;15880:33;:::i;:::-;15932:7;-1:-1:-1;15990:2:87;15975:18;;15962:32;16013:18;16043:14;;;16040:34;;;16070:1;16067;16060:12;16040:34;16093:61;16146:7;16137:6;16126:9;16122:22;16093:61;:::i;:::-;16083:71;;16207:2;16196:9;16192:18;16179:32;16163:48;;16236:2;16226:8;16223:16;16220:36;;;16252:1;16249;16242:12;16220:36;16275:63;16330:7;16319:8;16308:9;16304:24;16275:63;:::i;:::-;16265:73;;16391:3;16380:9;16376:19;16363:33;16347:49;;16421:2;16411:8;16408:16;16405:36;;;16437:1;16434;16427:12;16405:36;;16460:51;16503:7;16492:8;16481:9;16477:24;16460:51;:::i;:::-;16450:61;;;15446:1071;;;;;;;;:::o;16522:388::-;16590:6;16598;16651:2;16639:9;16630:7;16626:23;16622:32;16619:52;;;16667:1;16664;16657:12;16619:52;16706:9;16693:23;16725:31;16750:5;16725:31;:::i;:::-;16775:5;-1:-1:-1;16832:2:87;16817:18;;16804:32;16845:33;16804:32;16845:33;:::i;:::-;16897:7;16887:17;;;16522:388;;;;;:::o;16915:734::-;17019:6;17027;17035;17043;17051;17104:3;17092:9;17083:7;17079:23;17075:33;17072:53;;;17121:1;17118;17111:12;17072:53;17160:9;17147:23;17179:31;17204:5;17179:31;:::i;:::-;17229:5;-1:-1:-1;17286:2:87;17271:18;;17258:32;17299:33;17258:32;17299:33;:::i;:::-;17351:7;-1:-1:-1;17405:2:87;17390:18;;17377:32;;-1:-1:-1;17456:2:87;17441:18;;17428:32;;-1:-1:-1;17511:3:87;17496:19;;17483:33;17539:18;17528:30;;17525:50;;;17571:1;17568;17561:12;17525:50;17594:49;17635:7;17626:6;17615:9;17611:22;17594:49;:::i;17654:437::-;17733:1;17729:12;;;;17776;;;17797:61;;17851:4;17843:6;17839:17;17829:27;;17797:61;17904:2;17896:6;17893:14;17873:18;17870:38;17867:218;;17941:77;17938:1;17931:88;18042:4;18039:1;18032:15;18070:4;18067:1;18060:15;17867:218;;17654:437;;;:::o;18096:184::-;18148:77;18145:1;18138:88;18245:4;18242:1;18235:15;18269:4;18266:1;18259:15;18285:125;18350:9;;;18371:10;;;18368:36;;;18384:18;;:::i;18830:707::-;18894:5;18942:4;18930:9;18925:3;18921:19;18917:30;18914:50;;;18960:1;18957;18950:12;18914:50;18982:22;;:::i;:::-;18973:31;;19041:9;19028:23;19060:33;19085:7;19060:33;:::i;:::-;19102:22;;19175:2;19160:18;;19147:32;19198:18;19228:14;;;19225:34;;;19255:1;19252;19245:12;19225:34;19291:45;19332:3;19323:6;19312:9;19308:22;19291:45;:::i;:::-;19286:2;19279:5;19275:14;19268:69;19390:2;19379:9;19375:18;19362:32;19346:48;;19419:2;19409:8;19406:16;19403:36;;;19435:1;19432;19425:12;19403:36;;19471:59;19526:3;19515:8;19504:9;19500:24;19471:59;:::i;:::-;19466:2;19459:5;19455:14;19448:83;;18830:707;;;;:::o;19542:924::-;19613:5;19666:3;19659:4;19651:6;19647:17;19643:27;19633:55;;19684:1;19681;19674:12;19633:55;19720:6;19707:20;19746:4;19770:60;19786:43;19826:2;19786:43;:::i;19770:60::-;19864:15;;;19950:1;19946:10;;;;19934:23;;19930:32;;;19895:12;;;;19974:15;;;19971:35;;;20002:1;19999;19992:12;19971:35;20038:2;20030:6;20026:15;20050:387;20066:6;20061:3;20058:15;20050:387;;;20152:3;20139:17;20188:18;20175:11;20172:35;20169:125;;;20248:1;20277:2;20273;20266:14;20169:125;20319:75;20390:3;20385:2;20371:11;20363:6;20359:24;20355:33;20319:75;:::i;:::-;20307:88;;-1:-1:-1;20415:12:87;;;;20083;;20050:387;;20471:1183;20566:6;20619:2;20607:9;20598:7;20594:23;20590:32;20587:52;;;20635:1;20632;20625:12;20587:52;20675:9;20662:23;20704:18;20745:2;20737:6;20734:14;20731:34;;;20761:1;20758;20751:12;20731:34;20784:22;;;;20840:4;20822:16;;;20818:27;20815:47;;;20858:1;20855;20848:12;20815:47;20884:22;;:::i;:::-;20944:2;20931:16;20972:2;20962:8;20959:16;20956:36;;;20988:1;20985;20978:12;20956:36;21015:44;21051:7;21040:8;21036:2;21032:17;21015:44;:::i;:::-;21008:5;21001:59;;21106:2;21102;21098:11;21085:25;21135:2;21125:8;21122:16;21119:36;;;21151:1;21148;21141:12;21119:36;21187:44;21223:7;21212:8;21208:2;21204:17;21187:44;:::i;:::-;21182:2;21175:5;21171:14;21164:68;;21278:2;21274;21270:11;21257:25;21307:2;21297:8;21294:16;21291:36;;;21323:1;21320;21313:12;21291:36;21359:63;21414:7;21403:8;21399:2;21395:17;21359:63;:::i;:::-;21354:2;21347:5;21343:14;21336:87;;21469:2;21465;21461:11;21448:25;21498:2;21488:8;21485:16;21482:36;;;21514:1;21511;21504:12;21482:36;21550:73;21615:7;21604:8;21600:2;21596:17;21550:73;:::i;:::-;21545:2;21534:14;;21527:97;-1:-1:-1;21538:5:87;20471:1183;-1:-1:-1;;;;;20471:1183:87:o;21659:435::-;21712:3;21750:5;21744:12;21777:6;21772:3;21765:19;21803:4;21832:2;21827:3;21823:12;21816:19;;21869:2;21862:5;21858:14;21890:1;21900:169;21914:6;21911:1;21908:13;21900:169;;;21975:13;;21963:26;;22009:12;;;;22044:15;;;;21936:1;21929:9;21900:169;;22099:482;22207:42;22199:5;22193:12;22189:61;22184:3;22177:74;22159:3;22297:4;22290:5;22286:16;22280:23;22335:4;22328;22323:3;22319:14;22312:28;22361:47;22402:4;22397:3;22393:14;22379:12;22361:47;:::i;:::-;22349:59;;22456:4;22449:5;22445:16;22439:23;22504:3;22498:4;22494:14;22487:4;22482:3;22478:14;22471:38;22525:50;22570:4;22554:14;22525:50;:::i;:::-;22518:57;22099:482;-1:-1:-1;;;;;22099:482:87:o;22586:1723::-;22827:42;22819:6;22815:55;22804:9;22797:74;22778:4;22890:2;22928;22923;22912:9;22908:18;22901:30;22966:6;22960:13;23009:4;23004:2;22993:9;22989:18;22982:32;23037:52;23084:3;23073:9;23069:19;23055:12;23037:52;:::i;:::-;23023:66;;23138:2;23130:6;23126:15;23120:22;23161:66;23291:2;23279:9;23271:6;23267:22;23263:31;23258:2;23247:9;23243:18;23236:59;23318:41;23352:6;23336:14;23318:41;:::i;:::-;23304:55;;23408:2;23400:6;23396:15;23390:22;23368:44;;23478:2;23466:9;23458:6;23454:22;23450:31;23443:4;23432:9;23428:20;23421:61;23505:59;23557:6;23541:14;23505:59;:::i;:::-;23613:2;23601:15;;23595:22;23658;;;23654:31;;;23648:3;23633:19;;23626:60;23735:21;;23765:22;;;23491:73;;-1:-1:-1;23900:23:87;;;;-1:-1:-1;23803:15:87;;;;23861:1;23857:14;;;23845:27;;23841:36;;23941:1;23951:329;23965:6;23962:1;23959:13;23951:329;;;24051:66;24042:6;24034;24030:19;24026:92;24021:3;24014:105;24142:58;24193:6;24184;24178:13;24142:58;:::i;:::-;24223:15;;;;24258:12;;;;24132:68;-1:-1:-1;23987:1:87;23980:9;23951:329;;;-1:-1:-1;24297:6:87;22586:1723;-1:-1:-1;;;;;;;;;22586:1723:87:o;24314:626::-;24617:2;24606:9;24599:21;24580:4;24643:45;24684:2;24673:9;24669:18;24661:6;24643:45;:::i;:::-;24736:9;24728:6;24724:22;24719:2;24708:9;24704:18;24697:50;24770:44;24807:6;24799;24770:44;:::i;:::-;24756:58;;24862:9;24854:6;24850:22;24845:2;24834:9;24830:18;24823:50;24890:44;24927:6;24919;24890:44;:::i;24945:572::-;25086:6;25094;25102;25155:2;25143:9;25134:7;25130:23;25126:32;25123:52;;;25171:1;25168;25161:12;25123:52;25203:9;25197:16;25222:31;25247:5;25222:31;:::i;:::-;25322:2;25307:18;;25301:25;25272:5;;-1:-1:-1;25335:33:87;25301:25;25335:33;:::i;:::-;25439:2;25424:18;;25418:25;25387:7;;-1:-1:-1;25452:33:87;25418:25;25452:33;:::i;:::-;25504:7;25494:17;;;24945:572;;;;;:::o;26127:184::-;26179:77;26176:1;26169:88;26276:4;26273:1;26266:15;26300:4;26297:1;26290:15;26316:580;26393:4;26399:6;26459:11;26446:25;26549:66;26538:8;26522:14;26518:29;26514:102;26494:18;26490:127;26480:155;;26631:1;26628;26621:12;26480:155;26658:33;;26710:20;;;-1:-1:-1;26753:18:87;26742:30;;26739:50;;;26785:1;26782;26775:12;26739:50;26818:4;26806:17;;-1:-1:-1;26849:14:87;26845:27;;;26835:38;;26832:58;;;26886:1;26883;26876:12;26901:195;26940:3;26971:66;26964:5;26961:77;26958:103;;27041:18;;:::i;:::-;-1:-1:-1;27088:1:87;27077:13;;26901:195::o;30428:638::-;30491:3;30529:5;30523:12;30556:6;30551:3;30544:19;30582:4;30623:2;30618:3;30614:12;30648:11;30675;30668:18;;30725:6;30722:1;30718:14;30711:5;30707:26;30695:38;;30767:2;30760:5;30756:14;30788:1;30798:242;30812:6;30809:1;30806:13;30798:242;;;30883:5;30877:4;30873:16;30868:3;30861:29;30911:49;30955:4;30946:6;30940:13;30911:49;:::i;:::-;31018:12;;;;30903:57;-1:-1:-1;30983:15:87;;;;30834:1;30827:9;30798:242;;;-1:-1:-1;31056:4:87;;30428:638;-1:-1:-1;;;;;;;30428:638:87:o;31071:441::-;31340:42;31332:6;31328:55;31317:9;31310:74;31420:2;31415;31404:9;31400:18;31393:30;31291:4;31440:66;31502:2;31491:9;31487:18;31479:6;31440:66;:::i;31517:687::-;31944:42;31936:6;31932:55;31921:9;31914:74;32024:6;32019:2;32008:9;32004:18;31997:34;32067:6;32062:2;32051:9;32047:18;32040:34;32110:3;32105:2;32094:9;32090:18;32083:31;31895:4;32131:67;32193:3;32182:9;32178:19;32170:6;32131:67;:::i;32209:659::-;32274:5;32327:3;32320:4;32312:6;32308:17;32304:27;32294:55;;32345:1;32342;32335:12;32294:55;32374:6;32368:13;32400:4;32424:60;32440:43;32480:2;32440:43;:::i;32424:60::-;32518:15;;;32604:1;32600:10;;;;32588:23;;32584:32;;;32549:12;;;;32628:15;;;32625:35;;;32656:1;32653;32646:12;32625:35;32692:2;32684:6;32680:15;32704:135;32720:6;32715:3;32712:15;32704:135;;;32786:10;;32774:23;;32817:12;;;;32737;;32704:135;;32873:614;33002:6;33010;33063:2;33051:9;33042:7;33038:23;33034:32;33031:52;;;33079:1;33076;33069:12;33031:52;33112:9;33106:16;33141:18;33182:2;33174:6;33171:14;33168:34;;;33198:1;33195;33188:12;33168:34;33221:72;33285:7;33276:6;33265:9;33261:22;33221:72;:::i;:::-;33211:82;;33339:2;33328:9;33324:18;33318:25;33302:41;;33368:2;33358:8;33355:16;33352:36;;;33384:1;33381;33374:12;33352:36;;33407:74;33473:7;33462:8;33451:9;33447:24;33407:74;:::i;:::-;33397:84;;;32873:614;;;;;:::o;33492:368::-;33735:6;33724:9;33717:25;33778:2;33773;33762:9;33758:18;33751:30;33698:4;33798:56;33850:2;33839:9;33835:18;33827:6;33798:56;:::i;33991:545::-;34093:2;34088:3;34085:11;34082:448;;;34129:1;34154:5;34150:2;34143:17;34199:4;34195:2;34185:19;34269:2;34257:10;34253:19;34250:1;34246:27;34240:4;34236:38;34305:4;34293:10;34290:20;34287:47;;;-1:-1:-1;34328:4:87;34287:47;34383:2;34378:3;34374:12;34371:1;34367:20;34361:4;34357:31;34347:41;;34438:82;34456:2;34449:5;34446:13;34438:82;;;34501:17;;;34482:1;34471:13;34438:82;;;34442:3;;;33991:545;;;:::o;34772:1471::-;34898:3;34892:10;34925:18;34917:6;34914:30;34911:56;;;34947:18;;:::i;:::-;34976:97;35066:6;35026:38;35058:4;35052:11;35026:38;:::i;:::-;35020:4;34976:97;:::i;:::-;35128:4;;35192:2;35181:14;;35209:1;35204:782;;;;36030:1;36047:6;36044:89;;;-1:-1:-1;36099:19:87;;;36093:26;36044:89;34678:66;34669:1;34665:11;;;34661:84;34657:89;34647:100;34753:1;34749:11;;;34644:117;36146:81;;35174:1063;;35204:782;33938:1;33931:14;;;33975:4;33962:18;;35252:66;35240:79;;;35417:236;35431:7;35428:1;35425:14;35417:236;;;35520:19;;;35514:26;35499:42;;35612:27;;;;35580:1;35568:14;;;;35447:19;;35417:236;;;35421:3;35681:6;35672:7;35669:19;35666:261;;;35742:19;;;35736:26;35843:66;35825:1;35821:14;;;35837:3;35817:24;35813:97;35809:102;35794:118;35779:134;;35666:261;-1:-1:-1;;;;;35973:1:87;35957:14;;;35953:22;35940:36;;-1:-1:-1;34772:1471:87:o;36248:184::-;36300:77;36297:1;36290:88;36397:4;36394:1;36387:15;36421:4;36418:1;36411:15;36649:287;36778:3;36816:6;36810:13;36832:66;36891:6;36886:3;36879:4;36871:6;36867:17;36832:66;:::i;:::-;36914:16;;;;;36649:287;-1:-1:-1;;36649:287:87:o;38466:289::-;38641:2;38630:9;38623:21;38604:4;38661:45;38702:2;38691:9;38687:18;38679:6;38661:45;:::i;:::-;38653:53;;38742:6;38737:2;38726:9;38722:18;38715:34;38466:289;;;;;:::o;38760:::-;38935:6;38924:9;38917:25;38978:2;38973;38962:9;38958:18;38951:30;38898:4;38998:45;39039:2;39028:9;39024:18;39016:6;38998:45;:::i;39054:184::-;39124:6;39177:2;39165:9;39156:7;39152:23;39148:32;39145:52;;;39193:1;39190;39183:12;39145:52;-1:-1:-1;39216:16:87;;39054:184;-1:-1:-1;39054:184:87:o;41364:277::-;41431:6;41484:2;41472:9;41463:7;41459:23;41455:32;41452:52;;;41500:1;41497;41490:12;41452:52;41532:9;41526:16;41585:5;41578:13;41571:21;41564:5;41561:32;41551:60;;41607:1;41604;41597:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "flow((address,address,address),uint256[],(address,uint256[],bytes)[])": "f83d765a",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(bytes)": "439fab91",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "previewFlow((address,address,address),uint256[],(address,uint256[],bytes)[])": "90bcad69",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowMinOutputs\",\"type\":\"uint256\"}],\"name\":\"BadMinStackLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Sentinel\",\"name\":\"sentinel\",\"type\":\"uint256\"}],\"name\":\"MissingSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"sourceIndex\",\"type\":\"uint256\"}],\"name\":\"SourceOffsetOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unregisteredHash\",\"type\":\"bytes32\"}],\"name\":\"UnregisteredFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC1155Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC20Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC721Flow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[][]\",\"name\":\"context\",\"type\":\"uint256[][]\"}],\"name\":\"Context\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Evaluable\",\"name\":\"evaluable\",\"type\":\"tuple\"}],\"name\":\"FlowInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2[]\",\"name\":\"flowConfig\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct FlowERC20ConfigV2\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable_\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"callerContext_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContexts_\",\"type\":\"tuple[]\"}],\"name\":\"flow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20SupplyChange[]\",\"name\":\"mints\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20SupplyChange[]\",\"name\":\"burns\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"flow\",\"type\":\"tuple\"}],\"internalType\":\"struct FlowERC20IOV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable_\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"callerContext_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContexts_\",\"type\":\"tuple[]\"}],\"name\":\"previewFlow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20SupplyChange[]\",\"name\":\"mints\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20SupplyChange[]\",\"name\":\"burns\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"flow\",\"type\":\"tuple\"}],\"internalType\":\"struct FlowERC20IOV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"params\":{\"flowMinOutputs\":\"The min outputs for the flow.\"}}],\"MissingSentinel(uint256)\":[{\"params\":{\"sentinel\":\"The sentinel that was not found.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}],\"UnregisteredFlow(bytes32)\":[{\"params\":{\"unregisteredHash\":\"Hash of the unregistered flow.\"}}],\"UnsupportedERC1155Flow()\":[{\"details\":\"Thrown for unsupported erc1155 transfers.\"}],\"UnsupportedERC20Flow()\":[{\"details\":\"Thrown for unsupported erc20 transfers.\"}],\"UnsupportedERC721Flow()\":[{\"details\":\"Thrown for unsupported erc721 transfers.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Context(address,uint256[][])\":{\"params\":{\"context\":\"The context that was built.\",\"sender\":\"`msg.sender` building the context.\"}},\"FlowInitialized(address,(address,address,address))\":{\"params\":{\"evaluable\":\"The evaluable of the flow that was registered. The hash of this evaluable is used as the key in `registeredFlows` so users MUST provide the same evaluable when they evaluate the flow.\",\"sender\":\"The address that registered the flow.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"multicall(bytes[])\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"FlowERC20\",\"version\":1},\"userdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"notice\":\"Thrown when the min outputs for a flow is fewer than the sentinels. This is always an implementation bug as the min outputs and sentinel count should both be compile time constants.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MissingSentinel(uint256)\":[{\"notice\":\"Thrown when the sentinel cannot be found. This can be because the sentinel was not in stack, but also if the upper pointer is below the lower, or the sentinel is in the stack but not aligned with the tuples size.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"SourceOffsetOutOfBounds(bytes,uint256)\":[{\"notice\":\"Thrown when a bytecode source offset is out of bounds.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}],\"UnregisteredFlow(bytes32)\":[{\"notice\":\"Thrown when the flow being evaluated is unregistered.\"}]},\"events\":{\"Context(address,uint256[][])\":{\"notice\":\"Calling contracts SHOULD emit `Context` before calling `eval` if they are able. Notably `eval` MAY be called within a static call which means that events cannot be emitted, in which case this does not apply. It MAY NOT be useful to emit this multiple times for several eval calls if they all share a common context, in which case a single emit is sufficient.\"},\"FlowInitialized(address,(address,address,address))\":{\"notice\":\"This event is emitted when a flow is registered at initialization.\"},\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/erc20/FlowERC20.sol\":\"FlowERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/rain.factory/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.interpreter/lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol\":{\"keccak256\":\"0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb\",\"dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a\",\"dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d\",\"dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d\",\"dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.interpreter/lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.interpreter/lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol\":{\"keccak256\":\"0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a\",\"dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA\"]},\"lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768\",\"dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f\",\"dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"lib/rain.interpreter/src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691\",\"dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb\",\"dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c\",\"dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP\"]},\"lib/rain.math.fixedpoint/src/lib/FixedPointDecimalConstants.sol\":{\"keccak256\":\"0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75\",\"dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN\"]},\"lib/rain.math.fixedpoint/src/lib/LibFixedPointDecimalArithmeticOpenZeppelin.sol\":{\"keccak256\":\"0x600663b6bfbf145f08708b4335b77fd34a81f498db39958af54eb55c778cedcc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://92aca54bb5df1ed98b5efa836aea98f0b1711dbf42bff369f028da972da1db28\",\"dweb:/ipfs/Qmbheu4ofHfGn9BWfYow84aH21xGAuqMSjSMpWJ7cvBeE5\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibMemory.sol\":{\"keccak256\":\"0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830\",\"dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibStackPointer.sol\":{\"keccak256\":\"0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8\",\"dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P\"]},\"lib/rain.solmem/src/lib/LibStackSentinel.sol\":{\"keccak256\":\"0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906\",\"dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.solmem/src/lib/LibUint256Matrix.sol\":{\"keccak256\":\"0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c\",\"dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89\"]},\"src/abstract/FlowCommon.sol\":{\"keccak256\":\"0x22de79fb3d0116f61d38e95e5d8ae142cae3ba75d35b155653bf0c3d7d0209a4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5fd89565a68c00b599afe30990e207f0b6cae62fec3be87bf1ec99516dc753d0\",\"dweb:/ipfs/QmUPzxvZCsuC3wpfDLcnZdc1B4Fv5J9eUswcptKzNM9scp\"]},\"src/concrete/erc20/FlowERC20.sol\":{\"keccak256\":\"0xaf0354a926d10e8fc686e50945cad77940e0496825223388e0fdbde0e09825ed\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://da02fe9b8075f818689b5cc7e87830a728a42ec72fda0eec10692ca130ace850\",\"dweb:/ipfs/QmPAUqF2d2n55r3o927MuaVMjKuASd3hri98shjt48Spop\"]},\"src/interface/IFlowERC20V3.sol\":{\"keccak256\":\"0xdbcc4a5509e25787c19b1e3cb222e796e3702d172846c5bafb33fe114cdc7c15\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9f3a11f53fb9d4af296dfb3eecc45b481d79d9b7ce780f6ab2e3d8d17a9037da\",\"dweb:/ipfs/QmPgKk9HjHqsByTUL9GXGLgYFrHhszCVU4fntxqBzSUmLM\"]},\"src/interface/IFlowV3.sol\":{\"keccak256\":\"0x6e488724d40e76d0078918983b5560315573120e779d57231302844862a61fe5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bfad5a8694506d9d0ed2f6a254b7fd2dc4555efc2511e48c0ccf8a17e52a3c9a\",\"dweb:/ipfs/QmU4Y97Exj6pwpE6uVTCzUSD3REGTJr6YDpLK47xLthxTT\"]},\"src/interface/unstable/IFlowERC20V4.sol\":{\"keccak256\":\"0x521af012819d4cc5f0f3357a3295cbd1a3262d3df5c63b367b0506ade3a320e5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b2c9da18d3accd6c6c897ba318dfbb89ea54585a2af9bcf3ae0d310257adbf20\",\"dweb:/ipfs/QmYvgxqpCSjXydn8fn12abGa4tybQJCBbinnDiCZNaUREQ\"]},\"src/interface/unstable/IFlowV4.sol\":{\"keccak256\":\"0xc4da97e30663666f1d9351fa780bbbc409502e337294469957baf9f3445f354c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b327d8742609d31eb1a51dd7478dce4ea0847b56010f50bb96a3f7146fe0c7a4\",\"dweb:/ipfs/QmTCCvJGwk8D4eJcfSC3UcvUie5CrsSkuR29rtgB6e6pq7\"]},\"src/lib/LibFlow.sol\":{\"keccak256\":\"0x134b25ace1f12b97ec2c1006127e88d662bbc69ff4d8fb8f91cd414d814a7ce5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a323695a291496316b3dda017e9104500c155dc72bc5051ab220a688da555e1e\",\"dweb:/ipfs/QmZ3zfZoeYv2eGQNqxxS5hPKc6Pq91psLvCkj4ihhUW1N1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowMinOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadMinStackLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "Sentinel",
              "name": "sentinel",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingSentinel"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "sourceIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SourceOffsetOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "unregisteredHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnregisteredFlow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC1155Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC20Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC721Flow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[][]",
              "name": "context",
              "type": "uint256[][]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Context",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct Evaluable",
              "name": "evaluable",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlowInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct FlowERC20ConfigV2",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "struct EvaluableConfigV2[]",
                  "name": "flowConfig",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Evaluable",
              "name": "evaluable_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "callerContext_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SignedContextV1[]",
              "name": "signedContexts_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "context",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flow",
          "outputs": [
            {
              "internalType": "struct FlowERC20IOV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20SupplyChange[]",
                  "name": "mints",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC20SupplyChange[]",
                  "name": "burns",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FlowTransferV1",
                  "name": "flow",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct ERC20Transfer[]",
                      "name": "erc20",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ERC721Transfer[]",
                      "name": "erc721",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ERC1155Transfer[]",
                      "name": "erc1155",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Evaluable",
              "name": "evaluable_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV1",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV1",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "callerContext_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SignedContextV1[]",
              "name": "signedContexts_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "context",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewFlow",
          "outputs": [
            {
              "internalType": "struct FlowERC20IOV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20SupplyChange[]",
                  "name": "mints",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC20SupplyChange[]",
                  "name": "burns",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct FlowTransferV1",
                  "name": "flow",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct ERC20Transfer[]",
                      "name": "erc20",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ERC721Transfer[]",
                      "name": "erc721",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ERC1155Transfer[]",
                      "name": "erc1155",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "multicall(bytes[])": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/rain.factory/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.interpreter/lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/erc20/FlowERC20.sol": "FlowERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol": {
        "keccak256": "0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4",
        "urls": [
          "bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb",
          "dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a",
        "urls": [
          "bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a",
          "dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
        "keccak256": "0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08",
        "urls": [
          "bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d",
          "dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a",
        "urls": [
          "bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d",
          "dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582",
        "urls": [
          "bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf",
          "dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol": {
        "keccak256": "0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db",
        "urls": [
          "bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a",
          "dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol": {
        "keccak256": "0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6",
        "urls": [
          "bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768",
          "dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e",
        "urls": [
          "bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f",
          "dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461",
        "urls": [
          "bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691",
          "dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085",
        "urls": [
          "bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb",
          "dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364",
        "urls": [
          "bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c",
          "dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/lib/FixedPointDecimalConstants.sol": {
        "keccak256": "0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b",
        "urls": [
          "bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75",
          "dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/lib/LibFixedPointDecimalArithmeticOpenZeppelin.sol": {
        "keccak256": "0x600663b6bfbf145f08708b4335b77fd34a81f498db39958af54eb55c778cedcc",
        "urls": [
          "bzz-raw://92aca54bb5df1ed98b5efa836aea98f0b1711dbf42bff369f028da972da1db28",
          "dweb:/ipfs/Qmbheu4ofHfGn9BWfYow84aH21xGAuqMSjSMpWJ7cvBeE5"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemory.sol": {
        "keccak256": "0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5",
        "urls": [
          "bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830",
          "dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackPointer.sol": {
        "keccak256": "0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad",
        "urls": [
          "bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8",
          "dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackSentinel.sol": {
        "keccak256": "0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3",
        "urls": [
          "bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906",
          "dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Matrix.sol": {
        "keccak256": "0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd",
        "urls": [
          "bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c",
          "dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89"
        ],
        "license": "CAL"
      },
      "src/abstract/FlowCommon.sol": {
        "keccak256": "0x22de79fb3d0116f61d38e95e5d8ae142cae3ba75d35b155653bf0c3d7d0209a4",
        "urls": [
          "bzz-raw://5fd89565a68c00b599afe30990e207f0b6cae62fec3be87bf1ec99516dc753d0",
          "dweb:/ipfs/QmUPzxvZCsuC3wpfDLcnZdc1B4Fv5J9eUswcptKzNM9scp"
        ],
        "license": "CAL"
      },
      "src/concrete/erc20/FlowERC20.sol": {
        "keccak256": "0xaf0354a926d10e8fc686e50945cad77940e0496825223388e0fdbde0e09825ed",
        "urls": [
          "bzz-raw://da02fe9b8075f818689b5cc7e87830a728a42ec72fda0eec10692ca130ace850",
          "dweb:/ipfs/QmPAUqF2d2n55r3o927MuaVMjKuASd3hri98shjt48Spop"
        ],
        "license": "CAL"
      },
      "src/interface/IFlowERC20V3.sol": {
        "keccak256": "0xdbcc4a5509e25787c19b1e3cb222e796e3702d172846c5bafb33fe114cdc7c15",
        "urls": [
          "bzz-raw://9f3a11f53fb9d4af296dfb3eecc45b481d79d9b7ce780f6ab2e3d8d17a9037da",
          "dweb:/ipfs/QmPgKk9HjHqsByTUL9GXGLgYFrHhszCVU4fntxqBzSUmLM"
        ],
        "license": "CAL"
      },
      "src/interface/IFlowV3.sol": {
        "keccak256": "0x6e488724d40e76d0078918983b5560315573120e779d57231302844862a61fe5",
        "urls": [
          "bzz-raw://bfad5a8694506d9d0ed2f6a254b7fd2dc4555efc2511e48c0ccf8a17e52a3c9a",
          "dweb:/ipfs/QmU4Y97Exj6pwpE6uVTCzUSD3REGTJr6YDpLK47xLthxTT"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IFlowERC20V4.sol": {
        "keccak256": "0x521af012819d4cc5f0f3357a3295cbd1a3262d3df5c63b367b0506ade3a320e5",
        "urls": [
          "bzz-raw://b2c9da18d3accd6c6c897ba318dfbb89ea54585a2af9bcf3ae0d310257adbf20",
          "dweb:/ipfs/QmYvgxqpCSjXydn8fn12abGa4tybQJCBbinnDiCZNaUREQ"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IFlowV4.sol": {
        "keccak256": "0xc4da97e30663666f1d9351fa780bbbc409502e337294469957baf9f3445f354c",
        "urls": [
          "bzz-raw://b327d8742609d31eb1a51dd7478dce4ea0847b56010f50bb96a3f7146fe0c7a4",
          "dweb:/ipfs/QmTCCvJGwk8D4eJcfSC3UcvUie5CrsSkuR29rtgB6e6pq7"
        ],
        "license": "CAL"
      },
      "src/lib/LibFlow.sol": {
        "keccak256": "0x134b25ace1f12b97ec2c1006127e88d662bbc69ff4d8fb8f91cd414d814a7ce5",
        "urls": [
          "bzz-raw://a323695a291496316b3dda017e9104500c155dc72bc5051ab220a688da555e1e",
          "dweb:/ipfs/QmZ3zfZoeYv2eGQNqxxS5hPKc6Pq91psLvCkj4ihhUW1N1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/erc20/FlowERC20.sol",
    "id": 13651,
    "exportedSymbols": {
      "BadMinStackLength": [
        11919
      ],
      "CALLER_META_HASH": [
        13074
      ],
      "DEFAULT_STATE_NAMESPACE": [
        10097
      ],
      "DeployerDiscoverableMetaV2": [
        9969
      ],
      "DeployerDiscoverableMetaV2ConstructionConfig": [
        9924
      ],
      "ERC1155Holder": [
        1746
      ],
      "ERC1155Transfer": [
        14694
      ],
      "ERC20": [
        2412
      ],
      "ERC20SupplyChange": [
        14509
      ],
      "ERC20Transfer": [
        14674
      ],
      "ERC721Holder": [
        3675
      ],
      "ERC721Transfer": [
        14683
      ],
      "EncodedDispatch": [
        10085
      ],
      "Evaluable": [
        10999
      ],
      "EvaluableConfig": [
        10981
      ],
      "EvaluableConfigV2": [
        10990
      ],
      "FIXED_POINT_DECIMALS": [
        11018
      ],
      "FIXED_POINT_ONE": [
        11022
      ],
      "FLAG_MAX_INT": [
        11038
      ],
      "FLAG_ROUND_UP": [
        11026
      ],
      "FLAG_SATURATE": [
        11032
      ],
      "FLOW_ENTRYPOINT": [
        11931
      ],
      "FLOW_IS_NOT_REGISTERED": [
        11947
      ],
      "FLOW_IS_REGISTERED": [
        11943
      ],
      "FLOW_MAX_OUTPUTS": [
        11939
      ],
      "FlowCommon": [
        12171
      ],
      "FlowConfigV2": [
        15619
      ],
      "FlowERC20": [
        13650
      ],
      "FlowERC20ConfigV2": [
        15498
      ],
      "FlowERC20IOV1": [
        14521
      ],
      "FlowTransferV1": [
        14707
      ],
      "FullyQualifiedNamespace": [
        10046
      ],
      "HANDLE_TRANSFER_ENTRYPOINT": [
        13098
      ],
      "HANDLE_TRANSFER_MAX_OUTPUTS": [
        13104
      ],
      "HANDLE_TRANSFER_MIN_OUTPUTS": [
        13101
      ],
      "ICLONEABLE_V2_SUCCESS": [
        9741
      ],
      "ICloneableV2": [
        9754
      ],
      "IERC1155": [
        5579
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V1": [
        9975
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        10164
      ],
      "IERC20": [
        5657
      ],
      "IERC721": [
        6185
      ],
      "IExpressionDeployerV1": [
        10011
      ],
      "IExpressionDeployerV2": [
        10199
      ],
      "IFlowERC20V4": [
        15538
      ],
      "IFlowV4": [
        15659
      ],
      "IInterpreterCallerV2": [
        10041
      ],
      "IInterpreterStoreV1": [
        10078
      ],
      "IInterpreterV1": [
        10128
      ],
      "IMetaV1": [
        9830
      ],
      "LibBytecode": [
        10481
      ],
      "LibBytes": [
        11171
      ],
      "LibContext": [
        10780
      ],
      "LibDeployerDiscoverable": [
        10870
      ],
      "LibEncodedDispatch": [
        10965
      ],
      "LibEvaluable": [
        11012
      ],
      "LibFixedPointDecimalArithmeticOpenZeppelin": [
        11093
      ],
      "LibFlow": [
        16066
      ],
      "LibMemCpy": [
        11203
      ],
      "LibMemory": [
        11214
      ],
      "LibMeta": [
        9914
      ],
      "LibPointer": [
        11338
      ],
      "LibStackPointer": [
        11501
      ],
      "LibStackSentinel": [
        11557
      ],
      "LibUint256Array": [
        11785
      ],
      "LibUint256Matrix": [
        11889
      ],
      "META_MAGIC_NUMBER_V1": [
        9819
      ],
      "MIN_FLOW_SENTINELS": [
        11923
      ],
      "Math": [
        8087
      ],
      "MissingSentinel": [
        11510
      ],
      "Multicall": [
        4122
      ],
      "NO_STORE": [
        10055
      ],
      "NotRainMetaV1": [
        9815
      ],
      "OVERFLOW_RESCALE_OOMS": [
        11042
      ],
      "Operand": [
        10089
      ],
      "OutOfBoundsTruncate": [
        11567
      ],
      "Pointer": [
        11218
      ],
      "RAIN_FLOW_ERC20_SENTINEL": [
        13091
      ],
      "RAIN_FLOW_SENTINEL": [
        15711
      ],
      "ReentrancyGuard": [
        252
      ],
      "SENTINEL_HIGH_BITS": [
        15693
      ],
      "SIGNED_CONTEXT_CONTEXT_OFFSET": [
        10027
      ],
      "SIGNED_CONTEXT_SIGNATURE_OFFSET": [
        10030
      ],
      "SIGNED_CONTEXT_SIGNER_OFFSET": [
        10024
      ],
      "SafeCast": [
        9628
      ],
      "SafeERC20": [
        6069
      ],
      "Sentinel": [
        11512
      ],
      "SignedContextV1": [
        10021
      ],
      "SourceIndex": [
        10083
      ],
      "SourceOffsetOutOfBounds": [
        10212
      ],
      "StateNamespace": [
        10087
      ],
      "TruncateError": [
        11103
      ],
      "UnalignedStackPointer": [
        11349
      ],
      "UnexpectedMetaHash": [
        9810
      ],
      "UnregisteredFlow": [
        11914
      ],
      "UnsupportedERC1155Flow": [
        15687
      ],
      "UnsupportedERC20Flow": [
        15681
      ],
      "UnsupportedERC721Flow": [
        15684
      ],
      "UnsupportedNativeFlow": [
        15678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7289:68",
    "nodes": [
      {
        "id": 13053,
        "nodeType": "PragmaDirective",
        "src": "32:24:68",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 13055,
        "nodeType": "ImportDirective",
        "src": "58:120:68",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 2413,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13054,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2412,
              "src": "66:16:68",
              "typeDescriptions": {}
            },
            "local": "ERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13057,
        "nodeType": "ImportDirective",
        "src": "179:151:68",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 253,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13056,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 252,
              "src": "187:26:68",
              "typeDescriptions": {}
            },
            "local": "ReentrancyGuard",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13058,
        "nodeType": "ImportDirective",
        "src": "332:66:68",
        "nodes": [],
        "absolutePath": "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol",
        "file": "rain.interpreter/src/interface/IExpressionDeployerV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 10012,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13059,
        "nodeType": "ImportDirective",
        "src": "399:45:68",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Array.sol",
        "file": "rain.solmem/lib/LibUint256Array.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 11786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13060,
        "nodeType": "ImportDirective",
        "src": "445:46:68",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Matrix.sol",
        "file": "rain.solmem/lib/LibUint256Matrix.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 11890,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13061,
        "nodeType": "ImportDirective",
        "src": "492:64:68",
        "nodes": [],
        "absolutePath": "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol",
        "file": "rain.interpreter/src/lib/caller/LibEncodedDispatch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 10966,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13062,
        "nodeType": "ImportDirective",
        "src": "557:53:68",
        "nodes": [],
        "absolutePath": "lib/rain.factory/src/interface/ICloneableV2.sol",
        "file": "rain.factory/src/interface/ICloneableV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 9755,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13063,
        "nodeType": "ImportDirective",
        "src": "611:51:68",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IFlowERC20V4.sol",
        "file": "../../interface/unstable/IFlowERC20V4.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 15539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13064,
        "nodeType": "ImportDirective",
        "src": "663:46:68",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibStackSentinel.sol",
        "file": "rain.solmem/lib/LibStackSentinel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 11558,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13065,
        "nodeType": "ImportDirective",
        "src": "710:63:68",
        "nodes": [],
        "absolutePath": "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol",
        "file": "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 10482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13066,
        "nodeType": "ImportDirective",
        "src": "775:31:68",
        "nodes": [],
        "absolutePath": "src/lib/LibFlow.sol",
        "file": "../../lib/LibFlow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 16067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13067,
        "nodeType": "ImportDirective",
        "src": "807:81:68",
        "nodes": [],
        "absolutePath": "lib/rain.math.fixedpoint/src/lib/LibFixedPointDecimalArithmeticOpenZeppelin.sol",
        "file": "rain.math.fixedpoint/lib/LibFixedPointDecimalArithmeticOpenZeppelin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 11094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13068,
        "nodeType": "ImportDirective",
        "src": "889:39:68",
        "nodes": [],
        "absolutePath": "src/abstract/FlowCommon.sol",
        "file": "../../abstract/FlowCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13651,
        "sourceUnit": 12172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13074,
        "nodeType": "VariableDeclaration",
        "src": "930:111:68",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "947:16:68",
        "scope": 13651,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 13069,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "930:7:68",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307866663034393965346565373137316135346431373663666531333136356137656135313264313436646264393964343262336433656339393633303235616366",
              "id": 13072,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "974:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115347905916161935181593345097340315275219325177801900757000832114428175604431_by_1",
                "typeString": "int_const 1153...(70 digits omitted)...4431"
              },
              "value": "0xff0499e4ee7171a54d176cfe13165a7ea512d146dbd99d42b3d3ec9963025acf"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_115347905916161935181593345097340315275219325177801900757000832114428175604431_by_1",
                "typeString": "int_const 1153...(70 digits omitted)...4431"
              }
            ],
            "id": 13071,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "966:7:68",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 13070,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "966:7:68",
              "typeDescriptions": {}
            }
          },
          "id": 13073,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "966:75:68",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 13091,
        "nodeType": "VariableDeclaration",
        "src": "1044:138:68",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "RAIN_FLOW_ERC20_SENTINEL",
        "nameLocation": "1062:24:68",
        "scope": 13651,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
          "typeString": "Sentinel"
        },
        "typeName": {
          "id": 13076,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 13075,
            "name": "Sentinel",
            "nameLocations": [
              "1044:8:68"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 11512,
            "src": "1044:8:68"
          },
          "referencedDeclaration": 11512,
          "src": "1044:8:68",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
            "typeString": "Sentinel"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "id": 13088,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5241494e5f464c4f575f45524332305f53454e54494e454c",
                            "id": 13084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1131:26:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0339171dab445c29f9897dda2f42413426ee907dc7f8b52bd387bc7cf9384c6b",
                              "typeString": "literal_string \"RAIN_FLOW_ERC20_SENTINEL\""
                            },
                            "value": "RAIN_FLOW_ERC20_SENTINEL"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0339171dab445c29f9897dda2f42413426ee907dc7f8b52bd387bc7cf9384c6b",
                              "typeString": "literal_string \"RAIN_FLOW_ERC20_SENTINEL\""
                            }
                          ],
                          "id": 13083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1125:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 13082,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1125:5:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:33:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13081,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1115:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 13086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:44:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "|",
                  "rightExpression": {
                    "id": 13087,
                    "name": "SENTINEL_HIGH_BITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15693,
                    "src": "1162:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "src": "1115:65:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 13080,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1107:7:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint256_$",
                  "typeString": "type(uint256)"
                },
                "typeName": {
                  "id": 13079,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1107:7:68",
                  "typeDescriptions": {}
                }
              },
              "id": 13089,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1107:74:68",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            ],
            "expression": {
              "id": 13077,
              "name": "Sentinel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11512,
              "src": "1093:8:68",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_userDefinedValueType$_Sentinel_$11512_$",
                "typeString": "type(Sentinel)"
              }
            },
            "id": 13078,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "memberLocation": "1102:4:68",
            "memberName": "wrap",
            "nodeType": "MemberAccess",
            "src": "1093:13:68",
            "typeDescriptions": {
              "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_Sentinel_$11512_$",
              "typeString": "function (uint256) pure returns (Sentinel)"
            }
          },
          "id": 13090,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "functionCall",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "1093:89:68",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
            "typeString": "Sentinel"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 13098,
        "nodeType": "VariableDeclaration",
        "src": "1185:69:68",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "HANDLE_TRANSFER_ENTRYPOINT",
        "nameLocation": "1206:26:68",
        "scope": 13651,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
          "typeString": "SourceIndex"
        },
        "typeName": {
          "id": 13093,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 13092,
            "name": "SourceIndex",
            "nameLocations": [
              "1185:11:68"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 10083,
            "src": "1185:11:68"
          },
          "referencedDeclaration": 10083,
          "src": "1185:11:68",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
            "typeString": "SourceIndex"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "30",
              "id": 13096,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1252:1:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              }
            ],
            "expression": {
              "id": 13094,
              "name": "SourceIndex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10083,
              "src": "1235:11:68",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_userDefinedValueType$_SourceIndex_$10083_$",
                "typeString": "type(SourceIndex)"
              }
            },
            "id": 13095,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "memberLocation": "1247:4:68",
            "memberName": "wrap",
            "nodeType": "MemberAccess",
            "src": "1235:16:68",
            "typeDescriptions": {
              "typeIdentifier": "t_function_wrap_pure$_t_uint16_$returns$_t_userDefinedValueType$_SourceIndex_$10083_$",
              "typeString": "function (uint16) pure returns (SourceIndex)"
            }
          },
          "id": 13097,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "functionCall",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "1235:19:68",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
            "typeString": "SourceIndex"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 13101,
        "nodeType": "VariableDeclaration",
        "src": "1256:48:68",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "HANDLE_TRANSFER_MIN_OUTPUTS",
        "nameLocation": "1273:27:68",
        "scope": 13651,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 13099,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "1256:7:68",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "hexValue": "30",
          "id": 13100,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "1303:1:68",
          "typeDescriptions": {
            "typeIdentifier": "t_rational_0_by_1",
            "typeString": "int_const 0"
          },
          "value": "0"
        },
        "visibility": "internal"
      },
      {
        "id": 13104,
        "nodeType": "VariableDeclaration",
        "src": "1306:47:68",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "HANDLE_TRANSFER_MAX_OUTPUTS",
        "nameLocation": "1322:27:68",
        "scope": 13651,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint16",
          "typeString": "uint16"
        },
        "typeName": {
          "id": 13102,
          "name": "uint16",
          "nodeType": "ElementaryTypeName",
          "src": "1306:6:68",
          "typeDescriptions": {
            "typeIdentifier": "t_uint16",
            "typeString": "uint16"
          }
        },
        "value": {
          "hexValue": "30",
          "id": 13103,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "1352:1:68",
          "typeDescriptions": {
            "typeIdentifier": "t_rational_0_by_1",
            "typeString": "int_const 0"
          },
          "value": "0"
        },
        "visibility": "internal"
      },
      {
        "id": 13650,
        "nodeType": "ContractDefinition",
        "src": "1377:5943:68",
        "nodes": [
          {
            "id": 13119,
            "nodeType": "UsingForDirective",
            "src": "1468:35:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13116,
              "name": "LibStackSentinel",
              "nameLocations": [
                "1474:16:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11557,
              "src": "1474:16:68"
            },
            "typeName": {
              "id": 13118,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13117,
                "name": "Pointer",
                "nameLocations": [
                  "1495:7:68"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11218,
                "src": "1495:7:68"
              },
              "referencedDeclaration": 11218,
              "src": "1495:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 13123,
            "nodeType": "UsingForDirective",
            "src": "1508:36:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13120,
              "name": "LibStackPointer",
              "nameLocations": [
                "1514:15:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11501,
              "src": "1514:15:68"
            },
            "typeName": {
              "baseType": {
                "id": 13121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1534:7:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 13122,
              "nodeType": "ArrayTypeName",
              "src": "1534:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 13127,
            "nodeType": "UsingForDirective",
            "src": "1549:34:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13124,
              "name": "LibStackPointer",
              "nameLocations": [
                "1555:15:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11501,
              "src": "1555:15:68"
            },
            "typeName": {
              "id": 13126,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13125,
                "name": "Pointer",
                "nameLocations": [
                  "1575:7:68"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11218,
                "src": "1575:7:68"
              },
              "referencedDeclaration": 11218,
              "src": "1575:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 13130,
            "nodeType": "UsingForDirective",
            "src": "1588:34:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13128,
              "name": "LibUint256Array",
              "nameLocations": [
                "1594:15:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11785,
              "src": "1594:15:68"
            },
            "typeName": {
              "id": 13129,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 13134,
            "nodeType": "UsingForDirective",
            "src": "1627:36:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13131,
              "name": "LibUint256Array",
              "nameLocations": [
                "1633:15:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11785,
              "src": "1633:15:68"
            },
            "typeName": {
              "baseType": {
                "id": 13132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1653:7:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 13133,
              "nodeType": "ArrayTypeName",
              "src": "1653:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 13138,
            "nodeType": "UsingForDirective",
            "src": "1668:37:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13135,
              "name": "LibUint256Matrix",
              "nameLocations": [
                "1674:16:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11889,
              "src": "1674:16:68"
            },
            "typeName": {
              "baseType": {
                "id": 13136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1695:7:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 13137,
              "nodeType": "ArrayTypeName",
              "src": "1695:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 13141,
            "nodeType": "UsingForDirective",
            "src": "1710:61:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13139,
              "name": "LibFixedPointDecimalArithmeticOpenZeppelin",
              "nameLocations": [
                "1716:42:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11093,
              "src": "1716:42:68"
            },
            "typeName": {
              "id": 13140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 13143,
            "nodeType": "VariableDeclaration",
            "src": "1777:31:68",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "evalHandleTransfer",
            "nameLocation": "1790:18:68",
            "scope": 13650,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 13142,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1777:4:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13146,
            "nodeType": "VariableDeclaration",
            "src": "1814:28:68",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "evaluable",
            "nameLocation": "1833:9:68",
            "scope": 13650,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Evaluable_$10999_storage",
              "typeString": "struct Evaluable"
            },
            "typeName": {
              "id": 13145,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13144,
                "name": "Evaluable",
                "nameLocations": [
                  "1814:9:68"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10999,
                "src": "1814:9:68"
              },
              "referencedDeclaration": 10999,
              "src": "1814:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                "typeString": "struct Evaluable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 13157,
            "nodeType": "FunctionDefinition",
            "src": "1849:111:68",
            "nodes": [],
            "body": {
              "id": 13156,
              "nodeType": "Block",
              "src": "1958:2:68",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13152,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13074,
                    "src": "1932:16:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 13153,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13149,
                    "src": "1950:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig memory"
                    }
                  }
                ],
                "id": 13154,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13151,
                  "name": "FlowCommon",
                  "nameLocations": [
                    "1921:10:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "1921:10:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:36:68"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13149,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1913:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13157,
                  "src": "1861:58:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 13148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13147,
                      "name": "DeployerDiscoverableMetaV2ConstructionConfig",
                      "nameLocations": [
                        "1861:44:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9924,
                      "src": "1861:44:68"
                    },
                    "referencedDeclaration": 9924,
                    "src": "1861:44:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$9924_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1860:60:68"
            },
            "returnParameters": {
              "id": 13155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:0:68"
            },
            "scope": 13650,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13263,
            "nodeType": "FunctionDefinition",
            "src": "1999:1255:68",
            "nodes": [],
            "body": {
              "id": 13262,
              "nodeType": "Block",
              "src": "2079:1175:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13169,
                      "mutability": "mutable",
                      "name": "flowERC20Config",
                      "nameLocation": "2114:15:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13262,
                      "src": "2089:40:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                        "typeString": "struct FlowERC20ConfigV2"
                      },
                      "typeName": {
                        "id": 13168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13167,
                          "name": "FlowERC20ConfigV2",
                          "nameLocations": [
                            "2089:17:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15498,
                          "src": "2089:17:68"
                        },
                        "referencedDeclaration": 15498,
                        "src": "2089:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_storage_ptr",
                          "typeString": "struct FlowERC20ConfigV2"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13176,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13172,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13160,
                        "src": "2143:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 13173,
                            "name": "FlowERC20ConfigV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15498,
                            "src": "2150:17:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_FlowERC20ConfigV2_$15498_storage_ptr_$",
                              "typeString": "type(struct FlowERC20ConfigV2 storage pointer)"
                            }
                          }
                        ],
                        "id": 13174,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2149:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FlowERC20ConfigV2_$15498_storage_ptr_$",
                          "typeString": "type(struct FlowERC20ConfigV2 storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_FlowERC20ConfigV2_$15498_storage_ptr_$",
                          "typeString": "type(struct FlowERC20ConfigV2 storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 13170,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2132:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 13171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2136:6:68",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2132:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 13175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                      "typeString": "struct FlowERC20ConfigV2 memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2089:80:68"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2195:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2199:6:68",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2195:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13180,
                        "name": "flowERC20Config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13169,
                        "src": "2207:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                          "typeString": "struct FlowERC20ConfigV2 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                          "typeString": "struct FlowERC20ConfigV2 memory"
                        }
                      ],
                      "id": 13177,
                      "name": "Initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15505,
                      "src": "2184:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_FlowERC20ConfigV2_$15498_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct FlowERC20ConfigV2 memory)"
                      }
                    },
                    "id": 13181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:39:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13182,
                  "nodeType": "EmitStatement",
                  "src": "2179:44:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13183,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2233:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13185,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:24:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13187,
                          "name": "flowERC20Config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13169,
                          "src": "2280:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                            "typeString": "struct FlowERC20ConfigV2 memory"
                          }
                        },
                        "id": 13188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2296:4:68",
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15488,
                        "src": "2280:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 13189,
                          "name": "flowERC20Config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13169,
                          "src": "2302:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                            "typeString": "struct FlowERC20ConfigV2 memory"
                          }
                        },
                        "id": 13190,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2318:6:68",
                        "memberName": "symbol",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15490,
                        "src": "2302:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13186,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "2267:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 13191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:58:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13192,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:58:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13194,
                          "name": "flowERC20Config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13169,
                          "src": "2351:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                            "typeString": "struct FlowERC20ConfigV2 memory"
                          }
                        },
                        "id": 13195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2367:10:68",
                        "memberName": "flowConfig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15497,
                        "src": "2351:26:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV2 memory[] memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13196,
                          "name": "MIN_FLOW_SENTINELS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11923,
                          "src": "2379:18:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 13197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2400:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2379:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV2 memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13193,
                      "name": "flowCommonInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12098,
                      "src": "2336:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_EvaluableConfigV2_$10990_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct EvaluableConfigV2 memory[] memory,uint256)"
                      }
                    },
                    "id": 13199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2336:66:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13200,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:66:68"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 13221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 13208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 13203,
                                "name": "flowERC20Config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13169,
                                "src": "2454:15:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                                  "typeString": "struct FlowERC20ConfigV2 memory"
                                }
                              },
                              "id": 13204,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2470:15:68",
                              "memberName": "evaluableConfig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15493,
                              "src": "2454:31:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluableConfigV2_$10990_memory_ptr",
                                "typeString": "struct EvaluableConfigV2 memory"
                              }
                            },
                            "id": 13205,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2486:8:68",
                            "memberName": "bytecode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10986,
                            "src": "2454:40:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 13201,
                            "name": "LibBytecode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10481,
                            "src": "2430:11:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibBytecode_$10481_$",
                              "typeString": "type(library LibBytecode)"
                            }
                          },
                          "id": 13202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2442:11:68",
                          "memberName": "sourceCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10240,
                          "src": "2430:23:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 13206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:65:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 13207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2430:69:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 13220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 13211,
                                "name": "flowERC20Config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13169,
                                "src": "2568:15:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                                  "typeString": "struct FlowERC20ConfigV2 memory"
                                }
                              },
                              "id": 13212,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2584:15:68",
                              "memberName": "evaluableConfig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15493,
                              "src": "2568:31:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluableConfigV2_$10990_memory_ptr",
                                "typeString": "struct EvaluableConfigV2 memory"
                              }
                            },
                            "id": 13213,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2600:8:68",
                            "memberName": "bytecode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10986,
                            "src": "2568:40:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 13216,
                                "name": "HANDLE_TRANSFER_ENTRYPOINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13098,
                                "src": "2629:26:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
                                  "typeString": "SourceIndex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
                                  "typeString": "SourceIndex"
                                }
                              ],
                              "expression": {
                                "id": 13214,
                                "name": "SourceIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10083,
                                "src": "2610:11:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_SourceIndex_$10083_$",
                                  "typeString": "type(SourceIndex)"
                                }
                              },
                              "id": 13215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2622:6:68",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "2610:18:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_SourceIndex_$10083_$returns$_t_uint16_$",
                                "typeString": "function (SourceIndex) pure returns (uint16)"
                              }
                            },
                            "id": 13217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2610:46:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 13209,
                            "name": "LibBytecode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10481,
                            "src": "2519:11:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibBytecode_$10481_$",
                              "typeString": "type(library LibBytecode)"
                            }
                          },
                          "id": 13210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2531:15:68",
                          "memberName": "sourceOpsLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10335,
                          "src": "2519:27:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 13218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2519:155:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 13219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2677:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2519:159:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2430:248:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13259,
                  "nodeType": "IfStatement",
                  "src": "2413:796:68",
                  "trueBody": {
                    "id": 13258,
                    "nodeType": "Block",
                    "src": "2689:520:68",
                    "statements": [
                      {
                        "expression": {
                          "id": 13224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13222,
                            "name": "evalHandleTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13143,
                            "src": "2703:18:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 13223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2724:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2703:25:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13225,
                        "nodeType": "ExpressionStatement",
                        "src": "2703:25:68"
                      },
                      {
                        "assignments": [
                          13228,
                          13231,
                          13233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13228,
                            "mutability": "mutable",
                            "name": "interpreter",
                            "nameLocation": "2758:11:68",
                            "nodeType": "VariableDeclaration",
                            "scope": 13258,
                            "src": "2743:26:68",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterV1_$10128",
                              "typeString": "contract IInterpreterV1"
                            },
                            "typeName": {
                              "id": 13227,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 13226,
                                "name": "IInterpreterV1",
                                "nameLocations": [
                                  "2743:14:68"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10128,
                                "src": "2743:14:68"
                              },
                              "referencedDeclaration": 10128,
                              "src": "2743:14:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInterpreterV1_$10128",
                                "typeString": "contract IInterpreterV1"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 13231,
                            "mutability": "mutable",
                            "name": "store",
                            "nameLocation": "2791:5:68",
                            "nodeType": "VariableDeclaration",
                            "scope": 13258,
                            "src": "2771:25:68",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                              "typeString": "contract IInterpreterStoreV1"
                            },
                            "typeName": {
                              "id": 13230,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 13229,
                                "name": "IInterpreterStoreV1",
                                "nameLocations": [
                                  "2771:19:68"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10078,
                                "src": "2771:19:68"
                              },
                              "referencedDeclaration": 10078,
                              "src": "2771:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                "typeString": "contract IInterpreterStoreV1"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 13233,
                            "mutability": "mutable",
                            "name": "expression",
                            "nameLocation": "2806:10:68",
                            "nodeType": "VariableDeclaration",
                            "scope": 13258,
                            "src": "2798:18:68",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 13232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2798:7:68",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13249,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 13238,
                                  "name": "flowERC20Config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13169,
                                  "src": "2946:15:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                                    "typeString": "struct FlowERC20ConfigV2 memory"
                                  }
                                },
                                "id": 13239,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2962:15:68",
                                "memberName": "evaluableConfig",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15493,
                                "src": "2946:31:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EvaluableConfigV2_$10990_memory_ptr",
                                  "typeString": "struct EvaluableConfigV2 memory"
                                }
                              },
                              "id": 13240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2978:8:68",
                              "memberName": "bytecode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10986,
                              "src": "2946:40:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 13241,
                                  "name": "flowERC20Config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13169,
                                  "src": "3004:15:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                                    "typeString": "struct FlowERC20ConfigV2 memory"
                                  }
                                },
                                "id": 13242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3020:15:68",
                                "memberName": "evaluableConfig",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15493,
                                "src": "3004:31:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EvaluableConfigV2_$10990_memory_ptr",
                                  "typeString": "struct EvaluableConfigV2 memory"
                                }
                              },
                              "id": 13243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3036:9:68",
                              "memberName": "constants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10989,
                              "src": "3004:41:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 13246,
                                  "name": "HANDLE_TRANSFER_MIN_OUTPUTS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13101,
                                  "src": "3089:27:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 13244,
                                  "name": "LibUint256Array",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11785,
                                  "src": "3063:15:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LibUint256Array_$11785_$",
                                    "typeString": "type(library LibUint256Array)"
                                  }
                                },
                                "id": 13245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3079:9:68",
                                "memberName": "arrayFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11631,
                                "src": "3063:25:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (uint256[] memory)"
                                }
                              },
                              "id": 13247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3063:54:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 13234,
                                  "name": "flowERC20Config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13169,
                                  "src": "2820:15:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FlowERC20ConfigV2_$15498_memory_ptr",
                                    "typeString": "struct FlowERC20ConfigV2 memory"
                                  }
                                },
                                "id": 13235,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2853:15:68",
                                "memberName": "evaluableConfig",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15493,
                                "src": "2820:48:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EvaluableConfigV2_$10990_memory_ptr",
                                  "typeString": "struct EvaluableConfigV2 memory"
                                }
                              },
                              "id": 13236,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2886:8:68",
                              "memberName": "deployer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10984,
                              "src": "2820:74:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IExpressionDeployerV2_$10199",
                                "typeString": "contract IExpressionDeployerV2"
                              }
                            },
                            "id": 13237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2912:16:68",
                            "memberName": "deployExpression",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10198,
                            "src": "2820:108:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_contract$_IInterpreterV1_$10128_$_t_contract$_IInterpreterStoreV1_$10078_$_t_address_$",
                              "typeString": "function (bytes memory,uint256[] memory,uint256[] memory) external returns (contract IInterpreterV1,contract IInterpreterStoreV1,address)"
                            }
                          },
                          "id": 13248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2820:311:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IInterpreterV1_$10128_$_t_contract$_IInterpreterStoreV1_$10078_$_t_address_$",
                            "typeString": "tuple(contract IInterpreterV1,contract IInterpreterStoreV1,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2742:389:68"
                      },
                      {
                        "expression": {
                          "id": 13256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13250,
                            "name": "evaluable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13146,
                            "src": "3145:9:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Evaluable_$10999_storage",
                              "typeString": "struct Evaluable storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 13252,
                                "name": "interpreter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13228,
                                "src": "3167:11:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInterpreterV1_$10128",
                                  "typeString": "contract IInterpreterV1"
                                }
                              },
                              {
                                "id": 13253,
                                "name": "store",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13231,
                                "src": "3180:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                  "typeString": "contract IInterpreterStoreV1"
                                }
                              },
                              {
                                "id": 13254,
                                "name": "expression",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13233,
                                "src": "3187:10:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IInterpreterV1_$10128",
                                  "typeString": "contract IInterpreterV1"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                  "typeString": "contract IInterpreterStoreV1"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 13251,
                              "name": "Evaluable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10999,
                              "src": "3157:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Evaluable_$10999_storage_ptr_$",
                                "typeString": "type(struct Evaluable storage pointer)"
                              }
                            },
                            "id": 13255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3157:41:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                              "typeString": "struct Evaluable memory"
                            }
                          },
                          "src": "3145:53:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Evaluable_$10999_storage",
                            "typeString": "struct Evaluable storage ref"
                          }
                        },
                        "id": 13257,
                        "nodeType": "ExpressionStatement",
                        "src": "3145:53:68"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13260,
                    "name": "ICLONEABLE_V2_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9741,
                    "src": "3226:21:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 13166,
                  "id": 13261,
                  "nodeType": "Return",
                  "src": "3219:28:68"
                }
              ]
            },
            "baseFunctions": [
              9753
            ],
            "documentation": {
              "id": 13158,
              "nodeType": "StructuredDocumentation",
              "src": "1966:28:68",
              "text": "@inheritdoc ICloneableV2"
            },
            "functionSelector": "439fab91",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13162,
                  "name": "initializer",
                  "nameLocations": [
                    "2049:11:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "2049:11:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "2049:11:68"
              }
            ],
            "name": "initialize",
            "nameLocation": "2008:10:68",
            "parameters": {
              "id": 13161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13160,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2034:4:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13263,
                  "src": "2019:19:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:21:68"
            },
            "returnParameters": {
              "id": 13166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13263,
                  "src": "2070:7:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2069:9:68"
            },
            "scope": 13650,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13279,
            "nodeType": "FunctionDefinition",
            "src": "3260:213:68",
            "nodes": [],
            "body": {
              "id": 13278,
              "nodeType": "Block",
              "src": "3354:119:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13273,
                        "name": "expression_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13265,
                        "src": "3397:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13274,
                        "name": "HANDLE_TRANSFER_ENTRYPOINT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13098,
                        "src": "3410:26:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
                          "typeString": "SourceIndex"
                        }
                      },
                      {
                        "id": 13275,
                        "name": "HANDLE_TRANSFER_MAX_OUTPUTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13104,
                        "src": "3438:27:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_SourceIndex_$10083",
                          "typeString": "SourceIndex"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 13271,
                        "name": "LibEncodedDispatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10965,
                        "src": "3371:18:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibEncodedDispatch_$10965_$",
                          "typeString": "type(library LibEncodedDispatch)"
                        }
                      },
                      "id": 13272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3390:6:68",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10916,
                      "src": "3371:25:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_userDefinedValueType$_SourceIndex_$10083_$_t_uint16_$returns$_t_userDefinedValueType$_EncodedDispatch_$10085_$",
                        "typeString": "function (address,SourceIndex,uint16) pure returns (EncodedDispatch)"
                      }
                    },
                    "id": 13276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:95:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_EncodedDispatch_$10085",
                      "typeString": "EncodedDispatch"
                    }
                  },
                  "functionReturnParameters": 13270,
                  "id": 13277,
                  "nodeType": "Return",
                  "src": "3364:102:68"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dispatchHandleTransfer",
            "nameLocation": "3269:23:68",
            "parameters": {
              "id": 13266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13265,
                  "mutability": "mutable",
                  "name": "expression_",
                  "nameLocation": "3301:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13279,
                  "src": "3293:19:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:21:68"
            },
            "returnParameters": {
              "id": 13270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13269,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13279,
                  "src": "3337:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_EncodedDispatch_$10085",
                    "typeString": "EncodedDispatch"
                  },
                  "typeName": {
                    "id": 13268,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13267,
                      "name": "EncodedDispatch",
                      "nameLocations": [
                        "3337:15:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10085,
                      "src": "3337:15:68"
                    },
                    "referencedDeclaration": 10085,
                    "src": "3337:15:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_EncodedDispatch_$10085",
                      "typeString": "EncodedDispatch"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3336:17:68"
            },
            "scope": 13650,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13385,
            "nodeType": "FunctionDefinition",
            "src": "3505:1230:68",
            "nodes": [],
            "body": {
              "id": 13384,
              "nodeType": "Block",
              "src": "3605:1130:68",
              "nodes": [],
              "statements": [
                {
                  "id": 13383,
                  "nodeType": "UncheckedBlock",
                  "src": "3615:1114:68",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 13293,
                            "name": "from_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13282,
                            "src": "3665:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13294,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13284,
                            "src": "3672:3:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13295,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13286,
                            "src": "3677:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 13290,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "3639:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_FlowERC20_$13650_$",
                              "typeString": "type(contract super FlowERC20)"
                            }
                          },
                          "id": 13292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3645:19:68",
                          "memberName": "_afterTokenTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2406,
                          "src": "3639:25:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 13296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3639:46:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 13297,
                      "nodeType": "ExpressionStatement",
                      "src": "3639:46:68"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13298,
                          "name": "evalHandleTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13143,
                          "src": "3837:18:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 13313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3859:43:68",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 13311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 13304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 13299,
                                    "name": "from_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13282,
                                    "src": "3861:5:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 13302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3878:1:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 13301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3870:7:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 13300,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3870:7:68",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3870:10:68",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3861:19:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 13310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 13305,
                                    "name": "to_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13284,
                                    "src": "3884:3:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 13308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3899:1:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 13307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3891:7:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 13306,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3891:7:68",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3891:10:68",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "3884:17:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3861:40:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 13312,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3860:42:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3837:65:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 13382,
                      "nodeType": "IfStatement",
                      "src": "3833:886:68",
                      "trueBody": {
                        "id": 13381,
                        "nodeType": "Block",
                        "src": "3904:815:68",
                        "statements": [
                          {
                            "assignments": [
                              13317
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 13317,
                                "mutability": "mutable",
                                "name": "evaluable_",
                                "nameLocation": "3939:10:68",
                                "nodeType": "VariableDeclaration",
                                "scope": 13381,
                                "src": "3922:27:68",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                  "typeString": "struct Evaluable"
                                },
                                "typeName": {
                                  "id": 13316,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 13315,
                                    "name": "Evaluable",
                                    "nameLocations": [
                                      "3922:9:68"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 10999,
                                    "src": "3922:9:68"
                                  },
                                  "referencedDeclaration": 10999,
                                  "src": "3922:9:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                                    "typeString": "struct Evaluable"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 13319,
                            "initialValue": {
                              "id": 13318,
                              "name": "evaluable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13146,
                              "src": "3952:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Evaluable_$10999_storage",
                                "typeString": "struct Evaluable storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3922:39:68"
                          },
                          {
                            "assignments": [
                              null,
                              13324
                            ],
                            "declarations": [
                              null,
                              {
                                "constant": false,
                                "id": 13324,
                                "mutability": "mutable",
                                "name": "kvs_",
                                "nameLocation": "3999:4:68",
                                "nodeType": "VariableDeclaration",
                                "scope": 13381,
                                "src": "3982:21:68",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[]"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 13322,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3982:7:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 13323,
                                  "nodeType": "ArrayTypeName",
                                  "src": "3982:9:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[]"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 13365,
                            "initialValue": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 13328,
                                    "name": "evaluable_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13317,
                                    "src": "4056:10:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                      "typeString": "struct Evaluable memory"
                                    }
                                  },
                                  "id": 13329,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4067:5:68",
                                  "memberName": "store",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10996,
                                  "src": "4056:16:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                    "typeString": "contract IInterpreterStoreV1"
                                  }
                                },
                                {
                                  "id": 13330,
                                  "name": "DEFAULT_STATE_NAMESPACE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10097,
                                  "src": "4094:23:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_StateNamespace_$10087",
                                    "typeString": "StateNamespace"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13332,
                                        "name": "evaluable_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13317,
                                        "src": "4163:10:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                          "typeString": "struct Evaluable memory"
                                        }
                                      },
                                      "id": 13333,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4174:10:68",
                                      "memberName": "expression",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10998,
                                      "src": "4163:21:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 13331,
                                    "name": "_dispatchHandleTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13279,
                                    "src": "4139:23:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_userDefinedValueType$_EncodedDispatch_$10085_$",
                                      "typeString": "function (address) pure returns (EncodedDispatch)"
                                    }
                                  },
                                  "id": 13334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4139:46:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_EncodedDispatch_$10085",
                                    "typeString": "EncodedDispatch"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 13343,
                                                      "name": "from_",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 13282,
                                                      "src": "4431:5:68",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 13342,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4423:7:68",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint160_$",
                                                      "typeString": "type(uint160)"
                                                    },
                                                    "typeName": {
                                                      "id": 13341,
                                                      "name": "uint160",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "4423:7:68",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 13344,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4423:14:68",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  }
                                                ],
                                                "id": 13340,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4415:7:68",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 13339,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4415:7:68",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 13345,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4415:23:68",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 13350,
                                                      "name": "to_",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 13284,
                                                      "src": "4456:3:68",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 13349,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4448:7:68",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint160_$",
                                                      "typeString": "type(uint160)"
                                                    },
                                                    "typeName": {
                                                      "id": 13348,
                                                      "name": "uint160",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "4448:7:68",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 13351,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4448:12:68",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                  }
                                                ],
                                                "id": 13347,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4440:7:68",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 13346,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4440:7:68",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 13352,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4440:21:68",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 13353,
                                              "name": "amount_",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 13286,
                                              "src": "4463:7:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 13337,
                                              "name": "LibUint256Array",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11785,
                                              "src": "4389:15:68",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_LibUint256Array_$11785_$",
                                                "typeString": "type(library LibUint256Array)"
                                              }
                                            },
                                            "id": 13338,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4405:9:68",
                                            "memberName": "arrayFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 11659,
                                            "src": "4389:25:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256[] memory)"
                                            }
                                          },
                                          "id": 13354,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4389:82:68",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 13355,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4472:10:68",
                                        "memberName": "matrixFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11853,
                                        "src": "4389:93:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                          "typeString": "function (uint256[] memory) pure returns (uint256[] memory[] memory)"
                                        }
                                      },
                                      "id": 13356,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4389:95:68",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory[] memory"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 13361,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4532:1:68",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 13360,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "4510:21:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$",
                                          "typeString": "function (uint256) pure returns (struct SignedContextV1 memory[] memory)"
                                        },
                                        "typeName": {
                                          "baseType": {
                                            "id": 13358,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                              "id": 13357,
                                              "name": "SignedContextV1",
                                              "nameLocations": [
                                                "4514:15:68"
                                              ],
                                              "nodeType": "IdentifierPath",
                                              "referencedDeclaration": 10021,
                                              "src": "4514:15:68"
                                            },
                                            "referencedDeclaration": 10021,
                                            "src": "4514:15:68",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                                              "typeString": "struct SignedContextV1"
                                            }
                                          },
                                          "id": 13359,
                                          "nodeType": "ArrayTypeName",
                                          "src": "4514:17:68",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                                            "typeString": "struct SignedContextV1[]"
                                          }
                                        }
                                      },
                                      "id": 13362,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4510:24:68",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct SignedContextV1 memory[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory[] memory"
                                      },
                                      {
                                        "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct SignedContextV1 memory[] memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 13335,
                                      "name": "LibContext",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10780,
                                      "src": "4207:10:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_LibContext_$10780_$",
                                        "typeString": "type(library LibContext)"
                                      }
                                    },
                                    "id": 13336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4218:5:68",
                                    "memberName": "build",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10779,
                                    "src": "4207:16:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                                      "typeString": "function (uint256[] memory[] memory,struct SignedContextV1 memory[] memory) view returns (uint256[] memory[] memory)"
                                    }
                                  },
                                  "id": 13363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4207:349:68",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                    "typeString": "contract IInterpreterStoreV1"
                                  },
                                  {
                                    "typeIdentifier": "t_userDefinedValueType$_StateNamespace_$10087",
                                    "typeString": "StateNamespace"
                                  },
                                  {
                                    "typeIdentifier": "t_userDefinedValueType$_EncodedDispatch_$10085",
                                    "typeString": "EncodedDispatch"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory[] memory"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 13325,
                                    "name": "evaluable_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13317,
                                    "src": "4007:10:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                      "typeString": "struct Evaluable memory"
                                    }
                                  },
                                  "id": 13326,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4018:11:68",
                                  "memberName": "interpreter",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10993,
                                  "src": "4007:22:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IInterpreterV1_$10128",
                                    "typeString": "contract IInterpreterV1"
                                  }
                                },
                                "id": 13327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4030:4:68",
                                "memberName": "eval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10127,
                                "src": "4007:27:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_contract$_IInterpreterStoreV1_$10078_$_t_userDefinedValueType$_StateNamespace_$10087_$_t_userDefinedValueType$_EncodedDispatch_$10085_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function (contract IInterpreterStoreV1,StateNamespace,EncodedDispatch,uint256[] memory[] memory) view external returns (uint256[] memory,uint256[] memory)"
                                }
                              },
                              "id": 13364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4007:567:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "tuple(uint256[] memory,uint256[] memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3979:595:68"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 13366,
                                  "name": "kvs_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13324,
                                  "src": "4596:4:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 13367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4601:6:68",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4596:11:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 13368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4610:1:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4596:15:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 13380,
                            "nodeType": "IfStatement",
                            "src": "4592:113:68",
                            "trueBody": {
                              "id": 13379,
                              "nodeType": "Block",
                              "src": "4613:92:68",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 13375,
                                        "name": "DEFAULT_STATE_NAMESPACE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10097,
                                        "src": "4656:23:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_userDefinedValueType$_StateNamespace_$10087",
                                          "typeString": "StateNamespace"
                                        }
                                      },
                                      {
                                        "id": 13376,
                                        "name": "kvs_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13324,
                                        "src": "4681:4:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_userDefinedValueType$_StateNamespace_$10087",
                                          "typeString": "StateNamespace"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 13370,
                                          "name": "evaluable_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13317,
                                          "src": "4635:10:68",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                            "typeString": "struct Evaluable memory"
                                          }
                                        },
                                        "id": 13373,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4646:5:68",
                                        "memberName": "store",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10996,
                                        "src": "4635:16:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                                          "typeString": "contract IInterpreterStoreV1"
                                        }
                                      },
                                      "id": 13374,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4652:3:68",
                                      "memberName": "set",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10066,
                                      "src": "4635:20:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_StateNamespace_$10087_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                        "typeString": "function (StateNamespace,uint256[] memory) external"
                                      }
                                    },
                                    "id": 13377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4635:51:68",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 13378,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4635:51:68"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "baseFunctions": [
              2406
            ],
            "documentation": {
              "id": 13280,
              "nodeType": "StructuredDocumentation",
              "src": "3479:21:68",
              "text": "@inheritdoc ERC20"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "3514:19:68",
            "overrides": {
              "id": 13288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3596:8:68"
            },
            "parameters": {
              "id": 13287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13282,
                  "mutability": "mutable",
                  "name": "from_",
                  "nameLocation": "3542:5:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13385,
                  "src": "3534:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3534:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13284,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "3557:3:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13385,
                  "src": "3549:11:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3549:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13286,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "3570:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13385,
                  "src": "3562:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3533:45:68"
            },
            "returnParameters": {
              "id": 13289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3605:0:68"
            },
            "scope": 13650,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13468,
            "nodeType": "FunctionDefinition",
            "src": "4741:947:68",
            "nodes": [],
            "body": {
              "id": 13467,
              "nodeType": "Block",
              "src": "4928:760:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13405,
                      "mutability": "mutable",
                      "name": "mints_",
                      "nameLocation": "4965:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "4938:33:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20SupplyChange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 13403,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 13402,
                            "name": "ERC20SupplyChange",
                            "nameLocations": [
                              "4938:17:68"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14509,
                            "src": "4938:17:68"
                          },
                          "referencedDeclaration": 14509,
                          "src": "4938:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_storage_ptr",
                            "typeString": "struct ERC20SupplyChange"
                          }
                        },
                        "id": 13404,
                        "nodeType": "ArrayTypeName",
                        "src": "4938:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20SupplyChange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4938:33:68"
                },
                {
                  "assignments": [
                    13411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13411,
                      "mutability": "mutable",
                      "name": "burns_",
                      "nameLocation": "5008:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "4981:33:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC20SupplyChange[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 13409,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 13408,
                            "name": "ERC20SupplyChange",
                            "nameLocations": [
                              "4981:17:68"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14509,
                            "src": "4981:17:68"
                          },
                          "referencedDeclaration": 14509,
                          "src": "4981:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_storage_ptr",
                            "typeString": "struct ERC20SupplyChange"
                          }
                        },
                        "id": 13410,
                        "nodeType": "ArrayTypeName",
                        "src": "4981:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20SupplyChange[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13412,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4981:33:68"
                },
                {
                  "assignments": [
                    13415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13415,
                      "mutability": "mutable",
                      "name": "tuplesPointer_",
                      "nameLocation": "5032:14:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "5024:22:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 13414,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13413,
                          "name": "Pointer",
                          "nameLocations": [
                            "5024:7:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11218,
                          "src": "5024:7:68"
                        },
                        "referencedDeclaration": 11218,
                        "src": "5024:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13416,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5024:22:68"
                },
                {
                  "assignments": [
                    13419,
                    13422,
                    13425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13419,
                      "mutability": "mutable",
                      "name": "stackBottom_",
                      "nameLocation": "5065:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "5057:20:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 13418,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13417,
                          "name": "Pointer",
                          "nameLocations": [
                            "5057:7:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11218,
                          "src": "5057:7:68"
                        },
                        "referencedDeclaration": 11218,
                        "src": "5057:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13422,
                      "mutability": "mutable",
                      "name": "stackTop_",
                      "nameLocation": "5087:9:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "5079:17:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 13421,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13420,
                          "name": "Pointer",
                          "nameLocations": [
                            "5079:7:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11218,
                          "src": "5079:7:68"
                        },
                        "referencedDeclaration": 11218,
                        "src": "5079:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13425,
                      "mutability": "mutable",
                      "name": "kvs_",
                      "nameLocation": "5115:4:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13467,
                      "src": "5098:21:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 13423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5098:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13424,
                        "nodeType": "ArrayTypeName",
                        "src": "5098:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13427,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13388,
                        "src": "5133:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 13428,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13392,
                        "src": "5145:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 13426,
                      "name": "flowStack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12170,
                      "src": "5123:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (Pointer,Pointer,uint256[] memory)"
                      }
                    },
                    "id": 13429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5123:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(Pointer,Pointer,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5056:98:68"
                },
                {
                  "expression": {
                    "id": 13440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 13431,
                          "name": "stackTop_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13422,
                          "src": "5182:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        {
                          "id": 13432,
                          "name": "tuplesPointer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13415,
                          "src": "5193:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        }
                      ],
                      "id": 13433,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5181:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$",
                        "typeString": "tuple(Pointer,Pointer)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13436,
                          "name": "stackTop_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13422,
                          "src": "5246:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        {
                          "id": 13437,
                          "name": "RAIN_FLOW_ERC20_SENTINEL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13091,
                          "src": "5257:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
                            "typeString": "Sentinel"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 13438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5283:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
                            "typeString": "Sentinel"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 13434,
                          "name": "stackBottom_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13419,
                          "src": "5211:12:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        "id": 13435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5224:21:68",
                        "memberName": "consumeSentinelTuples",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11556,
                        "src": "5211:34:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Sentinel_$11512_$_t_uint256_$returns$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$attached_to$_t_userDefinedValueType$_Pointer_$11218_$",
                          "typeString": "function (Pointer,Pointer,Sentinel,uint256) pure returns (Pointer,Pointer)"
                        }
                      },
                      "id": 13439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5211:74:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$",
                        "typeString": "tuple(Pointer,Pointer)"
                      }
                    },
                    "src": "5181:104:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13441,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:104:68"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5320:48:68",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5334:24:68",
                        "value": {
                          "name": "tuplesPointer_",
                          "nodeType": "YulIdentifier",
                          "src": "5344:14:68"
                        },
                        "variableNames": [
                          {
                            "name": "mints_",
                            "nodeType": "YulIdentifier",
                            "src": "5334:6:68"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 13405,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5334:6:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13415,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5344:14:68",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 13442,
                  "nodeType": "InlineAssembly",
                  "src": "5295:73:68"
                },
                {
                  "expression": {
                    "id": 13452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 13443,
                          "name": "stackTop_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13422,
                          "src": "5395:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        {
                          "id": 13444,
                          "name": "tuplesPointer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13415,
                          "src": "5406:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        }
                      ],
                      "id": 13445,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5394:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$",
                        "typeString": "tuple(Pointer,Pointer)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13448,
                          "name": "stackTop_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13422,
                          "src": "5459:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        {
                          "id": 13449,
                          "name": "RAIN_FLOW_ERC20_SENTINEL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13091,
                          "src": "5470:24:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
                            "typeString": "Sentinel"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 13450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5496:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Sentinel_$11512",
                            "typeString": "Sentinel"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 13446,
                          "name": "stackBottom_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13419,
                          "src": "5424:12:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                            "typeString": "Pointer"
                          }
                        },
                        "id": 13447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5437:21:68",
                        "memberName": "consumeSentinelTuples",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11556,
                        "src": "5424:34:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Sentinel_$11512_$_t_uint256_$returns$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$attached_to$_t_userDefinedValueType$_Pointer_$11218_$",
                          "typeString": "function (Pointer,Pointer,Sentinel,uint256) pure returns (Pointer,Pointer)"
                        }
                      },
                      "id": 13451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5424:74:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$",
                        "typeString": "tuple(Pointer,Pointer)"
                      }
                    },
                    "src": "5394:104:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13453,
                  "nodeType": "ExpressionStatement",
                  "src": "5394:104:68"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5533:48:68",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5547:24:68",
                        "value": {
                          "name": "tuplesPointer_",
                          "nodeType": "YulIdentifier",
                          "src": "5557:14:68"
                        },
                        "variableNames": [
                          {
                            "name": "burns_",
                            "nodeType": "YulIdentifier",
                            "src": "5547:6:68"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 13411,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5547:6:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13415,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5557:14:68",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 13454,
                  "nodeType": "InlineAssembly",
                  "src": "5508:73:68"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 13456,
                            "name": "mints_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13405,
                            "src": "5613:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            }
                          },
                          {
                            "id": 13457,
                            "name": "burns_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13411,
                            "src": "5621:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 13460,
                                "name": "stackBottom_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13419,
                                "src": "5649:12:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                                  "typeString": "Pointer"
                                }
                              },
                              {
                                "id": 13461,
                                "name": "stackTop_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13422,
                                "src": "5663:9:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                                  "typeString": "Pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                                  "typeString": "Pointer"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Pointer_$11218",
                                  "typeString": "Pointer"
                                }
                              ],
                              "expression": {
                                "id": 13458,
                                "name": "LibFlow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16066,
                                "src": "5629:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibFlow_$16066_$",
                                  "typeString": "type(library LibFlow)"
                                }
                              },
                              "id": 13459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5637:11:68",
                              "memberName": "stackToFlow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15816,
                              "src": "5629:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$11218_$_t_userDefinedValueType$_Pointer_$11218_$returns$_t_struct$_FlowTransferV1_$14707_memory_ptr_$",
                                "typeString": "function (Pointer,Pointer) pure returns (struct FlowTransferV1 memory)"
                              }
                            },
                            "id": 13462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5629:44:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                              "typeString": "struct FlowTransferV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                              "typeString": "struct FlowTransferV1 memory"
                            }
                          ],
                          "id": 13455,
                          "name": "FlowERC20IOV1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14521,
                          "src": "5599:13:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FlowERC20IOV1_$14521_storage_ptr_$",
                            "typeString": "type(struct FlowERC20IOV1 storage pointer)"
                          }
                        },
                        "id": 13463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5599:75:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                          "typeString": "struct FlowERC20IOV1 memory"
                        }
                      },
                      {
                        "id": 13464,
                        "name": "kvs_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13425,
                        "src": "5676:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 13465,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5598:83:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct FlowERC20IOV1 memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 13400,
                  "id": 13466,
                  "nodeType": "Return",
                  "src": "5591:90:68"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_previewFlow",
            "nameLocation": "4750:12:68",
            "parameters": {
              "id": 13393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13388,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "4780:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13468,
                  "src": "4763:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 13387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13386,
                      "name": "Evaluable",
                      "nameLocations": [
                        "4763:9:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "4763:9:68"
                    },
                    "referencedDeclaration": 10999,
                    "src": "4763:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13392,
                  "mutability": "mutable",
                  "name": "context_",
                  "nameLocation": "4811:8:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13468,
                  "src": "4792:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 13389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4792:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13390,
                      "nodeType": "ArrayTypeName",
                      "src": "4792:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 13391,
                    "nodeType": "ArrayTypeName",
                    "src": "4792:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4762:58:68"
            },
            "returnParameters": {
              "id": 13400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13468,
                  "src": "4884:20:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                    "typeString": "struct FlowERC20IOV1"
                  },
                  "typeName": {
                    "id": 13395,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13394,
                      "name": "FlowERC20IOV1",
                      "nameLocations": [
                        "4884:13:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14521,
                      "src": "4884:13:68"
                    },
                    "referencedDeclaration": 14521,
                    "src": "4884:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                      "typeString": "struct FlowERC20IOV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13468,
                  "src": "4906:16:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13397,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4906:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13398,
                    "nodeType": "ArrayTypeName",
                    "src": "4906:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4883:40:68"
            },
            "scope": 13650,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13585,
            "nodeType": "FunctionDefinition",
            "src": "5694:913:68",
            "nodes": [],
            "body": {
              "id": 13584,
              "nodeType": "Block",
              "src": "5904:703:68",
              "nodes": [],
              "statements": [
                {
                  "id": 13583,
                  "nodeType": "UncheckedBlock",
                  "src": "5914:687:68",
                  "statements": [
                    {
                      "assignments": [
                        13491
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 13491,
                          "mutability": "mutable",
                          "name": "context_",
                          "nameLocation": "5957:8:68",
                          "nodeType": "VariableDeclaration",
                          "scope": 13583,
                          "src": "5938:27:68",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                            "typeString": "uint256[][]"
                          },
                          "typeName": {
                            "baseType": {
                              "baseType": {
                                "id": 13488,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5938:7:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 13489,
                              "nodeType": "ArrayTypeName",
                              "src": "5938:9:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "id": 13490,
                            "nodeType": "ArrayTypeName",
                            "src": "5938:11:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                              "typeString": "uint256[][]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 13499,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 13494,
                                "name": "callerContext_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13474,
                                "src": "5985:14:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 13495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6000:10:68",
                              "memberName": "matrixFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11853,
                              "src": "5985:25:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256[] memory) pure returns (uint256[] memory[] memory)"
                              }
                            },
                            "id": 13496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5985:27:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          },
                          {
                            "id": 13497,
                            "name": "signedContexts_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13478,
                            "src": "6014:15:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct SignedContextV1 memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct SignedContextV1 memory[] memory"
                            }
                          ],
                          "expression": {
                            "id": 13492,
                            "name": "LibContext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10780,
                            "src": "5968:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibContext_$10780_$",
                              "typeString": "type(library LibContext)"
                            }
                          },
                          "id": 13493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5979:5:68",
                          "memberName": "build",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10779,
                          "src": "5968:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory[] memory,struct SignedContextV1 memory[] memory) view returns (uint256[] memory[] memory)"
                          }
                        },
                        "id": 13498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5968:62:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5938:92:68"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13501,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6057:3:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6061:6:68",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6057:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 13503,
                            "name": "context_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13491,
                            "src": "6069:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          ],
                          "id": 13500,
                          "name": "Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10040,
                          "src": "6049:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (address,uint256[] memory[] memory)"
                          }
                        },
                        "id": 13504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6049:29:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 13505,
                      "nodeType": "EmitStatement",
                      "src": "6044:34:68"
                    },
                    {
                      "assignments": [
                        13508,
                        13511
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 13508,
                          "mutability": "mutable",
                          "name": "flowIO_",
                          "nameLocation": "6114:7:68",
                          "nodeType": "VariableDeclaration",
                          "scope": 13583,
                          "src": "6093:28:68",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                            "typeString": "struct FlowERC20IOV1"
                          },
                          "typeName": {
                            "id": 13507,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 13506,
                              "name": "FlowERC20IOV1",
                              "nameLocations": [
                                "6093:13:68"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 14521,
                              "src": "6093:13:68"
                            },
                            "referencedDeclaration": 14521,
                            "src": "6093:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                              "typeString": "struct FlowERC20IOV1"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 13511,
                          "mutability": "mutable",
                          "name": "kvs_",
                          "nameLocation": "6140:4:68",
                          "nodeType": "VariableDeclaration",
                          "scope": 13583,
                          "src": "6123:21:68",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 13509,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6123:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 13510,
                            "nodeType": "ArrayTypeName",
                            "src": "6123:9:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 13516,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 13513,
                            "name": "evaluable_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13471,
                            "src": "6161:10:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                              "typeString": "struct Evaluable memory"
                            }
                          },
                          {
                            "id": 13514,
                            "name": "context_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13491,
                            "src": "6173:8:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                              "typeString": "struct Evaluable memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                              "typeString": "uint256[] memory[] memory"
                            }
                          ],
                          "id": 13512,
                          "name": "_previewFlow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13468,
                          "src": "6148:12:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (struct FlowERC20IOV1 memory,uint256[] memory)"
                          }
                        },
                        "id": 13515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6148:34:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "tuple(struct FlowERC20IOV1 memory,uint256[] memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6092:90:68"
                    },
                    {
                      "body": {
                        "id": 13542,
                        "nodeType": "Block",
                        "src": "6250:91:68",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 13530,
                                        "name": "flowIO_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13508,
                                        "src": "6274:7:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                          "typeString": "struct FlowERC20IOV1 memory"
                                        }
                                      },
                                      "id": 13531,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6282:5:68",
                                      "memberName": "mints",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 14513,
                                      "src": "6274:13:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ERC20SupplyChange memory[] memory"
                                      }
                                    },
                                    "id": 13533,
                                    "indexExpression": {
                                      "id": 13532,
                                      "name": "i_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13518,
                                      "src": "6288:2:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6274:17:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_memory_ptr",
                                      "typeString": "struct ERC20SupplyChange memory"
                                    }
                                  },
                                  "id": 13534,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6292:7:68",
                                  "memberName": "account",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14506,
                                  "src": "6274:25:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 13535,
                                        "name": "flowIO_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13508,
                                        "src": "6301:7:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                          "typeString": "struct FlowERC20IOV1 memory"
                                        }
                                      },
                                      "id": 13536,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6309:5:68",
                                      "memberName": "mints",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 14513,
                                      "src": "6301:13:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ERC20SupplyChange memory[] memory"
                                      }
                                    },
                                    "id": 13538,
                                    "indexExpression": {
                                      "id": 13537,
                                      "name": "i_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13518,
                                      "src": "6315:2:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6301:17:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_memory_ptr",
                                      "typeString": "struct ERC20SupplyChange memory"
                                    }
                                  },
                                  "id": 13539,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6319:6:68",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14508,
                                  "src": "6301:24:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 13529,
                                "name": "_mint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2224,
                                "src": "6268:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 13540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6268:58:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 13541,
                            "nodeType": "ExpressionStatement",
                            "src": "6268:58:68"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13521,
                          "name": "i_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13518,
                          "src": "6217:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 13522,
                              "name": "flowIO_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13508,
                              "src": "6222:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                "typeString": "struct FlowERC20IOV1 memory"
                              }
                            },
                            "id": 13523,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6230:5:68",
                            "memberName": "mints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14513,
                            "src": "6222:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            }
                          },
                          "id": 13524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6236:6:68",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6222:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6217:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 13543,
                      "initializationExpression": {
                        "assignments": [
                          13518
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13518,
                            "mutability": "mutable",
                            "name": "i_",
                            "nameLocation": "6209:2:68",
                            "nodeType": "VariableDeclaration",
                            "scope": 13543,
                            "src": "6201:10:68",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 13517,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6201:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13520,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 13519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6214:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6201:14:68"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 13527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6244:4:68",
                          "subExpression": {
                            "id": 13526,
                            "name": "i_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13518,
                            "src": "6244:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13528,
                        "nodeType": "ExpressionStatement",
                        "src": "6244:4:68"
                      },
                      "nodeType": "ForStatement",
                      "src": "6196:145:68"
                    },
                    {
                      "body": {
                        "id": 13569,
                        "nodeType": "Block",
                        "src": "6408:91:68",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 13557,
                                        "name": "flowIO_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13508,
                                        "src": "6432:7:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                          "typeString": "struct FlowERC20IOV1 memory"
                                        }
                                      },
                                      "id": 13558,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6440:5:68",
                                      "memberName": "burns",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 14517,
                                      "src": "6432:13:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ERC20SupplyChange memory[] memory"
                                      }
                                    },
                                    "id": 13560,
                                    "indexExpression": {
                                      "id": 13559,
                                      "name": "i_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13545,
                                      "src": "6446:2:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6432:17:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_memory_ptr",
                                      "typeString": "struct ERC20SupplyChange memory"
                                    }
                                  },
                                  "id": 13561,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6450:7:68",
                                  "memberName": "account",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14506,
                                  "src": "6432:25:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 13562,
                                        "name": "flowIO_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13508,
                                        "src": "6459:7:68",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                          "typeString": "struct FlowERC20IOV1 memory"
                                        }
                                      },
                                      "id": 13563,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6467:5:68",
                                      "memberName": "burns",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 14517,
                                      "src": "6459:13:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ERC20SupplyChange memory[] memory"
                                      }
                                    },
                                    "id": 13565,
                                    "indexExpression": {
                                      "id": 13564,
                                      "name": "i_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13545,
                                      "src": "6473:2:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6459:17:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20SupplyChange_$14509_memory_ptr",
                                      "typeString": "struct ERC20SupplyChange memory"
                                    }
                                  },
                                  "id": 13566,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6477:6:68",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14508,
                                  "src": "6459:24:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 13556,
                                "name": "_burn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2296,
                                "src": "6426:5:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 13567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6426:58:68",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 13568,
                            "nodeType": "ExpressionStatement",
                            "src": "6426:58:68"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13548,
                          "name": "i_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13545,
                          "src": "6375:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 13549,
                              "name": "flowIO_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13508,
                              "src": "6380:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                "typeString": "struct FlowERC20IOV1 memory"
                              }
                            },
                            "id": 13550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6388:5:68",
                            "memberName": "burns",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14517,
                            "src": "6380:13:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ERC20SupplyChange_$14509_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC20SupplyChange memory[] memory"
                            }
                          },
                          "id": 13551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6394:6:68",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6380:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6375:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 13570,
                      "initializationExpression": {
                        "assignments": [
                          13545
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13545,
                            "mutability": "mutable",
                            "name": "i_",
                            "nameLocation": "6367:2:68",
                            "nodeType": "VariableDeclaration",
                            "scope": 13570,
                            "src": "6359:10:68",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 13544,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6359:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13547,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 13546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6372:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6359:14:68"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 13554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6402:4:68",
                          "subExpression": {
                            "id": 13553,
                            "name": "i_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13545,
                            "src": "6402:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13555,
                        "nodeType": "ExpressionStatement",
                        "src": "6402:4:68"
                      },
                      "nodeType": "ForStatement",
                      "src": "6354:145:68"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13574,
                              "name": "flowIO_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13508,
                              "src": "6525:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                                "typeString": "struct FlowERC20IOV1 memory"
                              }
                            },
                            "id": 13575,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6533:4:68",
                            "memberName": "flow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14520,
                            "src": "6525:12:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                              "typeString": "struct FlowTransferV1 memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 13576,
                              "name": "evaluable_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13471,
                              "src": "6539:10:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                                "typeString": "struct Evaluable memory"
                              }
                            },
                            "id": 13577,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6550:5:68",
                            "memberName": "store",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10996,
                            "src": "6539:16:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                              "typeString": "contract IInterpreterStoreV1"
                            }
                          },
                          {
                            "id": 13578,
                            "name": "kvs_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13511,
                            "src": "6557:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_FlowTransferV1_$14707_memory_ptr",
                              "typeString": "struct FlowTransferV1 memory"
                            },
                            {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$10078",
                              "typeString": "contract IInterpreterStoreV1"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 13571,
                            "name": "LibFlow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16066,
                            "src": "6512:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibFlow_$16066_$",
                              "typeString": "type(library LibFlow)"
                            }
                          },
                          "id": 13573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6520:4:68",
                          "memberName": "flow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16065,
                          "src": "6512:12:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FlowTransferV1_$14707_memory_ptr_$_t_contract$_IInterpreterStoreV1_$10078_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (struct FlowTransferV1 memory,contract IInterpreterStoreV1,uint256[] memory)"
                          }
                        },
                        "id": 13579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:50:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 13580,
                      "nodeType": "ExpressionStatement",
                      "src": "6512:50:68"
                    },
                    {
                      "expression": {
                        "id": 13581,
                        "name": "flowIO_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13508,
                        "src": "6583:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                          "typeString": "struct FlowERC20IOV1 memory"
                        }
                      },
                      "functionReturnParameters": 13485,
                      "id": 13582,
                      "nodeType": "Return",
                      "src": "6576:14:68"
                    }
                  ]
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13480,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5860:12:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 212,
                  "src": "5860:12:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "5860:12:68"
              }
            ],
            "name": "_flow",
            "nameLocation": "5703:5:68",
            "parameters": {
              "id": 13479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13471,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "5735:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13585,
                  "src": "5718:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 13470,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13469,
                      "name": "Evaluable",
                      "nameLocations": [
                        "5718:9:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "5718:9:68"
                    },
                    "referencedDeclaration": 10999,
                    "src": "5718:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13474,
                  "mutability": "mutable",
                  "name": "callerContext_",
                  "nameLocation": "5772:14:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13585,
                  "src": "5755:31:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13472,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5755:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13473,
                    "nodeType": "ArrayTypeName",
                    "src": "5755:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13478,
                  "mutability": "mutable",
                  "name": "signedContexts_",
                  "nameLocation": "5821:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13585,
                  "src": "5796:40:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13476,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13475,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "5796:15:68"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10021,
                        "src": "5796:15:68"
                      },
                      "referencedDeclaration": 10021,
                      "src": "5796:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 13477,
                    "nodeType": "ArrayTypeName",
                    "src": "5796:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5708:134:68"
            },
            "returnParameters": {
              "id": 13485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13585,
                  "src": "5882:20:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                    "typeString": "struct FlowERC20IOV1"
                  },
                  "typeName": {
                    "id": 13483,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13482,
                      "name": "FlowERC20IOV1",
                      "nameLocations": [
                        "5882:13:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14521,
                      "src": "5882:13:68"
                    },
                    "referencedDeclaration": 14521,
                    "src": "5882:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                      "typeString": "struct FlowERC20IOV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5881:22:68"
            },
            "scope": 13650,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13626,
            "nodeType": "FunctionDefinition",
            "src": "6613:429:68",
            "nodes": [],
            "body": {
              "id": 13625,
              "nodeType": "Block",
              "src": "6821:221:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13606,
                      "mutability": "mutable",
                      "name": "context_",
                      "nameLocation": "6850:8:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13625,
                      "src": "6831:27:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 13603,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6831:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 13604,
                          "nodeType": "ArrayTypeName",
                          "src": "6831:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 13605,
                        "nodeType": "ArrayTypeName",
                        "src": "6831:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13614,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13609,
                            "name": "callerContext_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13591,
                            "src": "6878:14:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 13610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6893:10:68",
                          "memberName": "matrixFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11853,
                          "src": "6878:25:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory) pure returns (uint256[] memory[] memory)"
                          }
                        },
                        "id": 13611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6878:27:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "id": 13612,
                        "name": "signedContexts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13595,
                        "src": "6907:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 13607,
                        "name": "LibContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10780,
                        "src": "6861:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibContext_$10780_$",
                          "typeString": "type(library LibContext)"
                        }
                      },
                      "id": 13608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6872:5:68",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10779,
                      "src": "6861:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[] memory[] memory,struct SignedContextV1 memory[] memory) view returns (uint256[] memory[] memory)"
                      }
                    },
                    "id": 13613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6861:62:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6831:92:68"
                },
                {
                  "assignments": [
                    13617,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13617,
                      "mutability": "mutable",
                      "name": "flowERC20IO_",
                      "nameLocation": "6955:12:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 13625,
                      "src": "6934:33:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                        "typeString": "struct FlowERC20IOV1"
                      },
                      "typeName": {
                        "id": 13616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13615,
                          "name": "FlowERC20IOV1",
                          "nameLocations": [
                            "6934:13:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14521,
                          "src": "6934:13:68"
                        },
                        "referencedDeclaration": 14521,
                        "src": "6934:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                          "typeString": "struct FlowERC20IOV1"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13619,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13588,
                        "src": "6985:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 13620,
                        "name": "context_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13606,
                        "src": "6997:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 13618,
                      "name": "_previewFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13468,
                      "src": "6972:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory[] memory) view returns (struct FlowERC20IOV1 memory,uint256[] memory)"
                      }
                    },
                    "id": 13621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6972:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct FlowERC20IOV1 memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6933:73:68"
                },
                {
                  "expression": {
                    "id": 13623,
                    "name": "flowERC20IO_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13617,
                    "src": "7023:12:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                      "typeString": "struct FlowERC20IOV1 memory"
                    }
                  },
                  "functionReturnParameters": 13600,
                  "id": 13624,
                  "nodeType": "Return",
                  "src": "7016:19:68"
                }
              ]
            },
            "baseFunctions": [
              15521
            ],
            "functionSelector": "90bcad69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewFlow",
            "nameLocation": "6622:11:68",
            "parameters": {
              "id": 13596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13588,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "6660:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13626,
                  "src": "6643:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 13587,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13586,
                      "name": "Evaluable",
                      "nameLocations": [
                        "6643:9:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "6643:9:68"
                    },
                    "referencedDeclaration": 10999,
                    "src": "6643:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13591,
                  "mutability": "mutable",
                  "name": "callerContext_",
                  "nameLocation": "6697:14:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13626,
                  "src": "6680:31:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13589,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6680:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13590,
                    "nodeType": "ArrayTypeName",
                    "src": "6680:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13595,
                  "mutability": "mutable",
                  "name": "signedContexts_",
                  "nameLocation": "6746:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13626,
                  "src": "6721:40:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13593,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13592,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "6721:15:68"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10021,
                        "src": "6721:15:68"
                      },
                      "referencedDeclaration": 10021,
                      "src": "6721:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 13594,
                    "nodeType": "ArrayTypeName",
                    "src": "6721:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6633:134:68"
            },
            "returnParameters": {
              "id": 13600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13626,
                  "src": "6799:20:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                    "typeString": "struct FlowERC20IOV1"
                  },
                  "typeName": {
                    "id": 13598,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13597,
                      "name": "FlowERC20IOV1",
                      "nameLocations": [
                        "6799:13:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14521,
                      "src": "6799:13:68"
                    },
                    "referencedDeclaration": 14521,
                    "src": "6799:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                      "typeString": "struct FlowERC20IOV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6798:22:68"
            },
            "scope": 13650,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 13649,
            "nodeType": "FunctionDefinition",
            "src": "7048:270:68",
            "nodes": [],
            "body": {
              "id": 13648,
              "nodeType": "Block",
              "src": "7244:74:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13643,
                        "name": "evaluable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13629,
                        "src": "7267:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        }
                      },
                      {
                        "id": 13644,
                        "name": "callerContext_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13632,
                        "src": "7279:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 13645,
                        "name": "signedContexts_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13636,
                        "src": "7295:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                          "typeString": "struct Evaluable memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      ],
                      "id": 13642,
                      "name": "_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13585,
                      "src": "7261:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Evaluable_$10999_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_FlowERC20IOV1_$14521_memory_ptr_$",
                        "typeString": "function (struct Evaluable memory,uint256[] memory,struct SignedContextV1 memory[] memory) returns (struct FlowERC20IOV1 memory)"
                      }
                    },
                    "id": 13646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7261:50:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                      "typeString": "struct FlowERC20IOV1 memory"
                    }
                  },
                  "functionReturnParameters": 13641,
                  "id": 13647,
                  "nodeType": "Return",
                  "src": "7254:57:68"
                }
              ]
            },
            "baseFunctions": [
              15537
            ],
            "functionSelector": "f83d765a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flow",
            "nameLocation": "7057:4:68",
            "parameters": {
              "id": 13637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13629,
                  "mutability": "mutable",
                  "name": "evaluable_",
                  "nameLocation": "7088:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13649,
                  "src": "7071:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Evaluable_$10999_memory_ptr",
                    "typeString": "struct Evaluable"
                  },
                  "typeName": {
                    "id": 13628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13627,
                      "name": "Evaluable",
                      "nameLocations": [
                        "7071:9:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10999,
                      "src": "7071:9:68"
                    },
                    "referencedDeclaration": 10999,
                    "src": "7071:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Evaluable_$10999_storage_ptr",
                      "typeString": "struct Evaluable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13632,
                  "mutability": "mutable",
                  "name": "callerContext_",
                  "nameLocation": "7125:14:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13649,
                  "src": "7108:31:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13630,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7108:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13631,
                    "nodeType": "ArrayTypeName",
                    "src": "7108:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13636,
                  "mutability": "mutable",
                  "name": "signedContexts_",
                  "nameLocation": "7174:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 13649,
                  "src": "7149:40:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13634,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13633,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "7149:15:68"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10021,
                        "src": "7149:15:68"
                      },
                      "referencedDeclaration": 10021,
                      "src": "7149:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$10021_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 13635,
                    "nodeType": "ArrayTypeName",
                    "src": "7149:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$10021_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7061:134:68"
            },
            "returnParameters": {
              "id": 13641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13649,
                  "src": "7222:20:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_memory_ptr",
                    "typeString": "struct FlowERC20IOV1"
                  },
                  "typeName": {
                    "id": 13639,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13638,
                      "name": "FlowERC20IOV1",
                      "nameLocations": [
                        "7222:13:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14521,
                      "src": "7222:13:68"
                    },
                    "referencedDeclaration": 14521,
                    "src": "7222:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowERC20IOV1_$14521_storage_ptr",
                      "typeString": "struct FlowERC20IOV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7221:22:68"
            },
            "scope": 13650,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13106,
              "name": "ICloneableV2",
              "nameLocations": [
                "1399:12:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9754,
              "src": "1399:12:68"
            },
            "id": 13107,
            "nodeType": "InheritanceSpecifier",
            "src": "1399:12:68"
          },
          {
            "baseName": {
              "id": 13108,
              "name": "IFlowERC20V4",
              "nameLocations": [
                "1413:12:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15538,
              "src": "1413:12:68"
            },
            "id": 13109,
            "nodeType": "InheritanceSpecifier",
            "src": "1413:12:68"
          },
          {
            "baseName": {
              "id": 13110,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1427:15:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 252,
              "src": "1427:15:68"
            },
            "id": 13111,
            "nodeType": "InheritanceSpecifier",
            "src": "1427:15:68"
          },
          {
            "baseName": {
              "id": 13112,
              "name": "FlowCommon",
              "nameLocations": [
                "1444:10:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12171,
              "src": "1444:10:68"
            },
            "id": 13113,
            "nodeType": "InheritanceSpecifier",
            "src": "1444:10:68"
          },
          {
            "baseName": {
              "id": 13114,
              "name": "ERC20",
              "nameLocations": [
                "1456:5:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "1456:5:68"
            },
            "id": 13115,
            "nodeType": "InheritanceSpecifier",
            "src": "1456:5:68"
          }
        ],
        "canonicalName": "FlowERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13105,
          "nodeType": "StructuredDocumentation",
          "src": "1356:21:68",
          "text": "@title FlowERC20"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13650,
          2412,
          2515,
          2490,
          4047,
          12171,
          9969,
          9830,
          10041,
          4122,
          1746,
          1800,
          1538,
          4395,
          4407,
          3675,
          3485,
          252,
          168,
          15538,
          9754
        ],
        "name": "FlowERC20",
        "nameLocation": "1386:9:68",
        "scope": 13651,
        "usedErrors": [
          9745,
          9810,
          9815,
          10212,
          10495,
          11510,
          11914,
          11919,
          15681,
          15684,
          15687
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 68
}